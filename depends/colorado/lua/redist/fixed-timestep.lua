local Object = require "Colorado.classic"
local M = Object:extend ()

-- Implements http://gafferongames.com/game-physics/fix-your-timestep/

--[[
logicStep is a function that will be called fpsNum / fpsDen times per second
--]]
function M:new (fpsNum, fpsDen)
	self.accumulator = 0
	self.fpsNum = fpsNum
	self.fpsDen = fpsDen
	
	self.maxSteps = 8
end

-- Advance time by dt seconds
-- Usually I use milliseconds but LOVE uses seconds
function M:step (dt, logicStep)
	self.accumulator = self.accumulator + dt * self.fpsNum
	
	--[[
	Only do maxSteps iterations, otherwise if the computer is slow
	it may "death spiral"
	--]]
	for i = 1, self.maxSteps do
		if self.accumulator >= 0.0 then
			self.accumulator = self.accumulator - self.fpsDen
			
			if logicStep then
				logicStep ()
			end
		end
		
		-- If we've accounted for all the time generated by the graphics,
		-- then don't do any more logic for now
		if self.accumulator <= 0.0 then
			break
		end
	end
	
	-- If we're iterating as much as possible and still have time left over,
	-- then the game is lagging badly and we shouldn't even bother
	if self.accumulator > 0.0 then
		self.accumulator = 0.0
	end
end

return M