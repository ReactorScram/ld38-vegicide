/***************************************************************************
*
* GLee.h 
* GLee (OpenGL Easy Extension library)        
* Version : 5.5
*
* Copyright (c)2011  Ben Woodhouse  All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are 
* met:
* 1. Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer as
* the first lines of this file unmodified.
* 2. Redistributions in binary form must reproduce the above copyright
* notice, this list of conditions and the following disclaimer in the
* documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY BEN WOODHOUSE ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL BEN WOODHOUSE BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*
* [This file was automatically generated by GLeeGen 7.0
*
***************************************************************************/










typedef void (*GLEE_FUNC)(void);

struct _cl_context;
struct _cl_event;

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef unsigned short GLhalf;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;

typedef void * HANDLE;
typedef bool BOOL;
typedef void VOID;
typedef void * HDC;
typedef long INT64;
typedef int INT32;
typedef unsigned long DWORD;

typedef void * HPVIDEODEV;
typedef void * HPBUFFERARB;
typedef void * GLXFBConfig;
typedef void * Display;
typedef void * XVisualInfo;
typedef void * GLXWindow;
typedef void * Window;
typedef void * GLXPixmap;
typedef void * Pixmap;
typedef void * GLXPbuffer;
typedef void * GLXDrawable;
typedef void * GLXContext;
typedef void * GLXContextID;
typedef void * GLXPbufferSGIX;
typedef void * Status;
typedef void * Colormap;
typedef void * GLXHyperpipeNetworkSGIX;
typedef void * GLXHyperpipeConfigSGIX;
typedef void * GLXVideoCaptureDeviceNV;

/* Extension querying variables */

extern GLboolean _GLEE_VERSION_1_2;
extern GLboolean _GLEE_ARB_imaging;
extern GLboolean _GLEE_VERSION_1_3;
extern GLboolean _GLEE_VERSION_1_4;
extern GLboolean _GLEE_VERSION_1_5;
extern GLboolean _GLEE_VERSION_2_0;
extern GLboolean _GLEE_VERSION_2_1;
extern GLboolean _GLEE_VERSION_3_0;
extern GLboolean _GLEE_VERSION_3_1;
extern GLboolean _GLEE_VERSION_3_2;
extern GLboolean _GLEE_VERSION_3_3;
extern GLboolean _GLEE_VERSION_4_0;
extern GLboolean _GLEE_VERSION_4_1;
extern GLboolean _GLEE_VERSION_4_2;
extern GLboolean _GLEE_ARB_multitexture;
extern GLboolean _GLEE_ARB_transpose_matrix;
extern GLboolean _GLEE_ARB_multisample;
extern GLboolean _GLEE_ARB_texture_env_add;
extern GLboolean _GLEE_ARB_texture_cube_map;
extern GLboolean _GLEE_ARB_texture_compression;
extern GLboolean _GLEE_ARB_texture_border_clamp;
extern GLboolean _GLEE_ARB_point_parameters;
extern GLboolean _GLEE_ARB_vertex_blend;
extern GLboolean _GLEE_ARB_matrix_palette;
extern GLboolean _GLEE_ARB_texture_env_combine;
extern GLboolean _GLEE_ARB_texture_env_crossbar;
extern GLboolean _GLEE_ARB_texture_env_dot3;
extern GLboolean _GLEE_ARB_texture_mirrored_repeat;
extern GLboolean _GLEE_ARB_depth_texture;
extern GLboolean _GLEE_ARB_shadow;
extern GLboolean _GLEE_ARB_shadow_ambient;
extern GLboolean _GLEE_ARB_window_pos;
extern GLboolean _GLEE_ARB_vertex_program;
extern GLboolean _GLEE_ARB_fragment_program;
extern GLboolean _GLEE_ARB_vertex_buffer_object;
extern GLboolean _GLEE_ARB_occlusion_query;
extern GLboolean _GLEE_ARB_shader_objects;
extern GLboolean _GLEE_ARB_vertex_shader;
extern GLboolean _GLEE_ARB_fragment_shader;
extern GLboolean _GLEE_ARB_shading_language_100;
extern GLboolean _GLEE_ARB_texture_non_power_of_two;
extern GLboolean _GLEE_ARB_point_sprite;
extern GLboolean _GLEE_ARB_fragment_program_shadow;
extern GLboolean _GLEE_ARB_draw_buffers;
extern GLboolean _GLEE_ARB_texture_rectangle;
extern GLboolean _GLEE_ARB_color_buffer_float;
extern GLboolean _GLEE_ARB_half_float_pixel;
extern GLboolean _GLEE_ARB_texture_float;
extern GLboolean _GLEE_ARB_pixel_buffer_object;
extern GLboolean _GLEE_ARB_depth_buffer_float;
extern GLboolean _GLEE_ARB_draw_instanced;
extern GLboolean _GLEE_ARB_framebuffer_object;
extern GLboolean _GLEE_ARB_framebuffer_sRGB;
extern GLboolean _GLEE_ARB_geometry_shader4;
extern GLboolean _GLEE_ARB_half_float_vertex;
extern GLboolean _GLEE_ARB_instanced_arrays;
extern GLboolean _GLEE_ARB_map_buffer_range;
extern GLboolean _GLEE_ARB_texture_buffer_object;
extern GLboolean _GLEE_ARB_texture_compression_rgtc;
extern GLboolean _GLEE_ARB_texture_rg;
extern GLboolean _GLEE_ARB_vertex_array_object;
extern GLboolean _GLEE_ARB_uniform_buffer_object;
extern GLboolean _GLEE_ARB_compatibility;
extern GLboolean _GLEE_ARB_copy_buffer;
extern GLboolean _GLEE_ARB_shader_texture_lod;
extern GLboolean _GLEE_ARB_depth_clamp;
extern GLboolean _GLEE_ARB_draw_elements_base_vertex;
extern GLboolean _GLEE_ARB_fragment_coord_conventions;
extern GLboolean _GLEE_ARB_provoking_vertex;
extern GLboolean _GLEE_ARB_seamless_cube_map;
extern GLboolean _GLEE_ARB_sync;
extern GLboolean _GLEE_ARB_texture_multisample;
extern GLboolean _GLEE_ARB_vertex_array_bgra;
extern GLboolean _GLEE_ARB_draw_buffers_blend;
extern GLboolean _GLEE_ARB_sample_shading;
extern GLboolean _GLEE_ARB_texture_cube_map_array;
extern GLboolean _GLEE_ARB_texture_gather;
extern GLboolean _GLEE_ARB_texture_query_lod;
extern GLboolean _GLEE_ARB_shading_language_include;
extern GLboolean _GLEE_ARB_texture_compression_bptc;
extern GLboolean _GLEE_ARB_blend_func_extended;
extern GLboolean _GLEE_ARB_explicit_attrib_location;
extern GLboolean _GLEE_ARB_occlusion_query2;
extern GLboolean _GLEE_ARB_sampler_objects;
extern GLboolean _GLEE_ARB_shader_bit_encoding;
extern GLboolean _GLEE_ARB_texture_rgb10_a2ui;
extern GLboolean _GLEE_ARB_texture_swizzle;
extern GLboolean _GLEE_ARB_timer_query;
extern GLboolean _GLEE_ARB_vertex_type_2_10_10_10_rev;
extern GLboolean _GLEE_ARB_draw_indirect;
extern GLboolean _GLEE_ARB_gpu_shader5;
extern GLboolean _GLEE_ARB_gpu_shader_fp64;
extern GLboolean _GLEE_ARB_shader_subroutine;
extern GLboolean _GLEE_ARB_tessellation_shader;
extern GLboolean _GLEE_ARB_texture_buffer_object_rgb32;
extern GLboolean _GLEE_ARB_transform_feedback2;
extern GLboolean _GLEE_ARB_transform_feedback3;
extern GLboolean _GLEE_ARB_ES2_compatibility;
extern GLboolean _GLEE_ARB_get_program_binary;
extern GLboolean _GLEE_ARB_separate_shader_objects;
extern GLboolean _GLEE_ARB_shader_precision;
extern GLboolean _GLEE_ARB_vertex_attrib_64bit;
extern GLboolean _GLEE_ARB_viewport_array;
extern GLboolean _GLEE_ARB_cl_event;
extern GLboolean _GLEE_ARB_robustness;
extern GLboolean _GLEE_ARB_shader_stencil_export;
extern GLboolean _GLEE_ARB_base_instance;
extern GLboolean _GLEE_ARB_shading_language_420pack;
extern GLboolean _GLEE_ARB_transform_feedback_instanced;
extern GLboolean _GLEE_ARB_compressed_texture_pixel_storage;
extern GLboolean _GLEE_ARB_conservative_depth;
extern GLboolean _GLEE_ARB_internalformat_query;
extern GLboolean _GLEE_ARB_map_buffer_alignment;
extern GLboolean _GLEE_ARB_shader_atomic_counters;
extern GLboolean _GLEE_ARB_shader_image_load_store;
extern GLboolean _GLEE_ARB_shading_language_packing;
extern GLboolean _GLEE_ARB_texture_storage;
extern GLboolean _GLEE_EXT_abgr;
extern GLboolean _GLEE_EXT_blend_color;
extern GLboolean _GLEE_EXT_polygon_offset;
extern GLboolean _GLEE_EXT_texture;
extern GLboolean _GLEE_EXT_texture3D;
extern GLboolean _GLEE_SGIS_texture_filter4;
extern GLboolean _GLEE_EXT_subtexture;
extern GLboolean _GLEE_EXT_copy_texture;
extern GLboolean _GLEE_EXT_histogram;
extern GLboolean _GLEE_EXT_convolution;
extern GLboolean _GLEE_SGI_color_matrix;
extern GLboolean _GLEE_SGI_color_table;
extern GLboolean _GLEE_SGIS_pixel_texture;
extern GLboolean _GLEE_SGIX_pixel_texture;
extern GLboolean _GLEE_SGIS_texture4D;
extern GLboolean _GLEE_SGI_texture_color_table;
extern GLboolean _GLEE_EXT_cmyka;
extern GLboolean _GLEE_EXT_texture_object;
extern GLboolean _GLEE_SGIS_detail_texture;
extern GLboolean _GLEE_SGIS_sharpen_texture;
extern GLboolean _GLEE_EXT_packed_pixels;
extern GLboolean _GLEE_SGIS_texture_lod;
extern GLboolean _GLEE_SGIS_multisample;
extern GLboolean _GLEE_EXT_rescale_normal;
extern GLboolean _GLEE_EXT_vertex_array;
extern GLboolean _GLEE_EXT_misc_attribute;
extern GLboolean _GLEE_SGIS_generate_mipmap;
extern GLboolean _GLEE_SGIX_clipmap;
extern GLboolean _GLEE_SGIX_shadow;
extern GLboolean _GLEE_SGIS_texture_edge_clamp;
extern GLboolean _GLEE_SGIS_texture_border_clamp;
extern GLboolean _GLEE_EXT_blend_minmax;
extern GLboolean _GLEE_EXT_blend_subtract;
extern GLboolean _GLEE_EXT_blend_logic_op;
extern GLboolean _GLEE_SGIX_interlace;
extern GLboolean _GLEE_SGIX_pixel_tiles;
extern GLboolean _GLEE_SGIS_texture_select;
extern GLboolean _GLEE_SGIX_sprite;
extern GLboolean _GLEE_SGIX_texture_multi_buffer;
extern GLboolean _GLEE_EXT_point_parameters;
extern GLboolean _GLEE_SGIS_point_parameters;
extern GLboolean _GLEE_SGIX_instruments;
extern GLboolean _GLEE_SGIX_texture_scale_bias;
extern GLboolean _GLEE_SGIX_framezoom;
extern GLboolean _GLEE_SGIX_tag_sample_buffer;
extern GLboolean _GLEE_FfdMaskSGIX;
extern GLboolean _GLEE_SGIX_polynomial_ffd;
extern GLboolean _GLEE_SGIX_reference_plane;
extern GLboolean _GLEE_SGIX_flush_raster;
extern GLboolean _GLEE_SGIX_depth_texture;
extern GLboolean _GLEE_SGIS_fog_function;
extern GLboolean _GLEE_SGIX_fog_offset;
extern GLboolean _GLEE_HP_image_transform;
extern GLboolean _GLEE_HP_convolution_border_modes;
extern GLboolean _GLEE_INGR_palette_buffer;
extern GLboolean _GLEE_SGIX_texture_add_env;
extern GLboolean _GLEE_EXT_color_subtable;
extern GLboolean _GLEE_PGI_vertex_hints;
extern GLboolean _GLEE_PGI_misc_hints;
extern GLboolean _GLEE_EXT_paletted_texture;
extern GLboolean _GLEE_EXT_clip_volume_hint;
extern GLboolean _GLEE_SGIX_list_priority;
extern GLboolean _GLEE_SGIX_ir_instrument1;
extern GLboolean _GLEE_SGIX_calligraphic_fragment;
extern GLboolean _GLEE_SGIX_texture_lod_bias;
extern GLboolean _GLEE_SGIX_shadow_ambient;
extern GLboolean _GLEE_EXT_index_texture;
extern GLboolean _GLEE_EXT_index_material;
extern GLboolean _GLEE_EXT_index_func;
extern GLboolean _GLEE_EXT_index_array_formats;
extern GLboolean _GLEE_EXT_compiled_vertex_array;
extern GLboolean _GLEE_EXT_cull_vertex;
extern GLboolean _GLEE_SGIX_ycrcb;
extern GLboolean _GLEE_SGIX_fragment_lighting;
extern GLboolean _GLEE_IBM_rasterpos_clip;
extern GLboolean _GLEE_HP_texture_lighting;
extern GLboolean _GLEE_EXT_draw_range_elements;
extern GLboolean _GLEE_WIN_phong_shading;
extern GLboolean _GLEE_WIN_specular_fog;
extern GLboolean _GLEE_EXT_light_texture;
extern GLboolean _GLEE_SGIX_blend_alpha_minmax;
extern GLboolean _GLEE_SGIX_impact_pixel_texture;
extern GLboolean _GLEE_EXT_bgra;
extern GLboolean _GLEE_SGIX_async;
extern GLboolean _GLEE_SGIX_async_pixel;
extern GLboolean _GLEE_SGIX_async_histogram;
extern GLboolean _GLEE_INTEL_texture_scissor;
extern GLboolean _GLEE_INTEL_parallel_arrays;
extern GLboolean _GLEE_HP_occlusion_test;
extern GLboolean _GLEE_EXT_pixel_transform;
extern GLboolean _GLEE_EXT_pixel_transform_color_table;
extern GLboolean _GLEE_EXT_shared_texture_palette;
extern GLboolean _GLEE_EXT_separate_specular_color;
extern GLboolean _GLEE_EXT_secondary_color;
extern GLboolean _GLEE_EXT_texture_perturb_normal;
extern GLboolean _GLEE_EXT_multi_draw_arrays;
extern GLboolean _GLEE_EXT_fog_coord;
extern GLboolean _GLEE_REND_screen_coordinates;
extern GLboolean _GLEE_EXT_coordinate_frame;
extern GLboolean _GLEE_EXT_texture_env_combine;
extern GLboolean _GLEE_APPLE_specular_vector;
extern GLboolean _GLEE_APPLE_transform_hint;
extern GLboolean _GLEE_SGIX_fog_scale;
extern GLboolean _GLEE_SUNX_constant_data;
extern GLboolean _GLEE_SUN_global_alpha;
extern GLboolean _GLEE_SUN_triangle_list;
extern GLboolean _GLEE_SUN_vertex;
extern GLboolean _GLEE_EXT_blend_func_separate;
extern GLboolean _GLEE_INGR_color_clamp;
extern GLboolean _GLEE_INGR_interlace_read;
extern GLboolean _GLEE_EXT_stencil_wrap;
extern GLboolean _GLEE_EXT_422_pixels;
extern GLboolean _GLEE_NV_texgen_reflection;
extern GLboolean _GLEE_EXT_texture_cube_map;
extern GLboolean _GLEE_SUN_convolution_border_modes;
extern GLboolean _GLEE_EXT_texture_env_add;
extern GLboolean _GLEE_EXT_texture_lod_bias;
extern GLboolean _GLEE_EXT_texture_filter_anisotropic;
extern GLboolean _GLEE_EXT_vertex_weighting;
extern GLboolean _GLEE_NV_light_max_exponent;
extern GLboolean _GLEE_NV_vertex_array_range;
extern GLboolean _GLEE_NV_register_combiners;
extern GLboolean _GLEE_NV_fog_distance;
extern GLboolean _GLEE_NV_texgen_emboss;
extern GLboolean _GLEE_NV_blend_square;
extern GLboolean _GLEE_NV_texture_env_combine4;
extern GLboolean _GLEE_MESA_resize_buffers;
extern GLboolean _GLEE_MESA_window_pos;
extern GLboolean _GLEE_EXT_texture_compression_s3tc;
extern GLboolean _GLEE_IBM_cull_vertex;
extern GLboolean _GLEE_IBM_multimode_draw_arrays;
extern GLboolean _GLEE_IBM_vertex_array_lists;
extern GLboolean _GLEE_SGIX_subsample;
extern GLboolean _GLEE_SGIX_ycrcb_subsample;
extern GLboolean _GLEE_SGIX_ycrcba;
extern GLboolean _GLEE_SGI_depth_pass_instrument;
extern GLboolean _GLEE_3DFX_texture_compression_FXT1;
extern GLboolean _GLEE_3DFX_multisample;
extern GLboolean _GLEE_3DFX_tbuffer;
extern GLboolean _GLEE_EXT_multisample;
extern GLboolean _GLEE_SGIX_vertex_preclip;
extern GLboolean _GLEE_SGIX_convolution_accuracy;
extern GLboolean _GLEE_SGIX_resample;
extern GLboolean _GLEE_SGIS_point_line_texgen;
extern GLboolean _GLEE_SGIS_texture_color_mask;
extern GLboolean _GLEE_EXT_texture_env_dot3;
extern GLboolean _GLEE_ATI_texture_mirror_once;
extern GLboolean _GLEE_NV_fence;
extern GLboolean _GLEE_IBM_texture_mirrored_repeat;
extern GLboolean _GLEE_NV_evaluators;
extern GLboolean _GLEE_NV_packed_depth_stencil;
extern GLboolean _GLEE_NV_register_combiners2;
extern GLboolean _GLEE_NV_texture_compression_vtc;
extern GLboolean _GLEE_NV_texture_rectangle;
extern GLboolean _GLEE_NV_texture_shader;
extern GLboolean _GLEE_NV_texture_shader2;
extern GLboolean _GLEE_NV_vertex_array_range2;
extern GLboolean _GLEE_NV_vertex_program;
extern GLboolean _GLEE_SGIX_texture_coordinate_clamp;
extern GLboolean _GLEE_SGIX_scalebias_hint;
extern GLboolean _GLEE_OML_interlace;
extern GLboolean _GLEE_OML_subsample;
extern GLboolean _GLEE_OML_resample;
extern GLboolean _GLEE_NV_copy_depth_to_color;
extern GLboolean _GLEE_ATI_envmap_bumpmap;
extern GLboolean _GLEE_ATI_fragment_shader;
extern GLboolean _GLEE_ATI_pn_triangles;
extern GLboolean _GLEE_ATI_vertex_array_object;
extern GLboolean _GLEE_EXT_vertex_shader;
extern GLboolean _GLEE_ATI_vertex_streams;
extern GLboolean _GLEE_ATI_element_array;
extern GLboolean _GLEE_SUN_mesh_array;
extern GLboolean _GLEE_SUN_slice_accum;
extern GLboolean _GLEE_NV_multisample_filter_hint;
extern GLboolean _GLEE_NV_depth_clamp;
extern GLboolean _GLEE_NV_occlusion_query;
extern GLboolean _GLEE_NV_point_sprite;
extern GLboolean _GLEE_NV_texture_shader3;
extern GLboolean _GLEE_NV_vertex_program1_1;
extern GLboolean _GLEE_EXT_shadow_funcs;
extern GLboolean _GLEE_EXT_stencil_two_side;
extern GLboolean _GLEE_ATI_text_fragment_shader;
extern GLboolean _GLEE_APPLE_client_storage;
extern GLboolean _GLEE_APPLE_element_array;
extern GLboolean _GLEE_APPLE_fence;
extern GLboolean _GLEE_APPLE_vertex_array_object;
extern GLboolean _GLEE_APPLE_vertex_array_range;
extern GLboolean _GLEE_APPLE_ycbcr_422;
extern GLboolean _GLEE_S3_s3tc;
extern GLboolean _GLEE_ATI_draw_buffers;
extern GLboolean _GLEE_ATI_pixel_format_float;
extern GLboolean _GLEE_ATI_texture_env_combine3;
extern GLboolean _GLEE_ATI_texture_float;
extern GLboolean _GLEE_NV_float_buffer;
extern GLboolean _GLEE_NV_fragment_program;
extern GLboolean _GLEE_NV_half_float;
extern GLboolean _GLEE_NV_pixel_data_range;
extern GLboolean _GLEE_NV_primitive_restart;
extern GLboolean _GLEE_NV_texture_expand_normal;
extern GLboolean _GLEE_NV_vertex_program2;
extern GLboolean _GLEE_ATI_map_object_buffer;
extern GLboolean _GLEE_ATI_separate_stencil;
extern GLboolean _GLEE_ATI_vertex_attrib_array_object;
extern GLboolean _GLEE_OES_read_format;
extern GLboolean _GLEE_EXT_depth_bounds_test;
extern GLboolean _GLEE_EXT_texture_mirror_clamp;
extern GLboolean _GLEE_EXT_blend_equation_separate;
extern GLboolean _GLEE_MESA_pack_invert;
extern GLboolean _GLEE_MESA_ycbcr_texture;
extern GLboolean _GLEE_EXT_pixel_buffer_object;
extern GLboolean _GLEE_NV_fragment_program_option;
extern GLboolean _GLEE_NV_fragment_program2;
extern GLboolean _GLEE_NV_vertex_program2_option;
extern GLboolean _GLEE_NV_vertex_program3;
extern GLboolean _GLEE_EXT_framebuffer_object;
extern GLboolean _GLEE_GREMEDY_string_marker;
extern GLboolean _GLEE_EXT_packed_depth_stencil;
extern GLboolean _GLEE_EXT_stencil_clear_tag;
extern GLboolean _GLEE_EXT_texture_sRGB;
extern GLboolean _GLEE_EXT_framebuffer_blit;
extern GLboolean _GLEE_EXT_framebuffer_multisample;
extern GLboolean _GLEE_MESAX_texture_stack;
extern GLboolean _GLEE_EXT_timer_query;
extern GLboolean _GLEE_EXT_gpu_program_parameters;
extern GLboolean _GLEE_APPLE_flush_buffer_range;
extern GLboolean _GLEE_EXT_gpu_shader4;
extern GLboolean _GLEE_EXT_draw_instanced;
extern GLboolean _GLEE_EXT_packed_float;
extern GLboolean _GLEE_EXT_texture_array;
extern GLboolean _GLEE_EXT_texture_buffer_object;
extern GLboolean _GLEE_EXT_texture_compression_latc;
extern GLboolean _GLEE_EXT_texture_compression_rgtc;
extern GLboolean _GLEE_EXT_texture_shared_exponent;
extern GLboolean _GLEE_NV_depth_buffer_float;
extern GLboolean _GLEE_NV_framebuffer_multisample_coverage;
extern GLboolean _GLEE_EXT_framebuffer_sRGB;
extern GLboolean _GLEE_NV_geometry_shader4;
extern GLboolean _GLEE_NV_parameter_buffer_object;
extern GLboolean _GLEE_EXT_draw_buffers2;
extern GLboolean _GLEE_NV_transform_feedback;
extern GLboolean _GLEE_EXT_bindable_uniform;
extern GLboolean _GLEE_EXT_texture_integer;
extern GLboolean _GLEE_GREMEDY_frame_terminator;
extern GLboolean _GLEE_NV_conditional_render;
extern GLboolean _GLEE_NV_present_video;
extern GLboolean _GLEE_EXT_transform_feedback;
extern GLboolean _GLEE_EXT_direct_state_access;
extern GLboolean _GLEE_EXT_vertex_array_bgra;
extern GLboolean _GLEE_EXT_texture_swizzle;
extern GLboolean _GLEE_NV_explicit_multisample;
extern GLboolean _GLEE_NV_transform_feedback2;
extern GLboolean _GLEE_ATI_meminfo;
extern GLboolean _GLEE_AMD_performance_monitor;
extern GLboolean _GLEE_AMD_texture_texture4;
extern GLboolean _GLEE_AMD_vertex_shader_tesselator;
extern GLboolean _GLEE_EXT_provoking_vertex;
extern GLboolean _GLEE_EXT_texture_snorm;
extern GLboolean _GLEE_AMD_draw_buffers_blend;
extern GLboolean _GLEE_APPLE_texture_range;
extern GLboolean _GLEE_APPLE_float_pixels;
extern GLboolean _GLEE_APPLE_vertex_program_evaluators;
extern GLboolean _GLEE_APPLE_aux_depth_stencil;
extern GLboolean _GLEE_APPLE_object_purgeable;
extern GLboolean _GLEE_APPLE_row_bytes;
extern GLboolean _GLEE_APPLE_rgb_422;
extern GLboolean _GLEE_NV_video_capture;
extern GLboolean _GLEE_NV_copy_image;
extern GLboolean _GLEE_EXT_separate_shader_objects;
extern GLboolean _GLEE_NV_parameter_buffer_object2;
extern GLboolean _GLEE_NV_shader_buffer_load;
extern GLboolean _GLEE_NV_vertex_buffer_unified_memory;
extern GLboolean _GLEE_NV_texture_barrier;
extern GLboolean _GLEE_AMD_shader_stencil_export;
extern GLboolean _GLEE_AMD_seamless_cubemap_per_texture;
extern GLboolean _GLEE_AMD_conservative_depth;
extern GLboolean _GLEE_EXT_shader_image_load_store;
extern GLboolean _GLEE_EXT_vertex_attrib_64bit;
extern GLboolean _GLEE_NV_gpu_program5;
extern GLboolean _GLEE_NV_gpu_shader5;
extern GLboolean _GLEE_NV_shader_buffer_store;
extern GLboolean _GLEE_NV_tessellation_program5;
extern GLboolean _GLEE_NV_vertex_attrib_integer_64bit;
extern GLboolean _GLEE_NV_multisample_coverage;
extern GLboolean _GLEE_AMD_name_gen_delete;
extern GLboolean _GLEE_AMD_transform_feedback3_lines_triangles;
extern GLboolean _GLEE_AMD_depth_clamp_separate;
extern GLboolean _GLEE_EXT_texture_sRGB_decode;
extern GLboolean _GLEE_NV_texture_multisample;
extern GLboolean _GLEE_AMD_blend_minmax_factor;
extern GLboolean _GLEE_AMD_sample_positions;
extern GLboolean _GLEE_EXT_x11_sync_object;
extern GLboolean _GLEE_AMD_multi_draw_indirect;
extern GLboolean _GLEE_EXT_framebuffer_multisample_blit_scaled;
extern GLboolean _GLEE_SGIX_texture_select;
extern GLboolean _GLEE_INGR_blend_func_separate;
extern GLboolean _GLEE_SGIX_depth_pass_instrument;
extern GLboolean _GLEE_SGIX_igloo_interface;
extern GLboolean _GLEE_OES_compressed_paletted_texture;
extern GLboolean _GLEE_OES_fixed_point;
extern GLboolean _GLEE_OES_single_precision;
extern GLboolean _GLEE_OES_query_matrix;
extern GLboolean _GLEE_OES_byte_coordinates;
extern GLboolean _GLEE_NV_gpu_program4;
extern GLboolean _GLEE_NV_path_rendering;
extern GLboolean _GLEE_AMD_vertex_shader_tessellator;
extern GLboolean _GLEE_EXT_fragment_lighting;
extern GLboolean _GLEE_EXT_texture_compression_dxt1;
extern GLboolean _GLEE_EXT_scene_marker;
extern GLboolean _GLEE_EXT_geometry_shader4;
extern GLboolean _GLEE_EXT_texture_env;
extern GLboolean _GLEE_SGIX_texture_range;
extern GLboolean _GLEE_SGIX_pixel_texture_bits;
extern GLboolean _GLEE_IBM_static_data;

/* Aliases for extension querying variables */



/*****************************************************************
 * Additional types needed for extensions
 *****************************************************************/

/* Used for GLSL shader text */
	typedef char GLchar; 
/*
  #if _MSC_VER >= 1600
    #include <stdint.h>
	typedef __int32 int32_t;
	typedef unsigned __int32 uint32_t;
	typedef __int64 int64_t;
	typedef unsigned __int64 uint64_t;
  #include <stdint.h>
  #include <stddef.h>
*/
	typedef ptrdiff_t GLintptr;
	typedef ptrdiff_t GLsizeiptr;

	typedef unsigned short GLhalfNV;

	typedef ptrdiff_t GLintptrARB;
	typedef ptrdiff_t GLsizeiptrARB;

	typedef int GLhandleARB;
	typedef char GLcharARB;

	typedef signed long long GLint64EXT;
	typedef unsigned long long GLuint64EXT;

	typedef int64_t GLint64;
	typedef uint64_t GLuint64;
	typedef struct __GLsync *GLsync;

/* Platform-specific */


	/* WGL */

	
	
    

/*
        typedef struct _GPU_DEVICE {
            DWORD  cb;
            CHAR   DeviceName[32];
            CHAR   DeviceString[128];
            DWORD  Flags;
            RECT   rcVirtualScreen;
        } GPU_DEVICE, *PGPU_DEVICE;
		*/
	

	/* Mac OS X */


typedef unsigned char GLubyte;
typedef bool Bool;

	/* GLX */

	typedef void (*__GLXextFuncPtr)(void);

	    extern __GLXextFuncPtr glXGetProcAddressARB (const GLubyte *);
	    extern void ( * glXGetProcAddressARB (const GLubyte *procName))(void);
	    typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);

	    typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;

		/*
	typedef struct {
		int type;
		unsigned long serial;
		Bool send_event;
		Display *display;
		GLXDrawable drawable;
		int event_type;		  
		int draw_type;		  
		unsigned int mask;	  
		int x, y;
		int width, height;
		int count;
	} GLXBufferClobberEventSGIX;
	*/

		/*
		typedef struct 
		{
			char  pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
			int  networkId;
		} GLXHyperpipeNetworkSGIX;

		typedef struct 
		{
			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
			int channel;
			unsigned int participationType;
			int timeSlice;
		} GLXHyperpipeConfigSGIX;

		typedef struct 
		{
			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
			int srcXOrigin;
			int srcYOrigin;
			int srcWidth;
			int srcHeight;
			int destXOrigin;
			int destYOrigin;
			int destWidth;
			int destHeight;
		} GLXPipeRect;

		typedef struct 
		{
			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
			int XOrigin; 
			int YOrigin;
			int maxHeight;
			int maxWidth;
		} GLXPipeRectLimits;
		*/
	
    typedef unsigned int GLXVideoDeviceNV;

    	

/* GL_VERSION_1_2 */

/* Constants */
  typedef void (* GLEEPFNGLBLENDCOLORPROC) (GLclampf  red, GLclampf  green, GLclampf  blue, GLclampf  alpha);
  extern GLEEPFNGLBLENDCOLORPROC GLeeFuncPtr_glBlendColor;
  typedef void (* GLEEPFNGLBLENDEQUATIONPROC) (GLenum  mode);
  extern GLEEPFNGLBLENDEQUATIONPROC GLeeFuncPtr_glBlendEquation;
  typedef void (* GLEEPFNGLDRAWRANGEELEMENTSPROC) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const GLvoid * indices);
  extern GLEEPFNGLDRAWRANGEELEMENTSPROC GLeeFuncPtr_glDrawRangeElements;
  typedef void (* GLEEPFNGLTEXIMAGE3DPROC) (GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXIMAGE3DPROC GLeeFuncPtr_glTexImage3D;
  typedef void (* GLEEPFNGLTEXSUBIMAGE3DPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXSUBIMAGE3DPROC GLeeFuncPtr_glTexSubImage3D;
  typedef void (* GLEEPFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYTEXSUBIMAGE3DPROC GLeeFuncPtr_glCopyTexSubImage3D;
  typedef void (* GLEEPFNGLCOLORTABLEPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * table);
  extern GLEEPFNGLCOLORTABLEPROC GLeeFuncPtr_glColorTable;
  typedef void (* GLEEPFNGLCOLORTABLEPARAMETERFVPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCOLORTABLEPARAMETERFVPROC GLeeFuncPtr_glColorTableParameterfv;
  typedef void (* GLEEPFNGLCOLORTABLEPARAMETERIVPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLCOLORTABLEPARAMETERIVPROC GLeeFuncPtr_glColorTableParameteriv;
  typedef void (* GLEEPFNGLCOPYCOLORTABLEPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCOLORTABLEPROC GLeeFuncPtr_glCopyColorTable;
  typedef void (* GLEEPFNGLGETCOLORTABLEPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * table);
  extern GLEEPFNGLGETCOLORTABLEPROC GLeeFuncPtr_glGetColorTable;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERFVPROC GLeeFuncPtr_glGetColorTableParameterfv;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERIVPROC GLeeFuncPtr_glGetColorTableParameteriv;
  typedef void (* GLEEPFNGLCOLORSUBTABLEPROC) (GLenum  target, GLsizei  start, GLsizei  count, GLenum  format, GLenum  type, const GLvoid * data);
  extern GLEEPFNGLCOLORSUBTABLEPROC GLeeFuncPtr_glColorSubTable;
  typedef void (* GLEEPFNGLCOPYCOLORSUBTABLEPROC) (GLenum  target, GLsizei  start, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCOLORSUBTABLEPROC GLeeFuncPtr_glCopyColorSubTable;
  typedef void (* GLEEPFNGLCONVOLUTIONFILTER1DPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * image);
  extern GLEEPFNGLCONVOLUTIONFILTER1DPROC GLeeFuncPtr_glConvolutionFilter1D;
  typedef void (* GLEEPFNGLCONVOLUTIONFILTER2DPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * image);
  extern GLEEPFNGLCONVOLUTIONFILTER2DPROC GLeeFuncPtr_glConvolutionFilter2D;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERFPROC) (GLenum  target, GLenum  pname, GLfloat  params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERFPROC GLeeFuncPtr_glConvolutionParameterf;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERFVPROC GLeeFuncPtr_glConvolutionParameterfv;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERIPROC) (GLenum  target, GLenum  pname, GLint  params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERIPROC GLeeFuncPtr_glConvolutionParameteri;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERIVPROC GLeeFuncPtr_glConvolutionParameteriv;
  typedef void (* GLEEPFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCONVOLUTIONFILTER1DPROC GLeeFuncPtr_glCopyConvolutionFilter1D;
  typedef void (* GLEEPFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYCONVOLUTIONFILTER2DPROC GLeeFuncPtr_glCopyConvolutionFilter2D;
  typedef void (* GLEEPFNGLGETCONVOLUTIONFILTERPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * image);
  extern GLEEPFNGLGETCONVOLUTIONFILTERPROC GLeeFuncPtr_glGetConvolutionFilter;
  typedef void (* GLEEPFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCONVOLUTIONPARAMETERFVPROC GLeeFuncPtr_glGetConvolutionParameterfv;
  typedef void (* GLEEPFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCONVOLUTIONPARAMETERIVPROC GLeeFuncPtr_glGetConvolutionParameteriv;
  typedef void (* GLEEPFNGLGETSEPARABLEFILTERPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * row, GLvoid * column, GLvoid * span);
  extern GLEEPFNGLGETSEPARABLEFILTERPROC GLeeFuncPtr_glGetSeparableFilter;
  typedef void (* GLEEPFNGLSEPARABLEFILTER2DPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * row, const GLvoid * column);
  extern GLEEPFNGLSEPARABLEFILTER2DPROC GLeeFuncPtr_glSeparableFilter2D;
  typedef void (* GLEEPFNGLGETHISTOGRAMPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLvoid * values);
  extern GLEEPFNGLGETHISTOGRAMPROC GLeeFuncPtr_glGetHistogram;
  typedef void (* GLEEPFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETHISTOGRAMPARAMETERFVPROC GLeeFuncPtr_glGetHistogramParameterfv;
  typedef void (* GLEEPFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETHISTOGRAMPARAMETERIVPROC GLeeFuncPtr_glGetHistogramParameteriv;
  typedef void (* GLEEPFNGLGETMINMAXPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLvoid * values);
  extern GLEEPFNGLGETMINMAXPROC GLeeFuncPtr_glGetMinmax;
  typedef void (* GLEEPFNGLGETMINMAXPARAMETERFVPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMINMAXPARAMETERFVPROC GLeeFuncPtr_glGetMinmaxParameterfv;
  typedef void (* GLEEPFNGLGETMINMAXPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMINMAXPARAMETERIVPROC GLeeFuncPtr_glGetMinmaxParameteriv;
  typedef void (* GLEEPFNGLHISTOGRAMPROC) (GLenum  target, GLsizei  width, GLenum  internalformat, GLboolean  sink);
  extern GLEEPFNGLHISTOGRAMPROC GLeeFuncPtr_glHistogram;
  typedef void (* GLEEPFNGLMINMAXPROC) (GLenum  target, GLenum  internalformat, GLboolean  sink);
  extern GLEEPFNGLMINMAXPROC GLeeFuncPtr_glMinmax;
  typedef void (* GLEEPFNGLRESETHISTOGRAMPROC) (GLenum  target);
  extern GLEEPFNGLRESETHISTOGRAMPROC GLeeFuncPtr_glResetHistogram;
  typedef void (* GLEEPFNGLRESETMINMAXPROC) (GLenum  target);
  extern GLEEPFNGLRESETMINMAXPROC GLeeFuncPtr_glResetMinmax;

/* GL_ARB_imaging */

/* Constants */

/* GL_VERSION_1_3 */

/* Constants */
  typedef void (* GLEEPFNGLACTIVETEXTUREPROC) (GLenum  texture);
  extern GLEEPFNGLACTIVETEXTUREPROC GLeeFuncPtr_glActiveTexture;
  typedef void (* GLEEPFNGLSAMPLECOVERAGEPROC) (GLclampf  value, GLboolean  invert);
  extern GLEEPFNGLSAMPLECOVERAGEPROC GLeeFuncPtr_glSampleCoverage;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE3DPROC GLeeFuncPtr_glCompressedTexImage3D;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE2DPROC GLeeFuncPtr_glCompressedTexImage2D;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE1DPROC GLeeFuncPtr_glCompressedTexImage1D;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC GLeeFuncPtr_glCompressedTexSubImage3D;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC GLeeFuncPtr_glCompressedTexSubImage2D;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC GLeeFuncPtr_glCompressedTexSubImage1D;
  typedef void (* GLEEPFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum  target, GLint  level, GLvoid * img);
  extern GLEEPFNGLGETCOMPRESSEDTEXIMAGEPROC GLeeFuncPtr_glGetCompressedTexImage;
  typedef void (* GLEEPFNGLCLIENTACTIVETEXTUREPROC) (GLenum  texture);
  extern GLEEPFNGLCLIENTACTIVETEXTUREPROC GLeeFuncPtr_glClientActiveTexture;
  typedef void (* GLEEPFNGLMULTITEXCOORD1DPROC) (GLenum  target, GLdouble  s);
  extern GLEEPFNGLMULTITEXCOORD1DPROC GLeeFuncPtr_glMultiTexCoord1d;
  typedef void (* GLEEPFNGLMULTITEXCOORD1DVPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD1DVPROC GLeeFuncPtr_glMultiTexCoord1dv;
  typedef void (* GLEEPFNGLMULTITEXCOORD1FPROC) (GLenum  target, GLfloat  s);
  extern GLEEPFNGLMULTITEXCOORD1FPROC GLeeFuncPtr_glMultiTexCoord1f;
  typedef void (* GLEEPFNGLMULTITEXCOORD1FVPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD1FVPROC GLeeFuncPtr_glMultiTexCoord1fv;
  typedef void (* GLEEPFNGLMULTITEXCOORD1IPROC) (GLenum  target, GLint  s);
  extern GLEEPFNGLMULTITEXCOORD1IPROC GLeeFuncPtr_glMultiTexCoord1i;
  typedef void (* GLEEPFNGLMULTITEXCOORD1IVPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD1IVPROC GLeeFuncPtr_glMultiTexCoord1iv;
  typedef void (* GLEEPFNGLMULTITEXCOORD1SPROC) (GLenum  target, GLshort  s);
  extern GLEEPFNGLMULTITEXCOORD1SPROC GLeeFuncPtr_glMultiTexCoord1s;
  typedef void (* GLEEPFNGLMULTITEXCOORD1SVPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD1SVPROC GLeeFuncPtr_glMultiTexCoord1sv;
  typedef void (* GLEEPFNGLMULTITEXCOORD2DPROC) (GLenum  target, GLdouble  s, GLdouble  t);
  extern GLEEPFNGLMULTITEXCOORD2DPROC GLeeFuncPtr_glMultiTexCoord2d;
  typedef void (* GLEEPFNGLMULTITEXCOORD2DVPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD2DVPROC GLeeFuncPtr_glMultiTexCoord2dv;
  typedef void (* GLEEPFNGLMULTITEXCOORD2FPROC) (GLenum  target, GLfloat  s, GLfloat  t);
  extern GLEEPFNGLMULTITEXCOORD2FPROC GLeeFuncPtr_glMultiTexCoord2f;
  typedef void (* GLEEPFNGLMULTITEXCOORD2FVPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD2FVPROC GLeeFuncPtr_glMultiTexCoord2fv;
  typedef void (* GLEEPFNGLMULTITEXCOORD2IPROC) (GLenum  target, GLint  s, GLint  t);
  extern GLEEPFNGLMULTITEXCOORD2IPROC GLeeFuncPtr_glMultiTexCoord2i;
  typedef void (* GLEEPFNGLMULTITEXCOORD2IVPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD2IVPROC GLeeFuncPtr_glMultiTexCoord2iv;
  typedef void (* GLEEPFNGLMULTITEXCOORD2SPROC) (GLenum  target, GLshort  s, GLshort  t);
  extern GLEEPFNGLMULTITEXCOORD2SPROC GLeeFuncPtr_glMultiTexCoord2s;
  typedef void (* GLEEPFNGLMULTITEXCOORD2SVPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD2SVPROC GLeeFuncPtr_glMultiTexCoord2sv;
  typedef void (* GLEEPFNGLMULTITEXCOORD3DPROC) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r);
  extern GLEEPFNGLMULTITEXCOORD3DPROC GLeeFuncPtr_glMultiTexCoord3d;
  typedef void (* GLEEPFNGLMULTITEXCOORD3DVPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD3DVPROC GLeeFuncPtr_glMultiTexCoord3dv;
  typedef void (* GLEEPFNGLMULTITEXCOORD3FPROC) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r);
  extern GLEEPFNGLMULTITEXCOORD3FPROC GLeeFuncPtr_glMultiTexCoord3f;
  typedef void (* GLEEPFNGLMULTITEXCOORD3FVPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD3FVPROC GLeeFuncPtr_glMultiTexCoord3fv;
  typedef void (* GLEEPFNGLMULTITEXCOORD3IPROC) (GLenum  target, GLint  s, GLint  t, GLint  r);
  extern GLEEPFNGLMULTITEXCOORD3IPROC GLeeFuncPtr_glMultiTexCoord3i;
  typedef void (* GLEEPFNGLMULTITEXCOORD3IVPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD3IVPROC GLeeFuncPtr_glMultiTexCoord3iv;
  typedef void (* GLEEPFNGLMULTITEXCOORD3SPROC) (GLenum  target, GLshort  s, GLshort  t, GLshort  r);
  extern GLEEPFNGLMULTITEXCOORD3SPROC GLeeFuncPtr_glMultiTexCoord3s;
  typedef void (* GLEEPFNGLMULTITEXCOORD3SVPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD3SVPROC GLeeFuncPtr_glMultiTexCoord3sv;
  typedef void (* GLEEPFNGLMULTITEXCOORD4DPROC) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r, GLdouble  q);
  extern GLEEPFNGLMULTITEXCOORD4DPROC GLeeFuncPtr_glMultiTexCoord4d;
  typedef void (* GLEEPFNGLMULTITEXCOORD4DVPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD4DVPROC GLeeFuncPtr_glMultiTexCoord4dv;
  typedef void (* GLEEPFNGLMULTITEXCOORD4FPROC) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  q);
  extern GLEEPFNGLMULTITEXCOORD4FPROC GLeeFuncPtr_glMultiTexCoord4f;
  typedef void (* GLEEPFNGLMULTITEXCOORD4FVPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD4FVPROC GLeeFuncPtr_glMultiTexCoord4fv;
  typedef void (* GLEEPFNGLMULTITEXCOORD4IPROC) (GLenum  target, GLint  s, GLint  t, GLint  r, GLint  q);
  extern GLEEPFNGLMULTITEXCOORD4IPROC GLeeFuncPtr_glMultiTexCoord4i;
  typedef void (* GLEEPFNGLMULTITEXCOORD4IVPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD4IVPROC GLeeFuncPtr_glMultiTexCoord4iv;
  typedef void (* GLEEPFNGLMULTITEXCOORD4SPROC) (GLenum  target, GLshort  s, GLshort  t, GLshort  r, GLshort  q);
  extern GLEEPFNGLMULTITEXCOORD4SPROC GLeeFuncPtr_glMultiTexCoord4s;
  typedef void (* GLEEPFNGLMULTITEXCOORD4SVPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD4SVPROC GLeeFuncPtr_glMultiTexCoord4sv;
  typedef void (* GLEEPFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat * m);
  extern GLEEPFNGLLOADTRANSPOSEMATRIXFPROC GLeeFuncPtr_glLoadTransposeMatrixf;
  typedef void (* GLEEPFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble * m);
  extern GLEEPFNGLLOADTRANSPOSEMATRIXDPROC GLeeFuncPtr_glLoadTransposeMatrixd;
  typedef void (* GLEEPFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat * m);
  extern GLEEPFNGLMULTTRANSPOSEMATRIXFPROC GLeeFuncPtr_glMultTransposeMatrixf;
  typedef void (* GLEEPFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble * m);
  extern GLEEPFNGLMULTTRANSPOSEMATRIXDPROC GLeeFuncPtr_glMultTransposeMatrixd;

/* GL_VERSION_1_4 */

/* Constants */
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEPROC) (GLenum  sfactorRGB, GLenum  dfactorRGB, GLenum  sfactorAlpha, GLenum  dfactorAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEPROC GLeeFuncPtr_glBlendFuncSeparate;
  typedef void (* GLEEPFNGLMULTIDRAWARRAYSPROC) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWARRAYSPROC GLeeFuncPtr_glMultiDrawArrays;
  typedef void (* GLEEPFNGLMULTIDRAWELEMENTSPROC) (GLenum  mode, const GLsizei * count, GLenum  type, const GLvoid* * indices, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWELEMENTSPROC GLeeFuncPtr_glMultiDrawElements;
  typedef void (* GLEEPFNGLPOINTPARAMETERFPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPOINTPARAMETERFPROC GLeeFuncPtr_glPointParameterf;
  typedef void (* GLEEPFNGLPOINTPARAMETERFVPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPOINTPARAMETERFVPROC GLeeFuncPtr_glPointParameterfv;
  typedef void (* GLEEPFNGLPOINTPARAMETERIPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLPOINTPARAMETERIPROC GLeeFuncPtr_glPointParameteri;
  typedef void (* GLEEPFNGLPOINTPARAMETERIVPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLPOINTPARAMETERIVPROC GLeeFuncPtr_glPointParameteriv;
  typedef void (* GLEEPFNGLFOGCOORDFPROC) (GLfloat  coord);
  extern GLEEPFNGLFOGCOORDFPROC GLeeFuncPtr_glFogCoordf;
  typedef void (* GLEEPFNGLFOGCOORDFVPROC) (const GLfloat * coord);
  extern GLEEPFNGLFOGCOORDFVPROC GLeeFuncPtr_glFogCoordfv;
  typedef void (* GLEEPFNGLFOGCOORDDPROC) (GLdouble  coord);
  extern GLEEPFNGLFOGCOORDDPROC GLeeFuncPtr_glFogCoordd;
  typedef void (* GLEEPFNGLFOGCOORDDVPROC) (const GLdouble * coord);
  extern GLEEPFNGLFOGCOORDDVPROC GLeeFuncPtr_glFogCoorddv;
  typedef void (* GLEEPFNGLFOGCOORDPOINTERPROC) (GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLFOGCOORDPOINTERPROC GLeeFuncPtr_glFogCoordPointer;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3BPROC) (GLbyte  red, GLbyte  green, GLbyte  blue);
  extern GLEEPFNGLSECONDARYCOLOR3BPROC GLeeFuncPtr_glSecondaryColor3b;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3BVPROC) (const GLbyte * v);
  extern GLEEPFNGLSECONDARYCOLOR3BVPROC GLeeFuncPtr_glSecondaryColor3bv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3DPROC) (GLdouble  red, GLdouble  green, GLdouble  blue);
  extern GLEEPFNGLSECONDARYCOLOR3DPROC GLeeFuncPtr_glSecondaryColor3d;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3DVPROC) (const GLdouble * v);
  extern GLEEPFNGLSECONDARYCOLOR3DVPROC GLeeFuncPtr_glSecondaryColor3dv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3FPROC) (GLfloat  red, GLfloat  green, GLfloat  blue);
  extern GLEEPFNGLSECONDARYCOLOR3FPROC GLeeFuncPtr_glSecondaryColor3f;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3FVPROC) (const GLfloat * v);
  extern GLEEPFNGLSECONDARYCOLOR3FVPROC GLeeFuncPtr_glSecondaryColor3fv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3IPROC) (GLint  red, GLint  green, GLint  blue);
  extern GLEEPFNGLSECONDARYCOLOR3IPROC GLeeFuncPtr_glSecondaryColor3i;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3IVPROC) (const GLint * v);
  extern GLEEPFNGLSECONDARYCOLOR3IVPROC GLeeFuncPtr_glSecondaryColor3iv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3SPROC) (GLshort  red, GLshort  green, GLshort  blue);
  extern GLEEPFNGLSECONDARYCOLOR3SPROC GLeeFuncPtr_glSecondaryColor3s;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3SVPROC) (const GLshort * v);
  extern GLEEPFNGLSECONDARYCOLOR3SVPROC GLeeFuncPtr_glSecondaryColor3sv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UBPROC) (GLubyte  red, GLubyte  green, GLubyte  blue);
  extern GLEEPFNGLSECONDARYCOLOR3UBPROC GLeeFuncPtr_glSecondaryColor3ub;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte * v);
  extern GLEEPFNGLSECONDARYCOLOR3UBVPROC GLeeFuncPtr_glSecondaryColor3ubv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UIPROC) (GLuint  red, GLuint  green, GLuint  blue);
  extern GLEEPFNGLSECONDARYCOLOR3UIPROC GLeeFuncPtr_glSecondaryColor3ui;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UIVPROC) (const GLuint * v);
  extern GLEEPFNGLSECONDARYCOLOR3UIVPROC GLeeFuncPtr_glSecondaryColor3uiv;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3USPROC) (GLushort  red, GLushort  green, GLushort  blue);
  extern GLEEPFNGLSECONDARYCOLOR3USPROC GLeeFuncPtr_glSecondaryColor3us;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3USVPROC) (const GLushort * v);
  extern GLEEPFNGLSECONDARYCOLOR3USVPROC GLeeFuncPtr_glSecondaryColor3usv;
  typedef void (* GLEEPFNGLSECONDARYCOLORPOINTERPROC) (GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLSECONDARYCOLORPOINTERPROC GLeeFuncPtr_glSecondaryColorPointer;
  typedef void (* GLEEPFNGLWINDOWPOS2DPROC) (GLdouble  x, GLdouble  y);
  extern GLEEPFNGLWINDOWPOS2DPROC GLeeFuncPtr_glWindowPos2d;
  typedef void (* GLEEPFNGLWINDOWPOS2DVPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS2DVPROC GLeeFuncPtr_glWindowPos2dv;
  typedef void (* GLEEPFNGLWINDOWPOS2FPROC) (GLfloat  x, GLfloat  y);
  extern GLEEPFNGLWINDOWPOS2FPROC GLeeFuncPtr_glWindowPos2f;
  typedef void (* GLEEPFNGLWINDOWPOS2FVPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS2FVPROC GLeeFuncPtr_glWindowPos2fv;
  typedef void (* GLEEPFNGLWINDOWPOS2IPROC) (GLint  x, GLint  y);
  extern GLEEPFNGLWINDOWPOS2IPROC GLeeFuncPtr_glWindowPos2i;
  typedef void (* GLEEPFNGLWINDOWPOS2IVPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS2IVPROC GLeeFuncPtr_glWindowPos2iv;
  typedef void (* GLEEPFNGLWINDOWPOS2SPROC) (GLshort  x, GLshort  y);
  extern GLEEPFNGLWINDOWPOS2SPROC GLeeFuncPtr_glWindowPos2s;
  typedef void (* GLEEPFNGLWINDOWPOS2SVPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS2SVPROC GLeeFuncPtr_glWindowPos2sv;
  typedef void (* GLEEPFNGLWINDOWPOS3DPROC) (GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLWINDOWPOS3DPROC GLeeFuncPtr_glWindowPos3d;
  typedef void (* GLEEPFNGLWINDOWPOS3DVPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS3DVPROC GLeeFuncPtr_glWindowPos3dv;
  typedef void (* GLEEPFNGLWINDOWPOS3FPROC) (GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLWINDOWPOS3FPROC GLeeFuncPtr_glWindowPos3f;
  typedef void (* GLEEPFNGLWINDOWPOS3FVPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS3FVPROC GLeeFuncPtr_glWindowPos3fv;
  typedef void (* GLEEPFNGLWINDOWPOS3IPROC) (GLint  x, GLint  y, GLint  z);
  extern GLEEPFNGLWINDOWPOS3IPROC GLeeFuncPtr_glWindowPos3i;
  typedef void (* GLEEPFNGLWINDOWPOS3IVPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS3IVPROC GLeeFuncPtr_glWindowPos3iv;
  typedef void (* GLEEPFNGLWINDOWPOS3SPROC) (GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLWINDOWPOS3SPROC GLeeFuncPtr_glWindowPos3s;
  typedef void (* GLEEPFNGLWINDOWPOS3SVPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS3SVPROC GLeeFuncPtr_glWindowPos3sv;

/* GL_VERSION_1_5 */

/* Constants */
  typedef void (* GLEEPFNGLGENQUERIESPROC) (GLsizei  n, GLuint * ids);
  extern GLEEPFNGLGENQUERIESPROC GLeeFuncPtr_glGenQueries;
  typedef void (* GLEEPFNGLDELETEQUERIESPROC) (GLsizei  n, const GLuint * ids);
  extern GLEEPFNGLDELETEQUERIESPROC GLeeFuncPtr_glDeleteQueries;
  typedef GLboolean (* GLEEPFNGLISQUERYPROC) (GLuint  id);
  extern GLEEPFNGLISQUERYPROC GLeeFuncPtr_glIsQuery;
  typedef void (* GLEEPFNGLBEGINQUERYPROC) (GLenum  target, GLuint  id);
  extern GLEEPFNGLBEGINQUERYPROC GLeeFuncPtr_glBeginQuery;
  typedef void (* GLEEPFNGLENDQUERYPROC) (GLenum  target);
  extern GLEEPFNGLENDQUERYPROC GLeeFuncPtr_glEndQuery;
  typedef void (* GLEEPFNGLGETQUERYIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETQUERYIVPROC GLeeFuncPtr_glGetQueryiv;
  typedef void (* GLEEPFNGLGETQUERYOBJECTIVPROC) (GLuint  id, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETQUERYOBJECTIVPROC GLeeFuncPtr_glGetQueryObjectiv;
  typedef void (* GLEEPFNGLGETQUERYOBJECTUIVPROC) (GLuint  id, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETQUERYOBJECTUIVPROC GLeeFuncPtr_glGetQueryObjectuiv;
  typedef void (* GLEEPFNGLBINDBUFFERPROC) (GLenum  target, GLuint  buffer);
  extern GLEEPFNGLBINDBUFFERPROC GLeeFuncPtr_glBindBuffer;
  typedef void (* GLEEPFNGLDELETEBUFFERSPROC) (GLsizei  n, const GLuint * buffers);
  extern GLEEPFNGLDELETEBUFFERSPROC GLeeFuncPtr_glDeleteBuffers;
  typedef void (* GLEEPFNGLGENBUFFERSPROC) (GLsizei  n, GLuint * buffers);
  extern GLEEPFNGLGENBUFFERSPROC GLeeFuncPtr_glGenBuffers;
  typedef GLboolean (* GLEEPFNGLISBUFFERPROC) (GLuint  buffer);
  extern GLEEPFNGLISBUFFERPROC GLeeFuncPtr_glIsBuffer;
  typedef void (* GLEEPFNGLBUFFERDATAPROC) (GLenum  target, GLsizeiptr  size, const GLvoid * data, GLenum  usage);
  extern GLEEPFNGLBUFFERDATAPROC GLeeFuncPtr_glBufferData;
  typedef void (* GLEEPFNGLBUFFERSUBDATAPROC) (GLenum  target, GLintptr  offset, GLsizeiptr  size, const GLvoid * data);
  extern GLEEPFNGLBUFFERSUBDATAPROC GLeeFuncPtr_glBufferSubData;
  typedef void (* GLEEPFNGLGETBUFFERSUBDATAPROC) (GLenum  target, GLintptr  offset, GLsizeiptr  size, GLvoid * data);
  extern GLEEPFNGLGETBUFFERSUBDATAPROC GLeeFuncPtr_glGetBufferSubData;
  typedef GLvoid* (* GLEEPFNGLMAPBUFFERPROC) (GLenum  target, GLenum  access);
  extern GLEEPFNGLMAPBUFFERPROC GLeeFuncPtr_glMapBuffer;
  typedef GLboolean (* GLEEPFNGLUNMAPBUFFERPROC) (GLenum  target);
  extern GLEEPFNGLUNMAPBUFFERPROC GLeeFuncPtr_glUnmapBuffer;
  typedef void (* GLEEPFNGLGETBUFFERPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETBUFFERPARAMETERIVPROC GLeeFuncPtr_glGetBufferParameteriv;
  typedef void (* GLEEPFNGLGETBUFFERPOINTERVPROC) (GLenum  target, GLenum  pname, GLvoid* * params);
  extern GLEEPFNGLGETBUFFERPOINTERVPROC GLeeFuncPtr_glGetBufferPointerv;

/* GL_VERSION_2_0 */

/* Constants */
  typedef void (* GLEEPFNGLBLENDEQUATIONSEPARATEPROC) (GLenum  modeRGB, GLenum  modeAlpha);
  extern GLEEPFNGLBLENDEQUATIONSEPARATEPROC GLeeFuncPtr_glBlendEquationSeparate;
  typedef void (* GLEEPFNGLDRAWBUFFERSPROC) (GLsizei  n, const GLenum * bufs);
  extern GLEEPFNGLDRAWBUFFERSPROC GLeeFuncPtr_glDrawBuffers;
  typedef void (* GLEEPFNGLSTENCILOPSEPARATEPROC) (GLenum  face, GLenum  sfail, GLenum  dpfail, GLenum  dppass);
  extern GLEEPFNGLSTENCILOPSEPARATEPROC GLeeFuncPtr_glStencilOpSeparate;
  typedef void (* GLEEPFNGLSTENCILFUNCSEPARATEPROC) (GLenum  face, GLenum  func, GLint  ref, GLuint  mask);
  extern GLEEPFNGLSTENCILFUNCSEPARATEPROC GLeeFuncPtr_glStencilFuncSeparate;
  typedef void (* GLEEPFNGLSTENCILMASKSEPARATEPROC) (GLenum  face, GLuint  mask);
  extern GLEEPFNGLSTENCILMASKSEPARATEPROC GLeeFuncPtr_glStencilMaskSeparate;
  typedef void (* GLEEPFNGLATTACHSHADERPROC) (GLuint  program, GLuint  shader);
  extern GLEEPFNGLATTACHSHADERPROC GLeeFuncPtr_glAttachShader;
  typedef void (* GLEEPFNGLBINDATTRIBLOCATIONPROC) (GLuint  program, GLuint  index, const GLchar * name);
  extern GLEEPFNGLBINDATTRIBLOCATIONPROC GLeeFuncPtr_glBindAttribLocation;
  typedef void (* GLEEPFNGLCOMPILESHADERPROC) (GLuint  shader);
  extern GLEEPFNGLCOMPILESHADERPROC GLeeFuncPtr_glCompileShader;
  typedef GLuint (* GLEEPFNGLCREATEPROGRAMPROC) ();
  extern GLEEPFNGLCREATEPROGRAMPROC GLeeFuncPtr_glCreateProgram;
  typedef GLuint (* GLEEPFNGLCREATESHADERPROC) (GLenum  type);
  extern GLEEPFNGLCREATESHADERPROC GLeeFuncPtr_glCreateShader;
  typedef void (* GLEEPFNGLDELETEPROGRAMPROC) (GLuint  program);
  extern GLEEPFNGLDELETEPROGRAMPROC GLeeFuncPtr_glDeleteProgram;
  typedef void (* GLEEPFNGLDELETESHADERPROC) (GLuint  shader);
  extern GLEEPFNGLDELETESHADERPROC GLeeFuncPtr_glDeleteShader;
  typedef void (* GLEEPFNGLDETACHSHADERPROC) (GLuint  program, GLuint  shader);
  extern GLEEPFNGLDETACHSHADERPROC GLeeFuncPtr_glDetachShader;
  typedef void (* GLEEPFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint  index);
  extern GLEEPFNGLDISABLEVERTEXATTRIBARRAYPROC GLeeFuncPtr_glDisableVertexAttribArray;
  typedef void (* GLEEPFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint  index);
  extern GLEEPFNGLENABLEVERTEXATTRIBARRAYPROC GLeeFuncPtr_glEnableVertexAttribArray;
  typedef void (* GLEEPFNGLGETACTIVEATTRIBPROC) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
  extern GLEEPFNGLGETACTIVEATTRIBPROC GLeeFuncPtr_glGetActiveAttrib;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMPROC) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
  extern GLEEPFNGLGETACTIVEUNIFORMPROC GLeeFuncPtr_glGetActiveUniform;
  typedef void (* GLEEPFNGLGETATTACHEDSHADERSPROC) (GLuint  program, GLsizei  maxCount, GLsizei * count, GLuint * obj);
  extern GLEEPFNGLGETATTACHEDSHADERSPROC GLeeFuncPtr_glGetAttachedShaders;
  typedef GLint (* GLEEPFNGLGETATTRIBLOCATIONPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETATTRIBLOCATIONPROC GLeeFuncPtr_glGetAttribLocation;
  typedef void (* GLEEPFNGLGETPROGRAMIVPROC) (GLuint  program, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETPROGRAMIVPROC GLeeFuncPtr_glGetProgramiv;
  typedef void (* GLEEPFNGLGETPROGRAMINFOLOGPROC) (GLuint  program, GLsizei  bufSize, GLsizei * length, GLchar * infoLog);
  extern GLEEPFNGLGETPROGRAMINFOLOGPROC GLeeFuncPtr_glGetProgramInfoLog;
  typedef void (* GLEEPFNGLGETSHADERIVPROC) (GLuint  shader, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETSHADERIVPROC GLeeFuncPtr_glGetShaderiv;
  typedef void (* GLEEPFNGLGETSHADERINFOLOGPROC) (GLuint  shader, GLsizei  bufSize, GLsizei * length, GLchar * infoLog);
  extern GLEEPFNGLGETSHADERINFOLOGPROC GLeeFuncPtr_glGetShaderInfoLog;
  typedef void (* GLEEPFNGLGETSHADERSOURCEPROC) (GLuint  shader, GLsizei  bufSize, GLsizei * length, GLchar * source);
  extern GLEEPFNGLGETSHADERSOURCEPROC GLeeFuncPtr_glGetShaderSource;
  typedef GLint (* GLEEPFNGLGETUNIFORMLOCATIONPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETUNIFORMLOCATIONPROC GLeeFuncPtr_glGetUniformLocation;
  typedef void (* GLEEPFNGLGETUNIFORMFVPROC) (GLuint  program, GLint  location, GLfloat * params);
  extern GLEEPFNGLGETUNIFORMFVPROC GLeeFuncPtr_glGetUniformfv;
  typedef void (* GLEEPFNGLGETUNIFORMIVPROC) (GLuint  program, GLint  location, GLint * params);
  extern GLEEPFNGLGETUNIFORMIVPROC GLeeFuncPtr_glGetUniformiv;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBDVPROC) (GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVERTEXATTRIBDVPROC GLeeFuncPtr_glGetVertexAttribdv;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBFVPROC) (GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVERTEXATTRIBFVPROC GLeeFuncPtr_glGetVertexAttribfv;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBIVPROC) (GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVERTEXATTRIBIVPROC GLeeFuncPtr_glGetVertexAttribiv;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint  index, GLenum  pname, GLvoid* * pointer);
  extern GLEEPFNGLGETVERTEXATTRIBPOINTERVPROC GLeeFuncPtr_glGetVertexAttribPointerv;
  typedef GLboolean (* GLEEPFNGLISPROGRAMPROC) (GLuint  program);
  extern GLEEPFNGLISPROGRAMPROC GLeeFuncPtr_glIsProgram;
  typedef GLboolean (* GLEEPFNGLISSHADERPROC) (GLuint  shader);
  extern GLEEPFNGLISSHADERPROC GLeeFuncPtr_glIsShader;
  typedef void (* GLEEPFNGLLINKPROGRAMPROC) (GLuint  program);
  extern GLEEPFNGLLINKPROGRAMPROC GLeeFuncPtr_glLinkProgram;
  typedef void (* GLEEPFNGLSHADERSOURCEPROC) (GLuint  shader, GLsizei  count, const GLchar* * string, const GLint * length);
  extern GLEEPFNGLSHADERSOURCEPROC GLeeFuncPtr_glShaderSource;
  typedef void (* GLEEPFNGLUSEPROGRAMPROC) (GLuint  program);
  extern GLEEPFNGLUSEPROGRAMPROC GLeeFuncPtr_glUseProgram;
  typedef void (* GLEEPFNGLUNIFORM1FPROC) (GLint  location, GLfloat  v0);
  extern GLEEPFNGLUNIFORM1FPROC GLeeFuncPtr_glUniform1f;
  typedef void (* GLEEPFNGLUNIFORM2FPROC) (GLint  location, GLfloat  v0, GLfloat  v1);
  extern GLEEPFNGLUNIFORM2FPROC GLeeFuncPtr_glUniform2f;
  typedef void (* GLEEPFNGLUNIFORM3FPROC) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2);
  extern GLEEPFNGLUNIFORM3FPROC GLeeFuncPtr_glUniform3f;
  typedef void (* GLEEPFNGLUNIFORM4FPROC) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3);
  extern GLEEPFNGLUNIFORM4FPROC GLeeFuncPtr_glUniform4f;
  typedef void (* GLEEPFNGLUNIFORM1IPROC) (GLint  location, GLint  v0);
  extern GLEEPFNGLUNIFORM1IPROC GLeeFuncPtr_glUniform1i;
  typedef void (* GLEEPFNGLUNIFORM2IPROC) (GLint  location, GLint  v0, GLint  v1);
  extern GLEEPFNGLUNIFORM2IPROC GLeeFuncPtr_glUniform2i;
  typedef void (* GLEEPFNGLUNIFORM3IPROC) (GLint  location, GLint  v0, GLint  v1, GLint  v2);
  extern GLEEPFNGLUNIFORM3IPROC GLeeFuncPtr_glUniform3i;
  typedef void (* GLEEPFNGLUNIFORM4IPROC) (GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3);
  extern GLEEPFNGLUNIFORM4IPROC GLeeFuncPtr_glUniform4i;
  typedef void (* GLEEPFNGLUNIFORM1FVPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM1FVPROC GLeeFuncPtr_glUniform1fv;
  typedef void (* GLEEPFNGLUNIFORM2FVPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM2FVPROC GLeeFuncPtr_glUniform2fv;
  typedef void (* GLEEPFNGLUNIFORM3FVPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM3FVPROC GLeeFuncPtr_glUniform3fv;
  typedef void (* GLEEPFNGLUNIFORM4FVPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM4FVPROC GLeeFuncPtr_glUniform4fv;
  typedef void (* GLEEPFNGLUNIFORM1IVPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM1IVPROC GLeeFuncPtr_glUniform1iv;
  typedef void (* GLEEPFNGLUNIFORM2IVPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM2IVPROC GLeeFuncPtr_glUniform2iv;
  typedef void (* GLEEPFNGLUNIFORM3IVPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM3IVPROC GLeeFuncPtr_glUniform3iv;
  typedef void (* GLEEPFNGLUNIFORM4IVPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM4IVPROC GLeeFuncPtr_glUniform4iv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX2FVPROC GLeeFuncPtr_glUniformMatrix2fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX3FVPROC GLeeFuncPtr_glUniformMatrix3fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX4FVPROC GLeeFuncPtr_glUniformMatrix4fv;
  typedef void (* GLEEPFNGLVALIDATEPROGRAMPROC) (GLuint  program);
  extern GLEEPFNGLVALIDATEPROGRAMPROC GLeeFuncPtr_glValidateProgram;
  typedef void (* GLEEPFNGLVERTEXATTRIB1DPROC) (GLuint  index, GLdouble  x);
  extern GLEEPFNGLVERTEXATTRIB1DPROC GLeeFuncPtr_glVertexAttrib1d;
  typedef void (* GLEEPFNGLVERTEXATTRIB1DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB1DVPROC GLeeFuncPtr_glVertexAttrib1dv;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FPROC) (GLuint  index, GLfloat  x);
  extern GLEEPFNGLVERTEXATTRIB1FPROC GLeeFuncPtr_glVertexAttrib1f;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB1FVPROC GLeeFuncPtr_glVertexAttrib1fv;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SPROC) (GLuint  index, GLshort  x);
  extern GLEEPFNGLVERTEXATTRIB1SPROC GLeeFuncPtr_glVertexAttrib1s;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB1SVPROC GLeeFuncPtr_glVertexAttrib1sv;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DPROC) (GLuint  index, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXATTRIB2DPROC GLeeFuncPtr_glVertexAttrib2d;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB2DVPROC GLeeFuncPtr_glVertexAttrib2dv;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FPROC) (GLuint  index, GLfloat  x, GLfloat  y);
  extern GLEEPFNGLVERTEXATTRIB2FPROC GLeeFuncPtr_glVertexAttrib2f;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB2FVPROC GLeeFuncPtr_glVertexAttrib2fv;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SPROC) (GLuint  index, GLshort  x, GLshort  y);
  extern GLEEPFNGLVERTEXATTRIB2SPROC GLeeFuncPtr_glVertexAttrib2s;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB2SVPROC GLeeFuncPtr_glVertexAttrib2sv;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXATTRIB3DPROC GLeeFuncPtr_glVertexAttrib3d;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB3DVPROC GLeeFuncPtr_glVertexAttrib3dv;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLVERTEXATTRIB3FPROC GLeeFuncPtr_glVertexAttrib3f;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB3FVPROC GLeeFuncPtr_glVertexAttrib3fv;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLVERTEXATTRIB3SPROC GLeeFuncPtr_glVertexAttrib3s;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB3SVPROC GLeeFuncPtr_glVertexAttrib3sv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NBVPROC) (GLuint  index, const GLbyte * v);
  extern GLEEPFNGLVERTEXATTRIB4NBVPROC GLeeFuncPtr_glVertexAttrib4Nbv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NIVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIB4NIVPROC GLeeFuncPtr_glVertexAttrib4Niv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NSVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB4NSVPROC GLeeFuncPtr_glVertexAttrib4Nsv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUBPROC) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w);
  extern GLEEPFNGLVERTEXATTRIB4NUBPROC GLeeFuncPtr_glVertexAttrib4Nub;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUBVPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIB4NUBVPROC GLeeFuncPtr_glVertexAttrib4Nubv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIB4NUIVPROC GLeeFuncPtr_glVertexAttrib4Nuiv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUSVPROC) (GLuint  index, const GLushort * v);
  extern GLEEPFNGLVERTEXATTRIB4NUSVPROC GLeeFuncPtr_glVertexAttrib4Nusv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4BVPROC) (GLuint  index, const GLbyte * v);
  extern GLEEPFNGLVERTEXATTRIB4BVPROC GLeeFuncPtr_glVertexAttrib4bv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXATTRIB4DPROC GLeeFuncPtr_glVertexAttrib4d;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB4DVPROC GLeeFuncPtr_glVertexAttrib4dv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLVERTEXATTRIB4FPROC GLeeFuncPtr_glVertexAttrib4f;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB4FVPROC GLeeFuncPtr_glVertexAttrib4fv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4IVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIB4IVPROC GLeeFuncPtr_glVertexAttrib4iv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w);
  extern GLEEPFNGLVERTEXATTRIB4SPROC GLeeFuncPtr_glVertexAttrib4s;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB4SVPROC GLeeFuncPtr_glVertexAttrib4sv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UBVPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIB4UBVPROC GLeeFuncPtr_glVertexAttrib4ubv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIB4UIVPROC GLeeFuncPtr_glVertexAttrib4uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIB4USVPROC) (GLuint  index, const GLushort * v);
  extern GLEEPFNGLVERTEXATTRIB4USVPROC GLeeFuncPtr_glVertexAttrib4usv;
  typedef void (* GLEEPFNGLVERTEXATTRIBPOINTERPROC) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBPOINTERPROC GLeeFuncPtr_glVertexAttribPointer;

/* GL_VERSION_2_1 */

/* Constants */
  typedef void (* GLEEPFNGLUNIFORMMATRIX2X3FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX2X3FVPROC GLeeFuncPtr_glUniformMatrix2x3fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3X2FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX3X2FVPROC GLeeFuncPtr_glUniformMatrix3x2fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2X4FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX2X4FVPROC GLeeFuncPtr_glUniformMatrix2x4fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4X2FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX4X2FVPROC GLeeFuncPtr_glUniformMatrix4x2fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3X4FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX3X4FVPROC GLeeFuncPtr_glUniformMatrix3x4fv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4X3FVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX4X3FVPROC GLeeFuncPtr_glUniformMatrix4x3fv;

/* GL_VERSION_3_0 */

/* Constants */
  typedef void (* GLEEPFNGLCOLORMASKIPROC) (GLuint  index, GLboolean  r, GLboolean  g, GLboolean  b, GLboolean  a);
  extern GLEEPFNGLCOLORMASKIPROC GLeeFuncPtr_glColorMaski;
  typedef void (* GLEEPFNGLGETBOOLEANI_VPROC) (GLenum  target, GLuint  index, GLboolean * data);
  extern GLEEPFNGLGETBOOLEANI_VPROC GLeeFuncPtr_glGetBooleani_v;
  typedef void (* GLEEPFNGLGETINTEGERI_VPROC) (GLenum  target, GLuint  index, GLint * data);
  extern GLEEPFNGLGETINTEGERI_VPROC GLeeFuncPtr_glGetIntegeri_v;
  typedef void (* GLEEPFNGLENABLEIPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLENABLEIPROC GLeeFuncPtr_glEnablei;
  typedef void (* GLEEPFNGLDISABLEIPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLDISABLEIPROC GLeeFuncPtr_glDisablei;
  typedef GLboolean (* GLEEPFNGLISENABLEDIPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLISENABLEDIPROC GLeeFuncPtr_glIsEnabledi;
  typedef void (* GLEEPFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum  primitiveMode);
  extern GLEEPFNGLBEGINTRANSFORMFEEDBACKPROC GLeeFuncPtr_glBeginTransformFeedback;
  typedef void (* GLEEPFNGLENDTRANSFORMFEEDBACKPROC) ();
  extern GLEEPFNGLENDTRANSFORMFEEDBACKPROC GLeeFuncPtr_glEndTransformFeedback;
  typedef void (* GLEEPFNGLBINDBUFFERRANGEPROC) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size);
  extern GLEEPFNGLBINDBUFFERRANGEPROC GLeeFuncPtr_glBindBufferRange;
  typedef void (* GLEEPFNGLBINDBUFFERBASEPROC) (GLenum  target, GLuint  index, GLuint  buffer);
  extern GLEEPFNGLBINDBUFFERBASEPROC GLeeFuncPtr_glBindBufferBase;
  typedef void (* GLEEPFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint  program, GLsizei  count, const GLchar* * varyings, GLenum  bufferMode);
  extern GLEEPFNGLTRANSFORMFEEDBACKVARYINGSPROC GLeeFuncPtr_glTransformFeedbackVaryings;
  typedef void (* GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
  extern GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGPROC GLeeFuncPtr_glGetTransformFeedbackVarying;
  typedef void (* GLEEPFNGLCLAMPCOLORPROC) (GLenum  target, GLenum  clamp);
  extern GLEEPFNGLCLAMPCOLORPROC GLeeFuncPtr_glClampColor;
  typedef void (* GLEEPFNGLBEGINCONDITIONALRENDERPROC) (GLuint  id, GLenum  mode);
  extern GLEEPFNGLBEGINCONDITIONALRENDERPROC GLeeFuncPtr_glBeginConditionalRender;
  typedef void (* GLEEPFNGLENDCONDITIONALRENDERPROC) ();
  extern GLEEPFNGLENDCONDITIONALRENDERPROC GLeeFuncPtr_glEndConditionalRender;
  typedef void (* GLEEPFNGLVERTEXATTRIBIPOINTERPROC) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBIPOINTERPROC GLeeFuncPtr_glVertexAttribIPointer;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBIIVPROC) (GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVERTEXATTRIBIIVPROC GLeeFuncPtr_glGetVertexAttribIiv;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBIUIVPROC) (GLuint  index, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETVERTEXATTRIBIUIVPROC GLeeFuncPtr_glGetVertexAttribIuiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI1IPROC) (GLuint  index, GLint  x);
  extern GLEEPFNGLVERTEXATTRIBI1IPROC GLeeFuncPtr_glVertexAttribI1i;
  typedef void (* GLEEPFNGLVERTEXATTRIBI2IPROC) (GLuint  index, GLint  x, GLint  y);
  extern GLEEPFNGLVERTEXATTRIBI2IPROC GLeeFuncPtr_glVertexAttribI2i;
  typedef void (* GLEEPFNGLVERTEXATTRIBI3IPROC) (GLuint  index, GLint  x, GLint  y, GLint  z);
  extern GLEEPFNGLVERTEXATTRIBI3IPROC GLeeFuncPtr_glVertexAttribI3i;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4IPROC) (GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w);
  extern GLEEPFNGLVERTEXATTRIBI4IPROC GLeeFuncPtr_glVertexAttribI4i;
  typedef void (* GLEEPFNGLVERTEXATTRIBI1UIPROC) (GLuint  index, GLuint  x);
  extern GLEEPFNGLVERTEXATTRIBI1UIPROC GLeeFuncPtr_glVertexAttribI1ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBI2UIPROC) (GLuint  index, GLuint  x, GLuint  y);
  extern GLEEPFNGLVERTEXATTRIBI2UIPROC GLeeFuncPtr_glVertexAttribI2ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBI3UIPROC) (GLuint  index, GLuint  x, GLuint  y, GLuint  z);
  extern GLEEPFNGLVERTEXATTRIBI3UIPROC GLeeFuncPtr_glVertexAttribI3ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4UIPROC) (GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w);
  extern GLEEPFNGLVERTEXATTRIBI4UIPROC GLeeFuncPtr_glVertexAttribI4ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBI1IVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIBI1IVPROC GLeeFuncPtr_glVertexAttribI1iv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI2IVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIBI2IVPROC GLeeFuncPtr_glVertexAttribI2iv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI3IVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIBI3IVPROC GLeeFuncPtr_glVertexAttribI3iv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4IVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIBI4IVPROC GLeeFuncPtr_glVertexAttribI4iv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI1UIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIBI1UIVPROC GLeeFuncPtr_glVertexAttribI1uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI2UIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIBI2UIVPROC GLeeFuncPtr_glVertexAttribI2uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI3UIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIBI3UIVPROC GLeeFuncPtr_glVertexAttribI3uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4UIVPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIBI4UIVPROC GLeeFuncPtr_glVertexAttribI4uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4BVPROC) (GLuint  index, const GLbyte * v);
  extern GLEEPFNGLVERTEXATTRIBI4BVPROC GLeeFuncPtr_glVertexAttribI4bv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4SVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIBI4SVPROC GLeeFuncPtr_glVertexAttribI4sv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4UBVPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIBI4UBVPROC GLeeFuncPtr_glVertexAttribI4ubv;
  typedef void (* GLEEPFNGLVERTEXATTRIBI4USVPROC) (GLuint  index, const GLushort * v);
  extern GLEEPFNGLVERTEXATTRIBI4USVPROC GLeeFuncPtr_glVertexAttribI4usv;
  typedef void (* GLEEPFNGLGETUNIFORMUIVPROC) (GLuint  program, GLint  location, GLuint * params);
  extern GLEEPFNGLGETUNIFORMUIVPROC GLeeFuncPtr_glGetUniformuiv;
  typedef void (* GLEEPFNGLBINDFRAGDATALOCATIONPROC) (GLuint  program, GLuint  color, const GLchar * name);
  extern GLEEPFNGLBINDFRAGDATALOCATIONPROC GLeeFuncPtr_glBindFragDataLocation;
  typedef GLint (* GLEEPFNGLGETFRAGDATALOCATIONPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETFRAGDATALOCATIONPROC GLeeFuncPtr_glGetFragDataLocation;
  typedef void (* GLEEPFNGLUNIFORM1UIPROC) (GLint  location, GLuint  v0);
  extern GLEEPFNGLUNIFORM1UIPROC GLeeFuncPtr_glUniform1ui;
  typedef void (* GLEEPFNGLUNIFORM2UIPROC) (GLint  location, GLuint  v0, GLuint  v1);
  extern GLEEPFNGLUNIFORM2UIPROC GLeeFuncPtr_glUniform2ui;
  typedef void (* GLEEPFNGLUNIFORM3UIPROC) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2);
  extern GLEEPFNGLUNIFORM3UIPROC GLeeFuncPtr_glUniform3ui;
  typedef void (* GLEEPFNGLUNIFORM4UIPROC) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3);
  extern GLEEPFNGLUNIFORM4UIPROC GLeeFuncPtr_glUniform4ui;
  typedef void (* GLEEPFNGLUNIFORM1UIVPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM1UIVPROC GLeeFuncPtr_glUniform1uiv;
  typedef void (* GLEEPFNGLUNIFORM2UIVPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM2UIVPROC GLeeFuncPtr_glUniform2uiv;
  typedef void (* GLEEPFNGLUNIFORM3UIVPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM3UIVPROC GLeeFuncPtr_glUniform3uiv;
  typedef void (* GLEEPFNGLUNIFORM4UIVPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM4UIVPROC GLeeFuncPtr_glUniform4uiv;
  typedef void (* GLEEPFNGLTEXPARAMETERIIVPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLTEXPARAMETERIIVPROC GLeeFuncPtr_glTexParameterIiv;
  typedef void (* GLEEPFNGLTEXPARAMETERIUIVPROC) (GLenum  target, GLenum  pname, const GLuint * params);
  extern GLEEPFNGLTEXPARAMETERIUIVPROC GLeeFuncPtr_glTexParameterIuiv;
  typedef void (* GLEEPFNGLGETTEXPARAMETERIIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTEXPARAMETERIIVPROC GLeeFuncPtr_glGetTexParameterIiv;
  typedef void (* GLEEPFNGLGETTEXPARAMETERIUIVPROC) (GLenum  target, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETTEXPARAMETERIUIVPROC GLeeFuncPtr_glGetTexParameterIuiv;
  typedef void (* GLEEPFNGLCLEARBUFFERIVPROC) (GLenum  buffer, GLint  drawbuffer, const GLint * value);
  extern GLEEPFNGLCLEARBUFFERIVPROC GLeeFuncPtr_glClearBufferiv;
  typedef void (* GLEEPFNGLCLEARBUFFERUIVPROC) (GLenum  buffer, GLint  drawbuffer, const GLuint * value);
  extern GLEEPFNGLCLEARBUFFERUIVPROC GLeeFuncPtr_glClearBufferuiv;
  typedef void (* GLEEPFNGLCLEARBUFFERFVPROC) (GLenum  buffer, GLint  drawbuffer, const GLfloat * value);
  extern GLEEPFNGLCLEARBUFFERFVPROC GLeeFuncPtr_glClearBufferfv;
  typedef void (* GLEEPFNGLCLEARBUFFERFIPROC) (GLenum  buffer, GLint  drawbuffer, GLfloat  depth, GLint  stencil);
  extern GLEEPFNGLCLEARBUFFERFIPROC GLeeFuncPtr_glClearBufferfi;
  typedef const GLubyte * (* GLEEPFNGLGETSTRINGIPROC) (GLenum  name, GLuint  index);
  extern GLEEPFNGLGETSTRINGIPROC GLeeFuncPtr_glGetStringi;

/* GL_VERSION_3_1 */

/* Constants */
  typedef void (* GLEEPFNGLDRAWARRAYSINSTANCEDPROC) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  primcount);
  extern GLEEPFNGLDRAWARRAYSINSTANCEDPROC GLeeFuncPtr_glDrawArraysInstanced;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum  mode, GLsizei  count, GLenum  type, const GLvoid * indices, GLsizei  primcount);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDPROC GLeeFuncPtr_glDrawElementsInstanced;
  typedef void (* GLEEPFNGLTEXBUFFERPROC) (GLenum  target, GLenum  internalformat, GLuint  buffer);
  extern GLEEPFNGLTEXBUFFERPROC GLeeFuncPtr_glTexBuffer;
  typedef void (* GLEEPFNGLPRIMITIVERESTARTINDEXPROC) (GLuint  index);
  extern GLEEPFNGLPRIMITIVERESTARTINDEXPROC GLeeFuncPtr_glPrimitiveRestartIndex;

/* GL_VERSION_3_2 */

/* Constants */
  typedef void (* GLEEPFNGLGETINTEGER64I_VPROC) (GLenum  target, GLuint  index, GLint64 * data);
  extern GLEEPFNGLGETINTEGER64I_VPROC GLeeFuncPtr_glGetInteger64i_v;
  typedef void (* GLEEPFNGLGETBUFFERPARAMETERI64VPROC) (GLenum  target, GLenum  pname, GLint64 * params);
  extern GLEEPFNGLGETBUFFERPARAMETERI64VPROC GLeeFuncPtr_glGetBufferParameteri64v;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTUREPROC) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTUREPROC GLeeFuncPtr_glFramebufferTexture;

/* GL_VERSION_3_3 */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBDIVISORPROC) (GLuint  index, GLuint  divisor);
  extern GLEEPFNGLVERTEXATTRIBDIVISORPROC GLeeFuncPtr_glVertexAttribDivisor;

/* GL_VERSION_4_0 */

/* Constants */
  typedef void (* GLEEPFNGLMINSAMPLESHADINGPROC) (GLclampf  value);
  extern GLEEPFNGLMINSAMPLESHADINGPROC GLeeFuncPtr_glMinSampleShading;
  typedef void (* GLEEPFNGLBLENDEQUATIONIPROC) (GLuint  buf, GLenum  mode);
  extern GLEEPFNGLBLENDEQUATIONIPROC GLeeFuncPtr_glBlendEquationi;
  typedef void (* GLEEPFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha);
  extern GLEEPFNGLBLENDEQUATIONSEPARATEIPROC GLeeFuncPtr_glBlendEquationSeparatei;
  typedef void (* GLEEPFNGLBLENDFUNCIPROC) (GLuint  buf, GLenum  src, GLenum  dst);
  extern GLEEPFNGLBLENDFUNCIPROC GLeeFuncPtr_glBlendFunci;
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEIPROC) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEIPROC GLeeFuncPtr_glBlendFuncSeparatei;

/* GL_VERSION_4_1 */

/* Constants */

/* GL_VERSION_4_2 */

/* Constants */

/* GL_ARB_multitexture */

/* Constants */
  typedef void (* GLEEPFNGLACTIVETEXTUREARBPROC) (GLenum  texture);
  extern GLEEPFNGLACTIVETEXTUREARBPROC GLeeFuncPtr_glActiveTextureARB;
  typedef void (* GLEEPFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum  texture);
  extern GLEEPFNGLCLIENTACTIVETEXTUREARBPROC GLeeFuncPtr_glClientActiveTextureARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1DARBPROC) (GLenum  target, GLdouble  s);
  extern GLEEPFNGLMULTITEXCOORD1DARBPROC GLeeFuncPtr_glMultiTexCoord1dARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1DVARBPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD1DVARBPROC GLeeFuncPtr_glMultiTexCoord1dvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1FARBPROC) (GLenum  target, GLfloat  s);
  extern GLEEPFNGLMULTITEXCOORD1FARBPROC GLeeFuncPtr_glMultiTexCoord1fARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1FVARBPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD1FVARBPROC GLeeFuncPtr_glMultiTexCoord1fvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1IARBPROC) (GLenum  target, GLint  s);
  extern GLEEPFNGLMULTITEXCOORD1IARBPROC GLeeFuncPtr_glMultiTexCoord1iARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1IVARBPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD1IVARBPROC GLeeFuncPtr_glMultiTexCoord1ivARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1SARBPROC) (GLenum  target, GLshort  s);
  extern GLEEPFNGLMULTITEXCOORD1SARBPROC GLeeFuncPtr_glMultiTexCoord1sARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD1SVARBPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD1SVARBPROC GLeeFuncPtr_glMultiTexCoord1svARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2DARBPROC) (GLenum  target, GLdouble  s, GLdouble  t);
  extern GLEEPFNGLMULTITEXCOORD2DARBPROC GLeeFuncPtr_glMultiTexCoord2dARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2DVARBPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD2DVARBPROC GLeeFuncPtr_glMultiTexCoord2dvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2FARBPROC) (GLenum  target, GLfloat  s, GLfloat  t);
  extern GLEEPFNGLMULTITEXCOORD2FARBPROC GLeeFuncPtr_glMultiTexCoord2fARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2FVARBPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD2FVARBPROC GLeeFuncPtr_glMultiTexCoord2fvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2IARBPROC) (GLenum  target, GLint  s, GLint  t);
  extern GLEEPFNGLMULTITEXCOORD2IARBPROC GLeeFuncPtr_glMultiTexCoord2iARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2IVARBPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD2IVARBPROC GLeeFuncPtr_glMultiTexCoord2ivARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2SARBPROC) (GLenum  target, GLshort  s, GLshort  t);
  extern GLEEPFNGLMULTITEXCOORD2SARBPROC GLeeFuncPtr_glMultiTexCoord2sARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD2SVARBPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD2SVARBPROC GLeeFuncPtr_glMultiTexCoord2svARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3DARBPROC) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r);
  extern GLEEPFNGLMULTITEXCOORD3DARBPROC GLeeFuncPtr_glMultiTexCoord3dARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3DVARBPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD3DVARBPROC GLeeFuncPtr_glMultiTexCoord3dvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3FARBPROC) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r);
  extern GLEEPFNGLMULTITEXCOORD3FARBPROC GLeeFuncPtr_glMultiTexCoord3fARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3FVARBPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD3FVARBPROC GLeeFuncPtr_glMultiTexCoord3fvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3IARBPROC) (GLenum  target, GLint  s, GLint  t, GLint  r);
  extern GLEEPFNGLMULTITEXCOORD3IARBPROC GLeeFuncPtr_glMultiTexCoord3iARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3IVARBPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD3IVARBPROC GLeeFuncPtr_glMultiTexCoord3ivARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3SARBPROC) (GLenum  target, GLshort  s, GLshort  t, GLshort  r);
  extern GLEEPFNGLMULTITEXCOORD3SARBPROC GLeeFuncPtr_glMultiTexCoord3sARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD3SVARBPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD3SVARBPROC GLeeFuncPtr_glMultiTexCoord3svARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4DARBPROC) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r, GLdouble  q);
  extern GLEEPFNGLMULTITEXCOORD4DARBPROC GLeeFuncPtr_glMultiTexCoord4dARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4DVARBPROC) (GLenum  target, const GLdouble * v);
  extern GLEEPFNGLMULTITEXCOORD4DVARBPROC GLeeFuncPtr_glMultiTexCoord4dvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4FARBPROC) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  q);
  extern GLEEPFNGLMULTITEXCOORD4FARBPROC GLeeFuncPtr_glMultiTexCoord4fARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4FVARBPROC) (GLenum  target, const GLfloat * v);
  extern GLEEPFNGLMULTITEXCOORD4FVARBPROC GLeeFuncPtr_glMultiTexCoord4fvARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4IARBPROC) (GLenum  target, GLint  s, GLint  t, GLint  r, GLint  q);
  extern GLEEPFNGLMULTITEXCOORD4IARBPROC GLeeFuncPtr_glMultiTexCoord4iARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4IVARBPROC) (GLenum  target, const GLint * v);
  extern GLEEPFNGLMULTITEXCOORD4IVARBPROC GLeeFuncPtr_glMultiTexCoord4ivARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4SARBPROC) (GLenum  target, GLshort  s, GLshort  t, GLshort  r, GLshort  q);
  extern GLEEPFNGLMULTITEXCOORD4SARBPROC GLeeFuncPtr_glMultiTexCoord4sARB;
  typedef void (* GLEEPFNGLMULTITEXCOORD4SVARBPROC) (GLenum  target, const GLshort * v);
  extern GLEEPFNGLMULTITEXCOORD4SVARBPROC GLeeFuncPtr_glMultiTexCoord4svARB;

/* GL_ARB_transpose_matrix */

/* Constants */
  typedef void (* GLEEPFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat * m);
  extern GLEEPFNGLLOADTRANSPOSEMATRIXFARBPROC GLeeFuncPtr_glLoadTransposeMatrixfARB;
  typedef void (* GLEEPFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble * m);
  extern GLEEPFNGLLOADTRANSPOSEMATRIXDARBPROC GLeeFuncPtr_glLoadTransposeMatrixdARB;
  typedef void (* GLEEPFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat * m);
  extern GLEEPFNGLMULTTRANSPOSEMATRIXFARBPROC GLeeFuncPtr_glMultTransposeMatrixfARB;
  typedef void (* GLEEPFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble * m);
  extern GLEEPFNGLMULTTRANSPOSEMATRIXDARBPROC GLeeFuncPtr_glMultTransposeMatrixdARB;

/* GL_ARB_multisample */

/* Constants */
  typedef void (* GLEEPFNGLSAMPLECOVERAGEARBPROC) (GLclampf  value, GLboolean  invert);
  extern GLEEPFNGLSAMPLECOVERAGEARBPROC GLeeFuncPtr_glSampleCoverageARB;

/* GL_ARB_texture_env_add */

/* Constants */

/* GL_ARB_texture_cube_map */

/* Constants */

/* GL_ARB_texture_compression */

/* Constants */
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE3DARBPROC GLeeFuncPtr_glCompressedTexImage3DARB;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE2DARBPROC GLeeFuncPtr_glCompressedTexImage2DARB;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXIMAGE1DARBPROC GLeeFuncPtr_glCompressedTexImage1DARB;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC GLeeFuncPtr_glCompressedTexSubImage3DARB;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC GLeeFuncPtr_glCompressedTexSubImage2DARB;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const GLvoid * data);
  extern GLEEPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC GLeeFuncPtr_glCompressedTexSubImage1DARB;
  typedef void (* GLEEPFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum  target, GLint  level, GLvoid * img);
  extern GLEEPFNGLGETCOMPRESSEDTEXIMAGEARBPROC GLeeFuncPtr_glGetCompressedTexImageARB;

/* GL_ARB_texture_border_clamp */

/* Constants */

/* GL_ARB_point_parameters */

/* Constants */
  typedef void (* GLEEPFNGLPOINTPARAMETERFARBPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPOINTPARAMETERFARBPROC GLeeFuncPtr_glPointParameterfARB;
  typedef void (* GLEEPFNGLPOINTPARAMETERFVARBPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPOINTPARAMETERFVARBPROC GLeeFuncPtr_glPointParameterfvARB;

/* GL_ARB_vertex_blend */

/* Constants */
  typedef void (* GLEEPFNGLWEIGHTBVARBPROC) (GLint  size, const GLbyte * weights);
  extern GLEEPFNGLWEIGHTBVARBPROC GLeeFuncPtr_glWeightbvARB;
  typedef void (* GLEEPFNGLWEIGHTSVARBPROC) (GLint  size, const GLshort * weights);
  extern GLEEPFNGLWEIGHTSVARBPROC GLeeFuncPtr_glWeightsvARB;
  typedef void (* GLEEPFNGLWEIGHTIVARBPROC) (GLint  size, const GLint * weights);
  extern GLEEPFNGLWEIGHTIVARBPROC GLeeFuncPtr_glWeightivARB;
  typedef void (* GLEEPFNGLWEIGHTFVARBPROC) (GLint  size, const GLfloat * weights);
  extern GLEEPFNGLWEIGHTFVARBPROC GLeeFuncPtr_glWeightfvARB;
  typedef void (* GLEEPFNGLWEIGHTDVARBPROC) (GLint  size, const GLdouble * weights);
  extern GLEEPFNGLWEIGHTDVARBPROC GLeeFuncPtr_glWeightdvARB;
  typedef void (* GLEEPFNGLWEIGHTUBVARBPROC) (GLint  size, const GLubyte * weights);
  extern GLEEPFNGLWEIGHTUBVARBPROC GLeeFuncPtr_glWeightubvARB;
  typedef void (* GLEEPFNGLWEIGHTUSVARBPROC) (GLint  size, const GLushort * weights);
  extern GLEEPFNGLWEIGHTUSVARBPROC GLeeFuncPtr_glWeightusvARB;
  typedef void (* GLEEPFNGLWEIGHTUIVARBPROC) (GLint  size, const GLuint * weights);
  extern GLEEPFNGLWEIGHTUIVARBPROC GLeeFuncPtr_glWeightuivARB;
  typedef void (* GLEEPFNGLWEIGHTPOINTERARBPROC) (GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLWEIGHTPOINTERARBPROC GLeeFuncPtr_glWeightPointerARB;
  typedef void (* GLEEPFNGLVERTEXBLENDARBPROC) (GLint  count);
  extern GLEEPFNGLVERTEXBLENDARBPROC GLeeFuncPtr_glVertexBlendARB;

/* GL_ARB_matrix_palette */

/* Constants */
  typedef void (* GLEEPFNGLCURRENTPALETTEMATRIXARBPROC) (GLint  index);
  extern GLEEPFNGLCURRENTPALETTEMATRIXARBPROC GLeeFuncPtr_glCurrentPaletteMatrixARB;
  typedef void (* GLEEPFNGLMATRIXINDEXUBVARBPROC) (GLint  size, const GLubyte * indices);
  extern GLEEPFNGLMATRIXINDEXUBVARBPROC GLeeFuncPtr_glMatrixIndexubvARB;
  typedef void (* GLEEPFNGLMATRIXINDEXUSVARBPROC) (GLint  size, const GLushort * indices);
  extern GLEEPFNGLMATRIXINDEXUSVARBPROC GLeeFuncPtr_glMatrixIndexusvARB;
  typedef void (* GLEEPFNGLMATRIXINDEXUIVARBPROC) (GLint  size, const GLuint * indices);
  extern GLEEPFNGLMATRIXINDEXUIVARBPROC GLeeFuncPtr_glMatrixIndexuivARB;
  typedef void (* GLEEPFNGLMATRIXINDEXPOINTERARBPROC) (GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLMATRIXINDEXPOINTERARBPROC GLeeFuncPtr_glMatrixIndexPointerARB;

/* GL_ARB_texture_env_combine */

/* Constants */

/* GL_ARB_texture_env_crossbar */

/* Constants */

/* GL_ARB_texture_env_dot3 */

/* Constants */

/* GL_ARB_texture_mirrored_repeat */

/* Constants */

/* GL_ARB_depth_texture */

/* Constants */

/* GL_ARB_shadow */

/* Constants */

/* GL_ARB_shadow_ambient */

/* Constants */

/* GL_ARB_window_pos */

/* Constants */
  typedef void (* GLEEPFNGLWINDOWPOS2DARBPROC) (GLdouble  x, GLdouble  y);
  extern GLEEPFNGLWINDOWPOS2DARBPROC GLeeFuncPtr_glWindowPos2dARB;
  typedef void (* GLEEPFNGLWINDOWPOS2DVARBPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS2DVARBPROC GLeeFuncPtr_glWindowPos2dvARB;
  typedef void (* GLEEPFNGLWINDOWPOS2FARBPROC) (GLfloat  x, GLfloat  y);
  extern GLEEPFNGLWINDOWPOS2FARBPROC GLeeFuncPtr_glWindowPos2fARB;
  typedef void (* GLEEPFNGLWINDOWPOS2FVARBPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS2FVARBPROC GLeeFuncPtr_glWindowPos2fvARB;
  typedef void (* GLEEPFNGLWINDOWPOS2IARBPROC) (GLint  x, GLint  y);
  extern GLEEPFNGLWINDOWPOS2IARBPROC GLeeFuncPtr_glWindowPos2iARB;
  typedef void (* GLEEPFNGLWINDOWPOS2IVARBPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS2IVARBPROC GLeeFuncPtr_glWindowPos2ivARB;
  typedef void (* GLEEPFNGLWINDOWPOS2SARBPROC) (GLshort  x, GLshort  y);
  extern GLEEPFNGLWINDOWPOS2SARBPROC GLeeFuncPtr_glWindowPos2sARB;
  typedef void (* GLEEPFNGLWINDOWPOS2SVARBPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS2SVARBPROC GLeeFuncPtr_glWindowPos2svARB;
  typedef void (* GLEEPFNGLWINDOWPOS3DARBPROC) (GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLWINDOWPOS3DARBPROC GLeeFuncPtr_glWindowPos3dARB;
  typedef void (* GLEEPFNGLWINDOWPOS3DVARBPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS3DVARBPROC GLeeFuncPtr_glWindowPos3dvARB;
  typedef void (* GLEEPFNGLWINDOWPOS3FARBPROC) (GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLWINDOWPOS3FARBPROC GLeeFuncPtr_glWindowPos3fARB;
  typedef void (* GLEEPFNGLWINDOWPOS3FVARBPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS3FVARBPROC GLeeFuncPtr_glWindowPos3fvARB;
  typedef void (* GLEEPFNGLWINDOWPOS3IARBPROC) (GLint  x, GLint  y, GLint  z);
  extern GLEEPFNGLWINDOWPOS3IARBPROC GLeeFuncPtr_glWindowPos3iARB;
  typedef void (* GLEEPFNGLWINDOWPOS3IVARBPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS3IVARBPROC GLeeFuncPtr_glWindowPos3ivARB;
  typedef void (* GLEEPFNGLWINDOWPOS3SARBPROC) (GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLWINDOWPOS3SARBPROC GLeeFuncPtr_glWindowPos3sARB;
  typedef void (* GLEEPFNGLWINDOWPOS3SVARBPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS3SVARBPROC GLeeFuncPtr_glWindowPos3svARB;

/* GL_ARB_vertex_program */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIB1DARBPROC) (GLuint  index, GLdouble  x);
  extern GLEEPFNGLVERTEXATTRIB1DARBPROC GLeeFuncPtr_glVertexAttrib1dARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB1DVARBPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB1DVARBPROC GLeeFuncPtr_glVertexAttrib1dvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FARBPROC) (GLuint  index, GLfloat  x);
  extern GLEEPFNGLVERTEXATTRIB1FARBPROC GLeeFuncPtr_glVertexAttrib1fARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FVARBPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB1FVARBPROC GLeeFuncPtr_glVertexAttrib1fvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SARBPROC) (GLuint  index, GLshort  x);
  extern GLEEPFNGLVERTEXATTRIB1SARBPROC GLeeFuncPtr_glVertexAttrib1sARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SVARBPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB1SVARBPROC GLeeFuncPtr_glVertexAttrib1svARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DARBPROC) (GLuint  index, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXATTRIB2DARBPROC GLeeFuncPtr_glVertexAttrib2dARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DVARBPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB2DVARBPROC GLeeFuncPtr_glVertexAttrib2dvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FARBPROC) (GLuint  index, GLfloat  x, GLfloat  y);
  extern GLEEPFNGLVERTEXATTRIB2FARBPROC GLeeFuncPtr_glVertexAttrib2fARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FVARBPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB2FVARBPROC GLeeFuncPtr_glVertexAttrib2fvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SARBPROC) (GLuint  index, GLshort  x, GLshort  y);
  extern GLEEPFNGLVERTEXATTRIB2SARBPROC GLeeFuncPtr_glVertexAttrib2sARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SVARBPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB2SVARBPROC GLeeFuncPtr_glVertexAttrib2svARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DARBPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXATTRIB3DARBPROC GLeeFuncPtr_glVertexAttrib3dARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DVARBPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB3DVARBPROC GLeeFuncPtr_glVertexAttrib3dvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FARBPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLVERTEXATTRIB3FARBPROC GLeeFuncPtr_glVertexAttrib3fARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FVARBPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB3FVARBPROC GLeeFuncPtr_glVertexAttrib3fvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SARBPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLVERTEXATTRIB3SARBPROC GLeeFuncPtr_glVertexAttrib3sARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SVARBPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB3SVARBPROC GLeeFuncPtr_glVertexAttrib3svARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NBVARBPROC) (GLuint  index, const GLbyte * v);
  extern GLEEPFNGLVERTEXATTRIB4NBVARBPROC GLeeFuncPtr_glVertexAttrib4NbvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NIVARBPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIB4NIVARBPROC GLeeFuncPtr_glVertexAttrib4NivARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NSVARBPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB4NSVARBPROC GLeeFuncPtr_glVertexAttrib4NsvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUBARBPROC) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w);
  extern GLEEPFNGLVERTEXATTRIB4NUBARBPROC GLeeFuncPtr_glVertexAttrib4NubARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIB4NUBVARBPROC GLeeFuncPtr_glVertexAttrib4NubvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIB4NUIVARBPROC GLeeFuncPtr_glVertexAttrib4NuivARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint  index, const GLushort * v);
  extern GLEEPFNGLVERTEXATTRIB4NUSVARBPROC GLeeFuncPtr_glVertexAttrib4NusvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4BVARBPROC) (GLuint  index, const GLbyte * v);
  extern GLEEPFNGLVERTEXATTRIB4BVARBPROC GLeeFuncPtr_glVertexAttrib4bvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DARBPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXATTRIB4DARBPROC GLeeFuncPtr_glVertexAttrib4dARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DVARBPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB4DVARBPROC GLeeFuncPtr_glVertexAttrib4dvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FARBPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLVERTEXATTRIB4FARBPROC GLeeFuncPtr_glVertexAttrib4fARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FVARBPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB4FVARBPROC GLeeFuncPtr_glVertexAttrib4fvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4IVARBPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLVERTEXATTRIB4IVARBPROC GLeeFuncPtr_glVertexAttrib4ivARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SARBPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w);
  extern GLEEPFNGLVERTEXATTRIB4SARBPROC GLeeFuncPtr_glVertexAttrib4sARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SVARBPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB4SVARBPROC GLeeFuncPtr_glVertexAttrib4svARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UBVARBPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIB4UBVARBPROC GLeeFuncPtr_glVertexAttrib4ubvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UIVARBPROC) (GLuint  index, const GLuint * v);
  extern GLEEPFNGLVERTEXATTRIB4UIVARBPROC GLeeFuncPtr_glVertexAttrib4uivARB;
  typedef void (* GLEEPFNGLVERTEXATTRIB4USVARBPROC) (GLuint  index, const GLushort * v);
  extern GLEEPFNGLVERTEXATTRIB4USVARBPROC GLeeFuncPtr_glVertexAttrib4usvARB;
  typedef void (* GLEEPFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBPOINTERARBPROC GLeeFuncPtr_glVertexAttribPointerARB;
  typedef void (* GLEEPFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint  index);
  extern GLEEPFNGLENABLEVERTEXATTRIBARRAYARBPROC GLeeFuncPtr_glEnableVertexAttribArrayARB;
  typedef void (* GLEEPFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint  index);
  extern GLEEPFNGLDISABLEVERTEXATTRIBARRAYARBPROC GLeeFuncPtr_glDisableVertexAttribArrayARB;
  typedef void (* GLEEPFNGLPROGRAMSTRINGARBPROC) (GLenum  target, GLenum  format, GLsizei  len, const GLvoid * string);
  extern GLEEPFNGLPROGRAMSTRINGARBPROC GLeeFuncPtr_glProgramStringARB;
  typedef void (* GLEEPFNGLBINDPROGRAMARBPROC) (GLenum  target, GLuint  program);
  extern GLEEPFNGLBINDPROGRAMARBPROC GLeeFuncPtr_glBindProgramARB;
  typedef void (* GLEEPFNGLDELETEPROGRAMSARBPROC) (GLsizei  n, const GLuint * programs);
  extern GLEEPFNGLDELETEPROGRAMSARBPROC GLeeFuncPtr_glDeleteProgramsARB;
  typedef void (* GLEEPFNGLGENPROGRAMSARBPROC) (GLsizei  n, GLuint * programs);
  extern GLEEPFNGLGENPROGRAMSARBPROC GLeeFuncPtr_glGenProgramsARB;
  typedef void (* GLEEPFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLPROGRAMENVPARAMETER4DARBPROC GLeeFuncPtr_glProgramEnvParameter4dARB;
  typedef void (* GLEEPFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum  target, GLuint  index, const GLdouble * params);
  extern GLEEPFNGLPROGRAMENVPARAMETER4DVARBPROC GLeeFuncPtr_glProgramEnvParameter4dvARB;
  typedef void (* GLEEPFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLPROGRAMENVPARAMETER4FARBPROC GLeeFuncPtr_glProgramEnvParameter4fARB;
  typedef void (* GLEEPFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum  target, GLuint  index, const GLfloat * params);
  extern GLEEPFNGLPROGRAMENVPARAMETER4FVARBPROC GLeeFuncPtr_glProgramEnvParameter4fvARB;
  typedef void (* GLEEPFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLPROGRAMLOCALPARAMETER4DARBPROC GLeeFuncPtr_glProgramLocalParameter4dARB;
  typedef void (* GLEEPFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum  target, GLuint  index, const GLdouble * params);
  extern GLEEPFNGLPROGRAMLOCALPARAMETER4DVARBPROC GLeeFuncPtr_glProgramLocalParameter4dvARB;
  typedef void (* GLEEPFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLPROGRAMLOCALPARAMETER4FARBPROC GLeeFuncPtr_glProgramLocalParameter4fARB;
  typedef void (* GLEEPFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum  target, GLuint  index, const GLfloat * params);
  extern GLEEPFNGLPROGRAMLOCALPARAMETER4FVARBPROC GLeeFuncPtr_glProgramLocalParameter4fvARB;
  typedef void (* GLEEPFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum  target, GLuint  index, GLdouble * params);
  extern GLEEPFNGLGETPROGRAMENVPARAMETERDVARBPROC GLeeFuncPtr_glGetProgramEnvParameterdvARB;
  typedef void (* GLEEPFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum  target, GLuint  index, GLfloat * params);
  extern GLEEPFNGLGETPROGRAMENVPARAMETERFVARBPROC GLeeFuncPtr_glGetProgramEnvParameterfvARB;
  typedef void (* GLEEPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum  target, GLuint  index, GLdouble * params);
  extern GLEEPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC GLeeFuncPtr_glGetProgramLocalParameterdvARB;
  typedef void (* GLEEPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum  target, GLuint  index, GLfloat * params);
  extern GLEEPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC GLeeFuncPtr_glGetProgramLocalParameterfvARB;
  typedef void (* GLEEPFNGLGETPROGRAMIVARBPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETPROGRAMIVARBPROC GLeeFuncPtr_glGetProgramivARB;
  typedef void (* GLEEPFNGLGETPROGRAMSTRINGARBPROC) (GLenum  target, GLenum  pname, GLvoid * string);
  extern GLEEPFNGLGETPROGRAMSTRINGARBPROC GLeeFuncPtr_glGetProgramStringARB;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBDVARBPROC) (GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVERTEXATTRIBDVARBPROC GLeeFuncPtr_glGetVertexAttribdvARB;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBFVARBPROC) (GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVERTEXATTRIBFVARBPROC GLeeFuncPtr_glGetVertexAttribfvARB;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBIVARBPROC) (GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVERTEXATTRIBIVARBPROC GLeeFuncPtr_glGetVertexAttribivARB;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint  index, GLenum  pname, GLvoid* * pointer);
  extern GLEEPFNGLGETVERTEXATTRIBPOINTERVARBPROC GLeeFuncPtr_glGetVertexAttribPointervARB;
  typedef GLboolean (* GLEEPFNGLISPROGRAMARBPROC) (GLuint  program);
  extern GLEEPFNGLISPROGRAMARBPROC GLeeFuncPtr_glIsProgramARB;

/* GL_ARB_fragment_program */

/* Constants */

/* GL_ARB_vertex_buffer_object */

/* Constants */
  typedef void (* GLEEPFNGLBINDBUFFERARBPROC) (GLenum  target, GLuint  buffer);
  extern GLEEPFNGLBINDBUFFERARBPROC GLeeFuncPtr_glBindBufferARB;
  typedef void (* GLEEPFNGLDELETEBUFFERSARBPROC) (GLsizei  n, const GLuint * buffers);
  extern GLEEPFNGLDELETEBUFFERSARBPROC GLeeFuncPtr_glDeleteBuffersARB;
  typedef void (* GLEEPFNGLGENBUFFERSARBPROC) (GLsizei  n, GLuint * buffers);
  extern GLEEPFNGLGENBUFFERSARBPROC GLeeFuncPtr_glGenBuffersARB;
  typedef GLboolean (* GLEEPFNGLISBUFFERARBPROC) (GLuint  buffer);
  extern GLEEPFNGLISBUFFERARBPROC GLeeFuncPtr_glIsBufferARB;
  typedef void (* GLEEPFNGLBUFFERDATAARBPROC) (GLenum  target, GLsizeiptrARB  size, const GLvoid * data, GLenum  usage);
  extern GLEEPFNGLBUFFERDATAARBPROC GLeeFuncPtr_glBufferDataARB;
  typedef void (* GLEEPFNGLBUFFERSUBDATAARBPROC) (GLenum  target, GLintptrARB  offset, GLsizeiptrARB  size, const GLvoid * data);
  extern GLEEPFNGLBUFFERSUBDATAARBPROC GLeeFuncPtr_glBufferSubDataARB;
  typedef void (* GLEEPFNGLGETBUFFERSUBDATAARBPROC) (GLenum  target, GLintptrARB  offset, GLsizeiptrARB  size, GLvoid * data);
  extern GLEEPFNGLGETBUFFERSUBDATAARBPROC GLeeFuncPtr_glGetBufferSubDataARB;
  typedef GLvoid* (* GLEEPFNGLMAPBUFFERARBPROC) (GLenum  target, GLenum  access);
  extern GLEEPFNGLMAPBUFFERARBPROC GLeeFuncPtr_glMapBufferARB;
  typedef GLboolean (* GLEEPFNGLUNMAPBUFFERARBPROC) (GLenum  target);
  extern GLEEPFNGLUNMAPBUFFERARBPROC GLeeFuncPtr_glUnmapBufferARB;
  typedef void (* GLEEPFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETBUFFERPARAMETERIVARBPROC GLeeFuncPtr_glGetBufferParameterivARB;
  typedef void (* GLEEPFNGLGETBUFFERPOINTERVARBPROC) (GLenum  target, GLenum  pname, GLvoid* * params);
  extern GLEEPFNGLGETBUFFERPOINTERVARBPROC GLeeFuncPtr_glGetBufferPointervARB;

/* GL_ARB_occlusion_query */

/* Constants */
  typedef void (* GLEEPFNGLGENQUERIESARBPROC) (GLsizei  n, GLuint * ids);
  extern GLEEPFNGLGENQUERIESARBPROC GLeeFuncPtr_glGenQueriesARB;
  typedef void (* GLEEPFNGLDELETEQUERIESARBPROC) (GLsizei  n, const GLuint * ids);
  extern GLEEPFNGLDELETEQUERIESARBPROC GLeeFuncPtr_glDeleteQueriesARB;
  typedef GLboolean (* GLEEPFNGLISQUERYARBPROC) (GLuint  id);
  extern GLEEPFNGLISQUERYARBPROC GLeeFuncPtr_glIsQueryARB;
  typedef void (* GLEEPFNGLBEGINQUERYARBPROC) (GLenum  target, GLuint  id);
  extern GLEEPFNGLBEGINQUERYARBPROC GLeeFuncPtr_glBeginQueryARB;
  typedef void (* GLEEPFNGLENDQUERYARBPROC) (GLenum  target);
  extern GLEEPFNGLENDQUERYARBPROC GLeeFuncPtr_glEndQueryARB;
  typedef void (* GLEEPFNGLGETQUERYIVARBPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETQUERYIVARBPROC GLeeFuncPtr_glGetQueryivARB;
  typedef void (* GLEEPFNGLGETQUERYOBJECTIVARBPROC) (GLuint  id, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETQUERYOBJECTIVARBPROC GLeeFuncPtr_glGetQueryObjectivARB;
  typedef void (* GLEEPFNGLGETQUERYOBJECTUIVARBPROC) (GLuint  id, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETQUERYOBJECTUIVARBPROC GLeeFuncPtr_glGetQueryObjectuivARB;

/* GL_ARB_shader_objects */

/* Constants */
  typedef void (* GLEEPFNGLDELETEOBJECTARBPROC) (GLhandleARB  obj);
  extern GLEEPFNGLDELETEOBJECTARBPROC GLeeFuncPtr_glDeleteObjectARB;
  typedef GLhandleARB (* GLEEPFNGLGETHANDLEARBPROC) (GLenum  pname);
  extern GLEEPFNGLGETHANDLEARBPROC GLeeFuncPtr_glGetHandleARB;
  typedef void (* GLEEPFNGLDETACHOBJECTARBPROC) (GLhandleARB  containerObj, GLhandleARB  attachedObj);
  extern GLEEPFNGLDETACHOBJECTARBPROC GLeeFuncPtr_glDetachObjectARB;
  typedef GLhandleARB (* GLEEPFNGLCREATESHADEROBJECTARBPROC) (GLenum  shaderType);
  extern GLEEPFNGLCREATESHADEROBJECTARBPROC GLeeFuncPtr_glCreateShaderObjectARB;
  typedef void (* GLEEPFNGLSHADERSOURCEARBPROC) (GLhandleARB  shaderObj, GLsizei  count, const GLcharARB* * string, const GLint * length);
  extern GLEEPFNGLSHADERSOURCEARBPROC GLeeFuncPtr_glShaderSourceARB;
  typedef void (* GLEEPFNGLCOMPILESHADERARBPROC) (GLhandleARB  shaderObj);
  extern GLEEPFNGLCOMPILESHADERARBPROC GLeeFuncPtr_glCompileShaderARB;
  typedef GLhandleARB (* GLEEPFNGLCREATEPROGRAMOBJECTARBPROC) ();
  extern GLEEPFNGLCREATEPROGRAMOBJECTARBPROC GLeeFuncPtr_glCreateProgramObjectARB;
  typedef void (* GLEEPFNGLATTACHOBJECTARBPROC) (GLhandleARB  containerObj, GLhandleARB  obj);
  extern GLEEPFNGLATTACHOBJECTARBPROC GLeeFuncPtr_glAttachObjectARB;
  typedef void (* GLEEPFNGLLINKPROGRAMARBPROC) (GLhandleARB  programObj);
  extern GLEEPFNGLLINKPROGRAMARBPROC GLeeFuncPtr_glLinkProgramARB;
  typedef void (* GLEEPFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB  programObj);
  extern GLEEPFNGLUSEPROGRAMOBJECTARBPROC GLeeFuncPtr_glUseProgramObjectARB;
  typedef void (* GLEEPFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB  programObj);
  extern GLEEPFNGLVALIDATEPROGRAMARBPROC GLeeFuncPtr_glValidateProgramARB;
  typedef void (* GLEEPFNGLUNIFORM1FARBPROC) (GLint  location, GLfloat  v0);
  extern GLEEPFNGLUNIFORM1FARBPROC GLeeFuncPtr_glUniform1fARB;
  typedef void (* GLEEPFNGLUNIFORM2FARBPROC) (GLint  location, GLfloat  v0, GLfloat  v1);
  extern GLEEPFNGLUNIFORM2FARBPROC GLeeFuncPtr_glUniform2fARB;
  typedef void (* GLEEPFNGLUNIFORM3FARBPROC) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2);
  extern GLEEPFNGLUNIFORM3FARBPROC GLeeFuncPtr_glUniform3fARB;
  typedef void (* GLEEPFNGLUNIFORM4FARBPROC) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3);
  extern GLEEPFNGLUNIFORM4FARBPROC GLeeFuncPtr_glUniform4fARB;
  typedef void (* GLEEPFNGLUNIFORM1IARBPROC) (GLint  location, GLint  v0);
  extern GLEEPFNGLUNIFORM1IARBPROC GLeeFuncPtr_glUniform1iARB;
  typedef void (* GLEEPFNGLUNIFORM2IARBPROC) (GLint  location, GLint  v0, GLint  v1);
  extern GLEEPFNGLUNIFORM2IARBPROC GLeeFuncPtr_glUniform2iARB;
  typedef void (* GLEEPFNGLUNIFORM3IARBPROC) (GLint  location, GLint  v0, GLint  v1, GLint  v2);
  extern GLEEPFNGLUNIFORM3IARBPROC GLeeFuncPtr_glUniform3iARB;
  typedef void (* GLEEPFNGLUNIFORM4IARBPROC) (GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3);
  extern GLEEPFNGLUNIFORM4IARBPROC GLeeFuncPtr_glUniform4iARB;
  typedef void (* GLEEPFNGLUNIFORM1FVARBPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM1FVARBPROC GLeeFuncPtr_glUniform1fvARB;
  typedef void (* GLEEPFNGLUNIFORM2FVARBPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM2FVARBPROC GLeeFuncPtr_glUniform2fvARB;
  typedef void (* GLEEPFNGLUNIFORM3FVARBPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM3FVARBPROC GLeeFuncPtr_glUniform3fvARB;
  typedef void (* GLEEPFNGLUNIFORM4FVARBPROC) (GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLUNIFORM4FVARBPROC GLeeFuncPtr_glUniform4fvARB;
  typedef void (* GLEEPFNGLUNIFORM1IVARBPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM1IVARBPROC GLeeFuncPtr_glUniform1ivARB;
  typedef void (* GLEEPFNGLUNIFORM2IVARBPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM2IVARBPROC GLeeFuncPtr_glUniform2ivARB;
  typedef void (* GLEEPFNGLUNIFORM3IVARBPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM3IVARBPROC GLeeFuncPtr_glUniform3ivARB;
  typedef void (* GLEEPFNGLUNIFORM4IVARBPROC) (GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLUNIFORM4IVARBPROC GLeeFuncPtr_glUniform4ivARB;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2FVARBPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX2FVARBPROC GLeeFuncPtr_glUniformMatrix2fvARB;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3FVARBPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX3FVARBPROC GLeeFuncPtr_glUniformMatrix3fvARB;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4FVARBPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLUNIFORMMATRIX4FVARBPROC GLeeFuncPtr_glUniformMatrix4fvARB;
  typedef void (* GLEEPFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB  obj, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETOBJECTPARAMETERFVARBPROC GLeeFuncPtr_glGetObjectParameterfvARB;
  typedef void (* GLEEPFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB  obj, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETOBJECTPARAMETERIVARBPROC GLeeFuncPtr_glGetObjectParameterivARB;
  typedef void (* GLEEPFNGLGETINFOLOGARBPROC) (GLhandleARB  obj, GLsizei  maxLength, GLsizei * length, GLcharARB * infoLog);
  extern GLEEPFNGLGETINFOLOGARBPROC GLeeFuncPtr_glGetInfoLogARB;
  typedef void (* GLEEPFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB  containerObj, GLsizei  maxCount, GLsizei * count, GLhandleARB * obj);
  extern GLEEPFNGLGETATTACHEDOBJECTSARBPROC GLeeFuncPtr_glGetAttachedObjectsARB;
  typedef GLint (* GLEEPFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB  programObj, const GLcharARB * name);
  extern GLEEPFNGLGETUNIFORMLOCATIONARBPROC GLeeFuncPtr_glGetUniformLocationARB;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB  programObj, GLuint  index, GLsizei  maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
  extern GLEEPFNGLGETACTIVEUNIFORMARBPROC GLeeFuncPtr_glGetActiveUniformARB;
  typedef void (* GLEEPFNGLGETUNIFORMFVARBPROC) (GLhandleARB  programObj, GLint  location, GLfloat * params);
  extern GLEEPFNGLGETUNIFORMFVARBPROC GLeeFuncPtr_glGetUniformfvARB;
  typedef void (* GLEEPFNGLGETUNIFORMIVARBPROC) (GLhandleARB  programObj, GLint  location, GLint * params);
  extern GLEEPFNGLGETUNIFORMIVARBPROC GLeeFuncPtr_glGetUniformivARB;
  typedef void (* GLEEPFNGLGETSHADERSOURCEARBPROC) (GLhandleARB  obj, GLsizei  maxLength, GLsizei * length, GLcharARB * source);
  extern GLEEPFNGLGETSHADERSOURCEARBPROC GLeeFuncPtr_glGetShaderSourceARB;

/* GL_ARB_vertex_shader */

/* Constants */
  typedef void (* GLEEPFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB  programObj, GLuint  index, const GLcharARB * name);
  extern GLEEPFNGLBINDATTRIBLOCATIONARBPROC GLeeFuncPtr_glBindAttribLocationARB;
  typedef void (* GLEEPFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB  programObj, GLuint  index, GLsizei  maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
  extern GLEEPFNGLGETACTIVEATTRIBARBPROC GLeeFuncPtr_glGetActiveAttribARB;
  typedef GLint (* GLEEPFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB  programObj, const GLcharARB * name);
  extern GLEEPFNGLGETATTRIBLOCATIONARBPROC GLeeFuncPtr_glGetAttribLocationARB;

/* GL_ARB_fragment_shader */

/* Constants */

/* GL_ARB_shading_language_100 */

/* Constants */

/* GL_ARB_texture_non_power_of_two */

/* Constants */

/* GL_ARB_point_sprite */

/* Constants */

/* GL_ARB_fragment_program_shadow */

/* Constants */

/* GL_ARB_draw_buffers */

/* Constants */
  typedef void (* GLEEPFNGLDRAWBUFFERSARBPROC) (GLsizei  n, const GLenum * bufs);
  extern GLEEPFNGLDRAWBUFFERSARBPROC GLeeFuncPtr_glDrawBuffersARB;

/* GL_ARB_texture_rectangle */

/* Constants */

/* GL_ARB_color_buffer_float */

/* Constants */
  typedef void (* GLEEPFNGLCLAMPCOLORARBPROC) (GLenum  target, GLenum  clamp);
  extern GLEEPFNGLCLAMPCOLORARBPROC GLeeFuncPtr_glClampColorARB;

/* GL_ARB_half_float_pixel */

/* Constants */

/* GL_ARB_texture_float */

/* Constants */

/* GL_ARB_pixel_buffer_object */

/* Constants */

/* GL_ARB_depth_buffer_float */

/* Constants */

/* GL_ARB_draw_instanced */

/* Constants */
  typedef void (* GLEEPFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  primcount);
  extern GLEEPFNGLDRAWARRAYSINSTANCEDARBPROC GLeeFuncPtr_glDrawArraysInstancedARB;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum  mode, GLsizei  count, GLenum  type, const GLvoid * indices, GLsizei  primcount);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDARBPROC GLeeFuncPtr_glDrawElementsInstancedARB;

/* GL_ARB_framebuffer_object */

/* Constants */
  typedef GLboolean (* GLEEPFNGLISRENDERBUFFERPROC) (GLuint  renderbuffer);
  extern GLEEPFNGLISRENDERBUFFERPROC GLeeFuncPtr_glIsRenderbuffer;
  typedef void (* GLEEPFNGLBINDRENDERBUFFERPROC) (GLenum  target, GLuint  renderbuffer);
  extern GLEEPFNGLBINDRENDERBUFFERPROC GLeeFuncPtr_glBindRenderbuffer;
  typedef void (* GLEEPFNGLDELETERENDERBUFFERSPROC) (GLsizei  n, const GLuint * renderbuffers);
  extern GLEEPFNGLDELETERENDERBUFFERSPROC GLeeFuncPtr_glDeleteRenderbuffers;
  typedef void (* GLEEPFNGLGENRENDERBUFFERSPROC) (GLsizei  n, GLuint * renderbuffers);
  extern GLEEPFNGLGENRENDERBUFFERSPROC GLeeFuncPtr_glGenRenderbuffers;
  typedef void (* GLEEPFNGLRENDERBUFFERSTORAGEPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLRENDERBUFFERSTORAGEPROC GLeeFuncPtr_glRenderbufferStorage;
  typedef void (* GLEEPFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETRENDERBUFFERPARAMETERIVPROC GLeeFuncPtr_glGetRenderbufferParameteriv;
  typedef GLboolean (* GLEEPFNGLISFRAMEBUFFERPROC) (GLuint  framebuffer);
  extern GLEEPFNGLISFRAMEBUFFERPROC GLeeFuncPtr_glIsFramebuffer;
  typedef void (* GLEEPFNGLBINDFRAMEBUFFERPROC) (GLenum  target, GLuint  framebuffer);
  extern GLEEPFNGLBINDFRAMEBUFFERPROC GLeeFuncPtr_glBindFramebuffer;
  typedef void (* GLEEPFNGLDELETEFRAMEBUFFERSPROC) (GLsizei  n, const GLuint * framebuffers);
  extern GLEEPFNGLDELETEFRAMEBUFFERSPROC GLeeFuncPtr_glDeleteFramebuffers;
  typedef void (* GLEEPFNGLGENFRAMEBUFFERSPROC) (GLsizei  n, GLuint * framebuffers);
  extern GLEEPFNGLGENFRAMEBUFFERSPROC GLeeFuncPtr_glGenFramebuffers;
  typedef GLenum (* GLEEPFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum  target);
  extern GLEEPFNGLCHECKFRAMEBUFFERSTATUSPROC GLeeFuncPtr_glCheckFramebufferStatus;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE1DPROC GLeeFuncPtr_glFramebufferTexture1D;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE2DPROC GLeeFuncPtr_glFramebufferTexture2D;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE3DPROC GLeeFuncPtr_glFramebufferTexture3D;
  typedef void (* GLEEPFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum  target, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer);
  extern GLEEPFNGLFRAMEBUFFERRENDERBUFFERPROC GLeeFuncPtr_glFramebufferRenderbuffer;
  typedef void (* GLEEPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum  target, GLenum  attachment, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC GLeeFuncPtr_glGetFramebufferAttachmentParameteriv;
  typedef void (* GLEEPFNGLGENERATEMIPMAPPROC) (GLenum  target);
  extern GLEEPFNGLGENERATEMIPMAPPROC GLeeFuncPtr_glGenerateMipmap;
  typedef void (* GLEEPFNGLBLITFRAMEBUFFERPROC) (GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter);
  extern GLEEPFNGLBLITFRAMEBUFFERPROC GLeeFuncPtr_glBlitFramebuffer;
  typedef void (* GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC GLeeFuncPtr_glRenderbufferStorageMultisample;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer);
  extern GLEEPFNGLFRAMEBUFFERTEXTURELAYERPROC GLeeFuncPtr_glFramebufferTextureLayer;

/* GL_ARB_framebuffer_sRGB */

/* Constants */

/* GL_ARB_geometry_shader4 */

/* Constants */
  typedef void (* GLEEPFNGLPROGRAMPARAMETERIARBPROC) (GLuint  program, GLenum  pname, GLint  value);
  extern GLEEPFNGLPROGRAMPARAMETERIARBPROC GLeeFuncPtr_glProgramParameteriARB;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTUREARBPROC GLeeFuncPtr_glFramebufferTextureARB;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer);
  extern GLEEPFNGLFRAMEBUFFERTEXTURELAYERARBPROC GLeeFuncPtr_glFramebufferTextureLayerARB;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLenum  face);
  extern GLEEPFNGLFRAMEBUFFERTEXTUREFACEARBPROC GLeeFuncPtr_glFramebufferTextureFaceARB;

/* GL_ARB_half_float_vertex */

/* Constants */

/* GL_ARB_instanced_arrays */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint  index, GLuint  divisor);
  extern GLEEPFNGLVERTEXATTRIBDIVISORARBPROC GLeeFuncPtr_glVertexAttribDivisorARB;

/* GL_ARB_map_buffer_range */

/* Constants */
  typedef GLvoid* (* GLEEPFNGLMAPBUFFERRANGEPROC) (GLenum  target, GLintptr  offset, GLsizeiptr  length, GLbitfield  access);
  extern GLEEPFNGLMAPBUFFERRANGEPROC GLeeFuncPtr_glMapBufferRange;
  typedef void (* GLEEPFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum  target, GLintptr  offset, GLsizeiptr  length);
  extern GLEEPFNGLFLUSHMAPPEDBUFFERRANGEPROC GLeeFuncPtr_glFlushMappedBufferRange;

/* GL_ARB_texture_buffer_object */

/* Constants */
  typedef void (* GLEEPFNGLTEXBUFFERARBPROC) (GLenum  target, GLenum  internalformat, GLuint  buffer);
  extern GLEEPFNGLTEXBUFFERARBPROC GLeeFuncPtr_glTexBufferARB;

/* GL_ARB_texture_compression_rgtc */

/* Constants */

/* GL_ARB_texture_rg */

/* Constants */

/* GL_ARB_vertex_array_object */

/* Constants */
  typedef void (* GLEEPFNGLBINDVERTEXARRAYPROC) (GLuint  array);
  extern GLEEPFNGLBINDVERTEXARRAYPROC GLeeFuncPtr_glBindVertexArray;
  typedef void (* GLEEPFNGLDELETEVERTEXARRAYSPROC) (GLsizei  n, const GLuint * arrays);
  extern GLEEPFNGLDELETEVERTEXARRAYSPROC GLeeFuncPtr_glDeleteVertexArrays;
  typedef void (* GLEEPFNGLGENVERTEXARRAYSPROC) (GLsizei  n, GLuint * arrays);
  extern GLEEPFNGLGENVERTEXARRAYSPROC GLeeFuncPtr_glGenVertexArrays;
  typedef GLboolean (* GLEEPFNGLISVERTEXARRAYPROC) (GLuint  array);
  extern GLEEPFNGLISVERTEXARRAYPROC GLeeFuncPtr_glIsVertexArray;

/* GL_ARB_uniform_buffer_object */

/* Constants */
  typedef void (* GLEEPFNGLGETUNIFORMINDICESPROC) (GLuint  program, GLsizei  uniformCount, const GLchar* * uniformNames, GLuint * uniformIndices);
  extern GLEEPFNGLGETUNIFORMINDICESPROC GLeeFuncPtr_glGetUniformIndices;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMSIVPROC) (GLuint  program, GLsizei  uniformCount, const GLuint * uniformIndices, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETACTIVEUNIFORMSIVPROC GLeeFuncPtr_glGetActiveUniformsiv;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint  program, GLuint  uniformIndex, GLsizei  bufSize, GLsizei * length, GLchar * uniformName);
  extern GLEEPFNGLGETACTIVEUNIFORMNAMEPROC GLeeFuncPtr_glGetActiveUniformName;
  typedef GLuint (* GLEEPFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint  program, const GLchar * uniformBlockName);
  extern GLEEPFNGLGETUNIFORMBLOCKINDEXPROC GLeeFuncPtr_glGetUniformBlockIndex;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint  program, GLuint  uniformBlockIndex, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETACTIVEUNIFORMBLOCKIVPROC GLeeFuncPtr_glGetActiveUniformBlockiv;
  typedef void (* GLEEPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint  program, GLuint  uniformBlockIndex, GLsizei  bufSize, GLsizei * length, GLchar * uniformBlockName);
  extern GLEEPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC GLeeFuncPtr_glGetActiveUniformBlockName;
  typedef void (* GLEEPFNGLUNIFORMBLOCKBINDINGPROC) (GLuint  program, GLuint  uniformBlockIndex, GLuint  uniformBlockBinding);
  extern GLEEPFNGLUNIFORMBLOCKBINDINGPROC GLeeFuncPtr_glUniformBlockBinding;

/* GL_ARB_compatibility */

/* Constants */

/* GL_ARB_copy_buffer */

/* Constants */
  typedef void (* GLEEPFNGLCOPYBUFFERSUBDATAPROC) (GLenum  readTarget, GLenum  writeTarget, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size);
  extern GLEEPFNGLCOPYBUFFERSUBDATAPROC GLeeFuncPtr_glCopyBufferSubData;

/* GL_ARB_shader_texture_lod */

/* Constants */

/* GL_ARB_depth_clamp */

/* Constants */

/* GL_ARB_draw_elements_base_vertex */

/* Constants */
  typedef void (* GLEEPFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum  mode, GLsizei  count, GLenum  type, const GLvoid * indices, GLint  basevertex);
  extern GLEEPFNGLDRAWELEMENTSBASEVERTEXPROC GLeeFuncPtr_glDrawElementsBaseVertex;
  typedef void (* GLEEPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const GLvoid * indices, GLint  basevertex);
  extern GLEEPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC GLeeFuncPtr_glDrawRangeElementsBaseVertex;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum  mode, GLsizei  count, GLenum  type, const GLvoid * indices, GLsizei  primcount, GLint  basevertex);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC GLeeFuncPtr_glDrawElementsInstancedBaseVertex;
  typedef void (* GLEEPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum  mode, const GLsizei * count, GLenum  type, const GLvoid* * indices, GLsizei  primcount, const GLint * basevertex);
  extern GLEEPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC GLeeFuncPtr_glMultiDrawElementsBaseVertex;

/* GL_ARB_fragment_coord_conventions */

/* Constants */

/* GL_ARB_provoking_vertex */

/* Constants */
  typedef void (* GLEEPFNGLPROVOKINGVERTEXPROC) (GLenum  mode);
  extern GLEEPFNGLPROVOKINGVERTEXPROC GLeeFuncPtr_glProvokingVertex;

/* GL_ARB_seamless_cube_map */

/* Constants */

/* GL_ARB_sync */

/* Constants */
  typedef GLsync (* GLEEPFNGLFENCESYNCPROC) (GLenum  condition, GLbitfield  flags);
  extern GLEEPFNGLFENCESYNCPROC GLeeFuncPtr_glFenceSync;
  typedef GLboolean (* GLEEPFNGLISSYNCPROC) (GLsync  sync);
  extern GLEEPFNGLISSYNCPROC GLeeFuncPtr_glIsSync;
  typedef void (* GLEEPFNGLDELETESYNCPROC) (GLsync  sync);
  extern GLEEPFNGLDELETESYNCPROC GLeeFuncPtr_glDeleteSync;
  typedef GLenum (* GLEEPFNGLCLIENTWAITSYNCPROC) (GLsync  sync, GLbitfield  flags, GLuint64  timeout);
  extern GLEEPFNGLCLIENTWAITSYNCPROC GLeeFuncPtr_glClientWaitSync;
  typedef void (* GLEEPFNGLWAITSYNCPROC) (GLsync  sync, GLbitfield  flags, GLuint64  timeout);
  extern GLEEPFNGLWAITSYNCPROC GLeeFuncPtr_glWaitSync;
  typedef void (* GLEEPFNGLGETINTEGER64VPROC) (GLenum  pname, GLint64 * params);
  extern GLEEPFNGLGETINTEGER64VPROC GLeeFuncPtr_glGetInteger64v;
  typedef void (* GLEEPFNGLGETSYNCIVPROC) (GLsync  sync, GLenum  pname, GLsizei  bufSize, GLsizei * length, GLint * values);
  extern GLEEPFNGLGETSYNCIVPROC GLeeFuncPtr_glGetSynciv;

/* GL_ARB_texture_multisample */

/* Constants */
  typedef void (* GLEEPFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum  target, GLsizei  samples, GLint  internalformat, GLsizei  width, GLsizei  height, GLboolean  fixedsamplelocations);
  extern GLEEPFNGLTEXIMAGE2DMULTISAMPLEPROC GLeeFuncPtr_glTexImage2DMultisample;
  typedef void (* GLEEPFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum  target, GLsizei  samples, GLint  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedsamplelocations);
  extern GLEEPFNGLTEXIMAGE3DMULTISAMPLEPROC GLeeFuncPtr_glTexImage3DMultisample;
  typedef void (* GLEEPFNGLGETMULTISAMPLEFVPROC) (GLenum  pname, GLuint  index, GLfloat * val);
  extern GLEEPFNGLGETMULTISAMPLEFVPROC GLeeFuncPtr_glGetMultisamplefv;
  typedef void (* GLEEPFNGLSAMPLEMASKIPROC) (GLuint  index, GLbitfield  mask);
  extern GLEEPFNGLSAMPLEMASKIPROC GLeeFuncPtr_glSampleMaski;

/* GL_ARB_vertex_array_bgra */

/* Constants */

/* GL_ARB_draw_buffers_blend */

/* Constants */
  typedef void (* GLEEPFNGLBLENDEQUATIONIARBPROC) (GLuint  buf, GLenum  mode);
  extern GLEEPFNGLBLENDEQUATIONIARBPROC GLeeFuncPtr_glBlendEquationiARB;
  typedef void (* GLEEPFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha);
  extern GLEEPFNGLBLENDEQUATIONSEPARATEIARBPROC GLeeFuncPtr_glBlendEquationSeparateiARB;
  typedef void (* GLEEPFNGLBLENDFUNCIARBPROC) (GLuint  buf, GLenum  src, GLenum  dst);
  extern GLEEPFNGLBLENDFUNCIARBPROC GLeeFuncPtr_glBlendFunciARB;
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEIARBPROC GLeeFuncPtr_glBlendFuncSeparateiARB;

/* GL_ARB_sample_shading */

/* Constants */
  typedef void (* GLEEPFNGLMINSAMPLESHADINGARBPROC) (GLclampf  value);
  extern GLEEPFNGLMINSAMPLESHADINGARBPROC GLeeFuncPtr_glMinSampleShadingARB;

/* GL_ARB_texture_cube_map_array */

/* Constants */

/* GL_ARB_texture_gather */

/* Constants */

/* GL_ARB_texture_query_lod */

/* Constants */

/* GL_ARB_shading_language_include */

/* Constants */
  typedef void (* GLEEPFNGLNAMEDSTRINGARBPROC) (GLenum  type, GLint  namelen, const GLchar * name, GLint  stringlen, const GLchar * string);
  extern GLEEPFNGLNAMEDSTRINGARBPROC GLeeFuncPtr_glNamedStringARB;
  typedef void (* GLEEPFNGLDELETENAMEDSTRINGARBPROC) (GLint  namelen, const GLchar * name);
  extern GLEEPFNGLDELETENAMEDSTRINGARBPROC GLeeFuncPtr_glDeleteNamedStringARB;
  typedef void (* GLEEPFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint  shader, GLsizei  count, const GLchar* * path, const GLint * length);
  extern GLEEPFNGLCOMPILESHADERINCLUDEARBPROC GLeeFuncPtr_glCompileShaderIncludeARB;
  typedef GLboolean (* GLEEPFNGLISNAMEDSTRINGARBPROC) (GLint  namelen, const GLchar * name);
  extern GLEEPFNGLISNAMEDSTRINGARBPROC GLeeFuncPtr_glIsNamedStringARB;
  typedef void (* GLEEPFNGLGETNAMEDSTRINGARBPROC) (GLint  namelen, const GLchar * name, GLsizei  bufSize, GLint * stringlen, GLchar * string);
  extern GLEEPFNGLGETNAMEDSTRINGARBPROC GLeeFuncPtr_glGetNamedStringARB;
  typedef void (* GLEEPFNGLGETNAMEDSTRINGIVARBPROC) (GLint  namelen, const GLchar * name, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETNAMEDSTRINGIVARBPROC GLeeFuncPtr_glGetNamedStringivARB;

/* GL_ARB_texture_compression_bptc */

/* Constants */

/* GL_ARB_blend_func_extended */

/* Constants */
  typedef void (* GLEEPFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint  program, GLuint  colorNumber, GLuint  index, const GLchar * name);
  extern GLEEPFNGLBINDFRAGDATALOCATIONINDEXEDPROC GLeeFuncPtr_glBindFragDataLocationIndexed;
  typedef GLint (* GLEEPFNGLGETFRAGDATAINDEXPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETFRAGDATAINDEXPROC GLeeFuncPtr_glGetFragDataIndex;

/* GL_ARB_explicit_attrib_location */

/* Constants */

/* GL_ARB_occlusion_query2 */

/* Constants */

/* GL_ARB_sampler_objects */

/* Constants */
  typedef void (* GLEEPFNGLGENSAMPLERSPROC) (GLsizei  count, GLuint * samplers);
  extern GLEEPFNGLGENSAMPLERSPROC GLeeFuncPtr_glGenSamplers;
  typedef void (* GLEEPFNGLDELETESAMPLERSPROC) (GLsizei  count, const GLuint * samplers);
  extern GLEEPFNGLDELETESAMPLERSPROC GLeeFuncPtr_glDeleteSamplers;
  typedef GLboolean (* GLEEPFNGLISSAMPLERPROC) (GLuint  sampler);
  extern GLEEPFNGLISSAMPLERPROC GLeeFuncPtr_glIsSampler;
  typedef void (* GLEEPFNGLBINDSAMPLERPROC) (GLuint  unit, GLuint  sampler);
  extern GLEEPFNGLBINDSAMPLERPROC GLeeFuncPtr_glBindSampler;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERIPROC) (GLuint  sampler, GLenum  pname, GLint  param);
  extern GLEEPFNGLSAMPLERPARAMETERIPROC GLeeFuncPtr_glSamplerParameteri;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERIVPROC) (GLuint  sampler, GLenum  pname, const GLint * param);
  extern GLEEPFNGLSAMPLERPARAMETERIVPROC GLeeFuncPtr_glSamplerParameteriv;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERFPROC) (GLuint  sampler, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLSAMPLERPARAMETERFPROC GLeeFuncPtr_glSamplerParameterf;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERFVPROC) (GLuint  sampler, GLenum  pname, const GLfloat * param);
  extern GLEEPFNGLSAMPLERPARAMETERFVPROC GLeeFuncPtr_glSamplerParameterfv;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERIIVPROC) (GLuint  sampler, GLenum  pname, const GLint * param);
  extern GLEEPFNGLSAMPLERPARAMETERIIVPROC GLeeFuncPtr_glSamplerParameterIiv;
  typedef void (* GLEEPFNGLSAMPLERPARAMETERIUIVPROC) (GLuint  sampler, GLenum  pname, const GLuint * param);
  extern GLEEPFNGLSAMPLERPARAMETERIUIVPROC GLeeFuncPtr_glSamplerParameterIuiv;
  typedef void (* GLEEPFNGLGETSAMPLERPARAMETERIVPROC) (GLuint  sampler, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETSAMPLERPARAMETERIVPROC GLeeFuncPtr_glGetSamplerParameteriv;
  typedef void (* GLEEPFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint  sampler, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETSAMPLERPARAMETERIIVPROC GLeeFuncPtr_glGetSamplerParameterIiv;
  typedef void (* GLEEPFNGLGETSAMPLERPARAMETERFVPROC) (GLuint  sampler, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETSAMPLERPARAMETERFVPROC GLeeFuncPtr_glGetSamplerParameterfv;
  typedef void (* GLEEPFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint  sampler, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETSAMPLERPARAMETERIUIVPROC GLeeFuncPtr_glGetSamplerParameterIuiv;

/* GL_ARB_shader_bit_encoding */

/* Constants */

/* GL_ARB_texture_rgb10_a2ui */

/* Constants */

/* GL_ARB_texture_swizzle */

/* Constants */

/* GL_ARB_timer_query */

/* Constants */
  typedef void (* GLEEPFNGLQUERYCOUNTERPROC) (GLuint  id, GLenum  target);
  extern GLEEPFNGLQUERYCOUNTERPROC GLeeFuncPtr_glQueryCounter;
  typedef void (* GLEEPFNGLGETQUERYOBJECTI64VPROC) (GLuint  id, GLenum  pname, GLint64 * params);
  extern GLEEPFNGLGETQUERYOBJECTI64VPROC GLeeFuncPtr_glGetQueryObjecti64v;
  typedef void (* GLEEPFNGLGETQUERYOBJECTUI64VPROC) (GLuint  id, GLenum  pname, GLuint64 * params);
  extern GLEEPFNGLGETQUERYOBJECTUI64VPROC GLeeFuncPtr_glGetQueryObjectui64v;

/* GL_ARB_vertex_type_2_10_10_10_rev */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXP2UIPROC) (GLenum  type, GLuint  value);
  extern GLEEPFNGLVERTEXP2UIPROC GLeeFuncPtr_glVertexP2ui;
  typedef void (* GLEEPFNGLVERTEXP2UIVPROC) (GLenum  type, const GLuint * value);
  extern GLEEPFNGLVERTEXP2UIVPROC GLeeFuncPtr_glVertexP2uiv;
  typedef void (* GLEEPFNGLVERTEXP3UIPROC) (GLenum  type, GLuint  value);
  extern GLEEPFNGLVERTEXP3UIPROC GLeeFuncPtr_glVertexP3ui;
  typedef void (* GLEEPFNGLVERTEXP3UIVPROC) (GLenum  type, const GLuint * value);
  extern GLEEPFNGLVERTEXP3UIVPROC GLeeFuncPtr_glVertexP3uiv;
  typedef void (* GLEEPFNGLVERTEXP4UIPROC) (GLenum  type, GLuint  value);
  extern GLEEPFNGLVERTEXP4UIPROC GLeeFuncPtr_glVertexP4ui;
  typedef void (* GLEEPFNGLVERTEXP4UIVPROC) (GLenum  type, const GLuint * value);
  extern GLEEPFNGLVERTEXP4UIVPROC GLeeFuncPtr_glVertexP4uiv;
  typedef void (* GLEEPFNGLTEXCOORDP1UIPROC) (GLenum  type, GLuint  coords);
  extern GLEEPFNGLTEXCOORDP1UIPROC GLeeFuncPtr_glTexCoordP1ui;
  typedef void (* GLEEPFNGLTEXCOORDP1UIVPROC) (GLenum  type, const GLuint * coords);
  extern GLEEPFNGLTEXCOORDP1UIVPROC GLeeFuncPtr_glTexCoordP1uiv;
  typedef void (* GLEEPFNGLTEXCOORDP2UIPROC) (GLenum  type, GLuint  coords);
  extern GLEEPFNGLTEXCOORDP2UIPROC GLeeFuncPtr_glTexCoordP2ui;
  typedef void (* GLEEPFNGLTEXCOORDP2UIVPROC) (GLenum  type, const GLuint * coords);
  extern GLEEPFNGLTEXCOORDP2UIVPROC GLeeFuncPtr_glTexCoordP2uiv;
  typedef void (* GLEEPFNGLTEXCOORDP3UIPROC) (GLenum  type, GLuint  coords);
  extern GLEEPFNGLTEXCOORDP3UIPROC GLeeFuncPtr_glTexCoordP3ui;
  typedef void (* GLEEPFNGLTEXCOORDP3UIVPROC) (GLenum  type, const GLuint * coords);
  extern GLEEPFNGLTEXCOORDP3UIVPROC GLeeFuncPtr_glTexCoordP3uiv;
  typedef void (* GLEEPFNGLTEXCOORDP4UIPROC) (GLenum  type, GLuint  coords);
  extern GLEEPFNGLTEXCOORDP4UIPROC GLeeFuncPtr_glTexCoordP4ui;
  typedef void (* GLEEPFNGLTEXCOORDP4UIVPROC) (GLenum  type, const GLuint * coords);
  extern GLEEPFNGLTEXCOORDP4UIVPROC GLeeFuncPtr_glTexCoordP4uiv;
  typedef void (* GLEEPFNGLMULTITEXCOORDP1UIPROC) (GLenum  texture, GLenum  type, GLuint  coords);
  extern GLEEPFNGLMULTITEXCOORDP1UIPROC GLeeFuncPtr_glMultiTexCoordP1ui;
  typedef void (* GLEEPFNGLMULTITEXCOORDP1UIVPROC) (GLenum  texture, GLenum  type, const GLuint * coords);
  extern GLEEPFNGLMULTITEXCOORDP1UIVPROC GLeeFuncPtr_glMultiTexCoordP1uiv;
  typedef void (* GLEEPFNGLMULTITEXCOORDP2UIPROC) (GLenum  texture, GLenum  type, GLuint  coords);
  extern GLEEPFNGLMULTITEXCOORDP2UIPROC GLeeFuncPtr_glMultiTexCoordP2ui;
  typedef void (* GLEEPFNGLMULTITEXCOORDP2UIVPROC) (GLenum  texture, GLenum  type, const GLuint * coords);
  extern GLEEPFNGLMULTITEXCOORDP2UIVPROC GLeeFuncPtr_glMultiTexCoordP2uiv;
  typedef void (* GLEEPFNGLMULTITEXCOORDP3UIPROC) (GLenum  texture, GLenum  type, GLuint  coords);
  extern GLEEPFNGLMULTITEXCOORDP3UIPROC GLeeFuncPtr_glMultiTexCoordP3ui;
  typedef void (* GLEEPFNGLMULTITEXCOORDP3UIVPROC) (GLenum  texture, GLenum  type, const GLuint * coords);
  extern GLEEPFNGLMULTITEXCOORDP3UIVPROC GLeeFuncPtr_glMultiTexCoordP3uiv;
  typedef void (* GLEEPFNGLMULTITEXCOORDP4UIPROC) (GLenum  texture, GLenum  type, GLuint  coords);
  extern GLEEPFNGLMULTITEXCOORDP4UIPROC GLeeFuncPtr_glMultiTexCoordP4ui;
  typedef void (* GLEEPFNGLMULTITEXCOORDP4UIVPROC) (GLenum  texture, GLenum  type, const GLuint * coords);
  extern GLEEPFNGLMULTITEXCOORDP4UIVPROC GLeeFuncPtr_glMultiTexCoordP4uiv;
  typedef void (* GLEEPFNGLNORMALP3UIPROC) (GLenum  type, GLuint  coords);
  extern GLEEPFNGLNORMALP3UIPROC GLeeFuncPtr_glNormalP3ui;
  typedef void (* GLEEPFNGLNORMALP3UIVPROC) (GLenum  type, const GLuint * coords);
  extern GLEEPFNGLNORMALP3UIVPROC GLeeFuncPtr_glNormalP3uiv;
  typedef void (* GLEEPFNGLCOLORP3UIPROC) (GLenum  type, GLuint  color);
  extern GLEEPFNGLCOLORP3UIPROC GLeeFuncPtr_glColorP3ui;
  typedef void (* GLEEPFNGLCOLORP3UIVPROC) (GLenum  type, const GLuint * color);
  extern GLEEPFNGLCOLORP3UIVPROC GLeeFuncPtr_glColorP3uiv;
  typedef void (* GLEEPFNGLCOLORP4UIPROC) (GLenum  type, GLuint  color);
  extern GLEEPFNGLCOLORP4UIPROC GLeeFuncPtr_glColorP4ui;
  typedef void (* GLEEPFNGLCOLORP4UIVPROC) (GLenum  type, const GLuint * color);
  extern GLEEPFNGLCOLORP4UIVPROC GLeeFuncPtr_glColorP4uiv;
  typedef void (* GLEEPFNGLSECONDARYCOLORP3UIPROC) (GLenum  type, GLuint  color);
  extern GLEEPFNGLSECONDARYCOLORP3UIPROC GLeeFuncPtr_glSecondaryColorP3ui;
  typedef void (* GLEEPFNGLSECONDARYCOLORP3UIVPROC) (GLenum  type, const GLuint * color);
  extern GLEEPFNGLSECONDARYCOLORP3UIVPROC GLeeFuncPtr_glSecondaryColorP3uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBP1UIPROC) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value);
  extern GLEEPFNGLVERTEXATTRIBP1UIPROC GLeeFuncPtr_glVertexAttribP1ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBP1UIVPROC) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value);
  extern GLEEPFNGLVERTEXATTRIBP1UIVPROC GLeeFuncPtr_glVertexAttribP1uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBP2UIPROC) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value);
  extern GLEEPFNGLVERTEXATTRIBP2UIPROC GLeeFuncPtr_glVertexAttribP2ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBP2UIVPROC) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value);
  extern GLEEPFNGLVERTEXATTRIBP2UIVPROC GLeeFuncPtr_glVertexAttribP2uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBP3UIPROC) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value);
  extern GLEEPFNGLVERTEXATTRIBP3UIPROC GLeeFuncPtr_glVertexAttribP3ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBP3UIVPROC) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value);
  extern GLEEPFNGLVERTEXATTRIBP3UIVPROC GLeeFuncPtr_glVertexAttribP3uiv;
  typedef void (* GLEEPFNGLVERTEXATTRIBP4UIPROC) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value);
  extern GLEEPFNGLVERTEXATTRIBP4UIPROC GLeeFuncPtr_glVertexAttribP4ui;
  typedef void (* GLEEPFNGLVERTEXATTRIBP4UIVPROC) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value);
  extern GLEEPFNGLVERTEXATTRIBP4UIVPROC GLeeFuncPtr_glVertexAttribP4uiv;

/* GL_ARB_draw_indirect */

/* Constants */
  typedef void (* GLEEPFNGLDRAWARRAYSINDIRECTPROC) (GLenum  mode, const GLvoid * indirect);
  extern GLEEPFNGLDRAWARRAYSINDIRECTPROC GLeeFuncPtr_glDrawArraysIndirect;
  typedef void (* GLEEPFNGLDRAWELEMENTSINDIRECTPROC) (GLenum  mode, GLenum  type, const GLvoid * indirect);
  extern GLEEPFNGLDRAWELEMENTSINDIRECTPROC GLeeFuncPtr_glDrawElementsIndirect;

/* GL_ARB_gpu_shader5 */

/* Constants */

/* GL_ARB_gpu_shader_fp64 */

/* Constants */
  typedef void (* GLEEPFNGLUNIFORM1DPROC) (GLint  location, GLdouble  x);
  extern GLEEPFNGLUNIFORM1DPROC GLeeFuncPtr_glUniform1d;
  typedef void (* GLEEPFNGLUNIFORM2DPROC) (GLint  location, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLUNIFORM2DPROC GLeeFuncPtr_glUniform2d;
  typedef void (* GLEEPFNGLUNIFORM3DPROC) (GLint  location, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLUNIFORM3DPROC GLeeFuncPtr_glUniform3d;
  typedef void (* GLEEPFNGLUNIFORM4DPROC) (GLint  location, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLUNIFORM4DPROC GLeeFuncPtr_glUniform4d;
  typedef void (* GLEEPFNGLUNIFORM1DVPROC) (GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLUNIFORM1DVPROC GLeeFuncPtr_glUniform1dv;
  typedef void (* GLEEPFNGLUNIFORM2DVPROC) (GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLUNIFORM2DVPROC GLeeFuncPtr_glUniform2dv;
  typedef void (* GLEEPFNGLUNIFORM3DVPROC) (GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLUNIFORM3DVPROC GLeeFuncPtr_glUniform3dv;
  typedef void (* GLEEPFNGLUNIFORM4DVPROC) (GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLUNIFORM4DVPROC GLeeFuncPtr_glUniform4dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX2DVPROC GLeeFuncPtr_glUniformMatrix2dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX3DVPROC GLeeFuncPtr_glUniformMatrix3dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX4DVPROC GLeeFuncPtr_glUniformMatrix4dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2X3DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX2X3DVPROC GLeeFuncPtr_glUniformMatrix2x3dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX2X4DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX2X4DVPROC GLeeFuncPtr_glUniformMatrix2x4dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3X2DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX3X2DVPROC GLeeFuncPtr_glUniformMatrix3x2dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX3X4DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX3X4DVPROC GLeeFuncPtr_glUniformMatrix3x4dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4X2DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX4X2DVPROC GLeeFuncPtr_glUniformMatrix4x2dv;
  typedef void (* GLEEPFNGLUNIFORMMATRIX4X3DVPROC) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLUNIFORMMATRIX4X3DVPROC GLeeFuncPtr_glUniformMatrix4x3dv;
  typedef void (* GLEEPFNGLGETUNIFORMDVPROC) (GLuint  program, GLint  location, GLdouble * params);
  extern GLEEPFNGLGETUNIFORMDVPROC GLeeFuncPtr_glGetUniformdv;

/* GL_ARB_shader_subroutine */

/* Constants */
  typedef GLint (* GLEEPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint  program, GLenum  shadertype, const GLchar * name);
  extern GLEEPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC GLeeFuncPtr_glGetSubroutineUniformLocation;
  typedef GLuint (* GLEEPFNGLGETSUBROUTINEINDEXPROC) (GLuint  program, GLenum  shadertype, const GLchar * name);
  extern GLEEPFNGLGETSUBROUTINEINDEXPROC GLeeFuncPtr_glGetSubroutineIndex;
  typedef void (* GLEEPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint  program, GLenum  shadertype, GLuint  index, GLenum  pname, GLint * values);
  extern GLEEPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC GLeeFuncPtr_glGetActiveSubroutineUniformiv;
  typedef void (* GLEEPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint  program, GLenum  shadertype, GLuint  index, GLsizei  bufsize, GLsizei * length, GLchar * name);
  extern GLEEPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC GLeeFuncPtr_glGetActiveSubroutineUniformName;
  typedef void (* GLEEPFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint  program, GLenum  shadertype, GLuint  index, GLsizei  bufsize, GLsizei * length, GLchar * name);
  extern GLEEPFNGLGETACTIVESUBROUTINENAMEPROC GLeeFuncPtr_glGetActiveSubroutineName;
  typedef void (* GLEEPFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum  shadertype, GLsizei  count, const GLuint * indices);
  extern GLEEPFNGLUNIFORMSUBROUTINESUIVPROC GLeeFuncPtr_glUniformSubroutinesuiv;
  typedef void (* GLEEPFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum  shadertype, GLint  location, GLuint * params);
  extern GLEEPFNGLGETUNIFORMSUBROUTINEUIVPROC GLeeFuncPtr_glGetUniformSubroutineuiv;
  typedef void (* GLEEPFNGLGETPROGRAMSTAGEIVPROC) (GLuint  program, GLenum  shadertype, GLenum  pname, GLint * values);
  extern GLEEPFNGLGETPROGRAMSTAGEIVPROC GLeeFuncPtr_glGetProgramStageiv;

/* GL_ARB_tessellation_shader */

/* Constants */
  typedef void (* GLEEPFNGLPATCHPARAMETERIPROC) (GLenum  pname, GLint  value);
  extern GLEEPFNGLPATCHPARAMETERIPROC GLeeFuncPtr_glPatchParameteri;
  typedef void (* GLEEPFNGLPATCHPARAMETERFVPROC) (GLenum  pname, const GLfloat * values);
  extern GLEEPFNGLPATCHPARAMETERFVPROC GLeeFuncPtr_glPatchParameterfv;

/* GL_ARB_texture_buffer_object_rgb32 */

/* Constants */

/* GL_ARB_transform_feedback2 */

/* Constants */
  typedef void (* GLEEPFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum  target, GLuint  id);
  extern GLEEPFNGLBINDTRANSFORMFEEDBACKPROC GLeeFuncPtr_glBindTransformFeedback;
  typedef void (* GLEEPFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei  n, const GLuint * ids);
  extern GLEEPFNGLDELETETRANSFORMFEEDBACKSPROC GLeeFuncPtr_glDeleteTransformFeedbacks;
  typedef void (* GLEEPFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei  n, GLuint * ids);
  extern GLEEPFNGLGENTRANSFORMFEEDBACKSPROC GLeeFuncPtr_glGenTransformFeedbacks;
  typedef GLboolean (* GLEEPFNGLISTRANSFORMFEEDBACKPROC) (GLuint  id);
  extern GLEEPFNGLISTRANSFORMFEEDBACKPROC GLeeFuncPtr_glIsTransformFeedback;
  typedef void (* GLEEPFNGLPAUSETRANSFORMFEEDBACKPROC) ();
  extern GLEEPFNGLPAUSETRANSFORMFEEDBACKPROC GLeeFuncPtr_glPauseTransformFeedback;
  typedef void (* GLEEPFNGLRESUMETRANSFORMFEEDBACKPROC) ();
  extern GLEEPFNGLRESUMETRANSFORMFEEDBACKPROC GLeeFuncPtr_glResumeTransformFeedback;
  typedef void (* GLEEPFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum  mode, GLuint  id);
  extern GLEEPFNGLDRAWTRANSFORMFEEDBACKPROC GLeeFuncPtr_glDrawTransformFeedback;

/* GL_ARB_transform_feedback3 */

/* Constants */
  typedef void (* GLEEPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum  mode, GLuint  id, GLuint  stream);
  extern GLEEPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC GLeeFuncPtr_glDrawTransformFeedbackStream;
  typedef void (* GLEEPFNGLBEGINQUERYINDEXEDPROC) (GLenum  target, GLuint  index, GLuint  id);
  extern GLEEPFNGLBEGINQUERYINDEXEDPROC GLeeFuncPtr_glBeginQueryIndexed;
  typedef void (* GLEEPFNGLENDQUERYINDEXEDPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLENDQUERYINDEXEDPROC GLeeFuncPtr_glEndQueryIndexed;
  typedef void (* GLEEPFNGLGETQUERYINDEXEDIVPROC) (GLenum  target, GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETQUERYINDEXEDIVPROC GLeeFuncPtr_glGetQueryIndexediv;

/* GL_ARB_ES2_compatibility */

/* Constants */
  typedef void (* GLEEPFNGLRELEASESHADERCOMPILERPROC) ();
  extern GLEEPFNGLRELEASESHADERCOMPILERPROC GLeeFuncPtr_glReleaseShaderCompiler;
  typedef void (* GLEEPFNGLSHADERBINARYPROC) (GLsizei  count, const GLuint * shaders, GLenum  binaryformat, const GLvoid * binary, GLsizei  length);
  extern GLEEPFNGLSHADERBINARYPROC GLeeFuncPtr_glShaderBinary;
  typedef void (* GLEEPFNGLGETSHADERPRECISIONFORMATPROC) (GLenum  shadertype, GLenum  precisiontype, GLint * range, GLint * precision);
  extern GLEEPFNGLGETSHADERPRECISIONFORMATPROC GLeeFuncPtr_glGetShaderPrecisionFormat;
  typedef void (* GLEEPFNGLDEPTHRANGEFPROC) (GLclampf  n, GLclampf  f);
  extern GLEEPFNGLDEPTHRANGEFPROC GLeeFuncPtr_glDepthRangef;
  typedef void (* GLEEPFNGLCLEARDEPTHFPROC) (GLclampf  d);
  extern GLEEPFNGLCLEARDEPTHFPROC GLeeFuncPtr_glClearDepthf;

/* GL_ARB_get_program_binary */

/* Constants */
  typedef void (* GLEEPFNGLGETPROGRAMBINARYPROC) (GLuint  program, GLsizei  bufSize, GLsizei * length, GLenum * binaryFormat, GLvoid * binary);
  extern GLEEPFNGLGETPROGRAMBINARYPROC GLeeFuncPtr_glGetProgramBinary;
  typedef void (* GLEEPFNGLPROGRAMBINARYPROC) (GLuint  program, GLenum  binaryFormat, const GLvoid * binary, GLsizei  length);
  extern GLEEPFNGLPROGRAMBINARYPROC GLeeFuncPtr_glProgramBinary;
  typedef void (* GLEEPFNGLPROGRAMPARAMETERIPROC) (GLuint  program, GLenum  pname, GLint  value);
  extern GLEEPFNGLPROGRAMPARAMETERIPROC GLeeFuncPtr_glProgramParameteri;

/* GL_ARB_separate_shader_objects */

/* Constants */
  typedef void (* GLEEPFNGLUSEPROGRAMSTAGESPROC) (GLuint  pipeline, GLbitfield  stages, GLuint  program);
  extern GLEEPFNGLUSEPROGRAMSTAGESPROC GLeeFuncPtr_glUseProgramStages;
  typedef void (* GLEEPFNGLACTIVESHADERPROGRAMPROC) (GLuint  pipeline, GLuint  program);
  extern GLEEPFNGLACTIVESHADERPROGRAMPROC GLeeFuncPtr_glActiveShaderProgram;
  typedef GLuint (* GLEEPFNGLCREATESHADERPROGRAMVPROC) (GLenum  type, GLsizei  count, const GLchar* * strings);
  extern GLEEPFNGLCREATESHADERPROGRAMVPROC GLeeFuncPtr_glCreateShaderProgramv;
  typedef void (* GLEEPFNGLBINDPROGRAMPIPELINEPROC) (GLuint  pipeline);
  extern GLEEPFNGLBINDPROGRAMPIPELINEPROC GLeeFuncPtr_glBindProgramPipeline;
  typedef void (* GLEEPFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei  n, const GLuint * pipelines);
  extern GLEEPFNGLDELETEPROGRAMPIPELINESPROC GLeeFuncPtr_glDeleteProgramPipelines;
  typedef void (* GLEEPFNGLGENPROGRAMPIPELINESPROC) (GLsizei  n, GLuint * pipelines);
  extern GLEEPFNGLGENPROGRAMPIPELINESPROC GLeeFuncPtr_glGenProgramPipelines;
  typedef GLboolean (* GLEEPFNGLISPROGRAMPIPELINEPROC) (GLuint  pipeline);
  extern GLEEPFNGLISPROGRAMPIPELINEPROC GLeeFuncPtr_glIsProgramPipeline;
  typedef void (* GLEEPFNGLGETPROGRAMPIPELINEIVPROC) (GLuint  pipeline, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETPROGRAMPIPELINEIVPROC GLeeFuncPtr_glGetProgramPipelineiv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1IPROC) (GLuint  program, GLint  location, GLint  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1IPROC GLeeFuncPtr_glProgramUniform1i;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1IVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM1IVPROC GLeeFuncPtr_glProgramUniform1iv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1FPROC) (GLuint  program, GLint  location, GLfloat  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1FPROC GLeeFuncPtr_glProgramUniform1f;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1FVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM1FVPROC GLeeFuncPtr_glProgramUniform1fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1DPROC) (GLuint  program, GLint  location, GLdouble  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1DPROC GLeeFuncPtr_glProgramUniform1d;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1DVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM1DVPROC GLeeFuncPtr_glProgramUniform1dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UIPROC) (GLuint  program, GLint  location, GLuint  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1UIPROC GLeeFuncPtr_glProgramUniform1ui;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UIVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM1UIVPROC GLeeFuncPtr_glProgramUniform1uiv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2IPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2IPROC GLeeFuncPtr_glProgramUniform2i;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2IVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM2IVPROC GLeeFuncPtr_glProgramUniform2iv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2FPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2FPROC GLeeFuncPtr_glProgramUniform2f;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2FVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM2FVPROC GLeeFuncPtr_glProgramUniform2fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2DPROC) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2DPROC GLeeFuncPtr_glProgramUniform2d;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2DVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM2DVPROC GLeeFuncPtr_glProgramUniform2dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UIPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2UIPROC GLeeFuncPtr_glProgramUniform2ui;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UIVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM2UIVPROC GLeeFuncPtr_glProgramUniform2uiv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3IPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3IPROC GLeeFuncPtr_glProgramUniform3i;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3IVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM3IVPROC GLeeFuncPtr_glProgramUniform3iv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3FPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3FPROC GLeeFuncPtr_glProgramUniform3f;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3FVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM3FVPROC GLeeFuncPtr_glProgramUniform3fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3DPROC) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1, GLdouble  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3DPROC GLeeFuncPtr_glProgramUniform3d;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3DVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM3DVPROC GLeeFuncPtr_glProgramUniform3dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UIPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3UIPROC GLeeFuncPtr_glProgramUniform3ui;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UIVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM3UIVPROC GLeeFuncPtr_glProgramUniform3uiv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4IPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4IPROC GLeeFuncPtr_glProgramUniform4i;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4IVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM4IVPROC GLeeFuncPtr_glProgramUniform4iv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4FPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4FPROC GLeeFuncPtr_glProgramUniform4f;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4FVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM4FVPROC GLeeFuncPtr_glProgramUniform4fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4DPROC) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1, GLdouble  v2, GLdouble  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4DPROC GLeeFuncPtr_glProgramUniform4d;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4DVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM4DVPROC GLeeFuncPtr_glProgramUniform4dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UIPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4UIPROC GLeeFuncPtr_glProgramUniform4ui;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UIVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM4UIVPROC GLeeFuncPtr_glProgramUniform4uiv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2FVPROC GLeeFuncPtr_glProgramUniformMatrix2fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3FVPROC GLeeFuncPtr_glProgramUniformMatrix3fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4FVPROC GLeeFuncPtr_glProgramUniformMatrix4fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2DVPROC GLeeFuncPtr_glProgramUniformMatrix2dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3DVPROC GLeeFuncPtr_glProgramUniformMatrix3dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4DVPROC GLeeFuncPtr_glProgramUniformMatrix4dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC GLeeFuncPtr_glProgramUniformMatrix2x3fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC GLeeFuncPtr_glProgramUniformMatrix3x2fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC GLeeFuncPtr_glProgramUniformMatrix2x4fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC GLeeFuncPtr_glProgramUniformMatrix4x2fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC GLeeFuncPtr_glProgramUniformMatrix3x4fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC GLeeFuncPtr_glProgramUniformMatrix4x3fv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC GLeeFuncPtr_glProgramUniformMatrix2x3dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC GLeeFuncPtr_glProgramUniformMatrix3x2dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC GLeeFuncPtr_glProgramUniformMatrix2x4dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC GLeeFuncPtr_glProgramUniformMatrix4x2dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC GLeeFuncPtr_glProgramUniformMatrix3x4dv;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC GLeeFuncPtr_glProgramUniformMatrix4x3dv;
  typedef void (* GLEEPFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint  pipeline);
  extern GLEEPFNGLVALIDATEPROGRAMPIPELINEPROC GLeeFuncPtr_glValidateProgramPipeline;
  typedef void (* GLEEPFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint  pipeline, GLsizei  bufSize, GLsizei * length, GLchar * infoLog);
  extern GLEEPFNGLGETPROGRAMPIPELINEINFOLOGPROC GLeeFuncPtr_glGetProgramPipelineInfoLog;

/* GL_ARB_shader_precision */

/* Constants */

/* GL_ARB_vertex_attrib_64bit */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBL1DPROC) (GLuint  index, GLdouble  x);
  extern GLEEPFNGLVERTEXATTRIBL1DPROC GLeeFuncPtr_glVertexAttribL1d;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2DPROC) (GLuint  index, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXATTRIBL2DPROC GLeeFuncPtr_glVertexAttribL2d;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3DPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXATTRIBL3DPROC GLeeFuncPtr_glVertexAttribL3d;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4DPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXATTRIBL4DPROC GLeeFuncPtr_glVertexAttribL4d;
  typedef void (* GLEEPFNGLVERTEXATTRIBL1DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL1DVPROC GLeeFuncPtr_glVertexAttribL1dv;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL2DVPROC GLeeFuncPtr_glVertexAttribL2dv;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL3DVPROC GLeeFuncPtr_glVertexAttribL3dv;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4DVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL4DVPROC GLeeFuncPtr_glVertexAttribL4dv;
  typedef void (* GLEEPFNGLVERTEXATTRIBLPOINTERPROC) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBLPOINTERPROC GLeeFuncPtr_glVertexAttribLPointer;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBLDVPROC) (GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVERTEXATTRIBLDVPROC GLeeFuncPtr_glGetVertexAttribLdv;

/* GL_ARB_viewport_array */

/* Constants */
  typedef void (* GLEEPFNGLVIEWPORTARRAYVPROC) (GLuint  first, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLVIEWPORTARRAYVPROC GLeeFuncPtr_glViewportArrayv;
  typedef void (* GLEEPFNGLVIEWPORTINDEXEDFPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  w, GLfloat  h);
  extern GLEEPFNGLVIEWPORTINDEXEDFPROC GLeeFuncPtr_glViewportIndexedf;
  typedef void (* GLEEPFNGLVIEWPORTINDEXEDFVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVIEWPORTINDEXEDFVPROC GLeeFuncPtr_glViewportIndexedfv;
  typedef void (* GLEEPFNGLSCISSORARRAYVPROC) (GLuint  first, GLsizei  count, const GLint * v);
  extern GLEEPFNGLSCISSORARRAYVPROC GLeeFuncPtr_glScissorArrayv;
  typedef void (* GLEEPFNGLSCISSORINDEXEDPROC) (GLuint  index, GLint  left, GLint  bottom, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLSCISSORINDEXEDPROC GLeeFuncPtr_glScissorIndexed;
  typedef void (* GLEEPFNGLSCISSORINDEXEDVPROC) (GLuint  index, const GLint * v);
  extern GLEEPFNGLSCISSORINDEXEDVPROC GLeeFuncPtr_glScissorIndexedv;
  typedef void (* GLEEPFNGLDEPTHRANGEARRAYVPROC) (GLuint  first, GLsizei  count, const GLclampd * v);
  extern GLEEPFNGLDEPTHRANGEARRAYVPROC GLeeFuncPtr_glDepthRangeArrayv;
  typedef void (* GLEEPFNGLDEPTHRANGEINDEXEDPROC) (GLuint  index, GLclampd  n, GLclampd  f);
  extern GLEEPFNGLDEPTHRANGEINDEXEDPROC GLeeFuncPtr_glDepthRangeIndexed;
  typedef void (* GLEEPFNGLGETFLOATI_VPROC) (GLenum  target, GLuint  index, GLfloat * data);
  extern GLEEPFNGLGETFLOATI_VPROC GLeeFuncPtr_glGetFloati_v;
  typedef void (* GLEEPFNGLGETDOUBLEI_VPROC) (GLenum  target, GLuint  index, GLdouble * data);
  extern GLEEPFNGLGETDOUBLEI_VPROC GLeeFuncPtr_glGetDoublei_v;

/* GL_ARB_cl_event */

/* Constants */
  typedef GLsync (* GLEEPFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *  context, struct _cl_event *  event, GLbitfield  flags);
  extern GLEEPFNGLCREATESYNCFROMCLEVENTARBPROC GLeeFuncPtr_glCreateSyncFromCLeventARB;

/* GL_ARB_robustness */

/* Constants */
  typedef GLenum (* GLEEPFNGLGETGRAPHICSRESETSTATUSARBPROC) ();
  extern GLEEPFNGLGETGRAPHICSRESETSTATUSARBPROC GLeeFuncPtr_glGetGraphicsResetStatusARB;
  typedef void (* GLEEPFNGLGETNMAPDVARBPROC) (GLenum  target, GLenum  query, GLsizei  bufSize, GLdouble * v);
  extern GLEEPFNGLGETNMAPDVARBPROC GLeeFuncPtr_glGetnMapdvARB;
  typedef void (* GLEEPFNGLGETNMAPFVARBPROC) (GLenum  target, GLenum  query, GLsizei  bufSize, GLfloat * v);
  extern GLEEPFNGLGETNMAPFVARBPROC GLeeFuncPtr_glGetnMapfvARB;
  typedef void (* GLEEPFNGLGETNMAPIVARBPROC) (GLenum  target, GLenum  query, GLsizei  bufSize, GLint * v);
  extern GLEEPFNGLGETNMAPIVARBPROC GLeeFuncPtr_glGetnMapivARB;
  typedef void (* GLEEPFNGLGETNPIXELMAPFVARBPROC) (GLenum  map, GLsizei  bufSize, GLfloat * values);
  extern GLEEPFNGLGETNPIXELMAPFVARBPROC GLeeFuncPtr_glGetnPixelMapfvARB;
  typedef void (* GLEEPFNGLGETNPIXELMAPUIVARBPROC) (GLenum  map, GLsizei  bufSize, GLuint * values);
  extern GLEEPFNGLGETNPIXELMAPUIVARBPROC GLeeFuncPtr_glGetnPixelMapuivARB;
  typedef void (* GLEEPFNGLGETNPIXELMAPUSVARBPROC) (GLenum  map, GLsizei  bufSize, GLushort * values);
  extern GLEEPFNGLGETNPIXELMAPUSVARBPROC GLeeFuncPtr_glGetnPixelMapusvARB;
  typedef void (* GLEEPFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei  bufSize, GLubyte * pattern);
  extern GLEEPFNGLGETNPOLYGONSTIPPLEARBPROC GLeeFuncPtr_glGetnPolygonStippleARB;
  typedef void (* GLEEPFNGLGETNCOLORTABLEARBPROC) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * table);
  extern GLEEPFNGLGETNCOLORTABLEARBPROC GLeeFuncPtr_glGetnColorTableARB;
  typedef void (* GLEEPFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * image);
  extern GLEEPFNGLGETNCONVOLUTIONFILTERARBPROC GLeeFuncPtr_glGetnConvolutionFilterARB;
  typedef void (* GLEEPFNGLGETNSEPARABLEFILTERARBPROC) (GLenum  target, GLenum  format, GLenum  type, GLsizei  rowBufSize, GLvoid * row, GLsizei  columnBufSize, GLvoid * column, GLvoid * span);
  extern GLEEPFNGLGETNSEPARABLEFILTERARBPROC GLeeFuncPtr_glGetnSeparableFilterARB;
  typedef void (* GLEEPFNGLGETNHISTOGRAMARBPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * values);
  extern GLEEPFNGLGETNHISTOGRAMARBPROC GLeeFuncPtr_glGetnHistogramARB;
  typedef void (* GLEEPFNGLGETNMINMAXARBPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * values);
  extern GLEEPFNGLGETNMINMAXARBPROC GLeeFuncPtr_glGetnMinmaxARB;
  typedef void (* GLEEPFNGLGETNTEXIMAGEARBPROC) (GLenum  target, GLint  level, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * img);
  extern GLEEPFNGLGETNTEXIMAGEARBPROC GLeeFuncPtr_glGetnTexImageARB;
  typedef void (* GLEEPFNGLREADNPIXELSARBPROC) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, GLsizei  bufSize, GLvoid * data);
  extern GLEEPFNGLREADNPIXELSARBPROC GLeeFuncPtr_glReadnPixelsARB;
  typedef void (* GLEEPFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum  target, GLint  lod, GLsizei  bufSize, GLvoid * img);
  extern GLEEPFNGLGETNCOMPRESSEDTEXIMAGEARBPROC GLeeFuncPtr_glGetnCompressedTexImageARB;
  typedef void (* GLEEPFNGLGETNUNIFORMFVARBPROC) (GLuint  program, GLint  location, GLsizei  bufSize, GLfloat * params);
  extern GLEEPFNGLGETNUNIFORMFVARBPROC GLeeFuncPtr_glGetnUniformfvARB;
  typedef void (* GLEEPFNGLGETNUNIFORMIVARBPROC) (GLuint  program, GLint  location, GLsizei  bufSize, GLint * params);
  extern GLEEPFNGLGETNUNIFORMIVARBPROC GLeeFuncPtr_glGetnUniformivARB;
  typedef void (* GLEEPFNGLGETNUNIFORMUIVARBPROC) (GLuint  program, GLint  location, GLsizei  bufSize, GLuint * params);
  extern GLEEPFNGLGETNUNIFORMUIVARBPROC GLeeFuncPtr_glGetnUniformuivARB;
  typedef void (* GLEEPFNGLGETNUNIFORMDVARBPROC) (GLuint  program, GLint  location, GLsizei  bufSize, GLdouble * params);
  extern GLEEPFNGLGETNUNIFORMDVARBPROC GLeeFuncPtr_glGetnUniformdvARB;

/* GL_ARB_shader_stencil_export */

/* Constants */

/* GL_ARB_base_instance */

/* Constants */
  typedef void (* GLEEPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  primcount, GLuint  baseinstance);
  extern GLEEPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC GLeeFuncPtr_glDrawArraysInstancedBaseInstance;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  primcount, GLuint  baseinstance);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC GLeeFuncPtr_glDrawElementsInstancedBaseInstance;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  primcount, GLint  basevertex, GLuint  baseinstance);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC GLeeFuncPtr_glDrawElementsInstancedBaseVertexBaseInstance;

/* GL_ARB_shading_language_420pack */

/* Constants */

/* GL_ARB_transform_feedback_instanced */

/* Constants */
  typedef void (* GLEEPFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum  mode, GLuint  id, GLsizei  primcount);
  extern GLEEPFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC GLeeFuncPtr_glDrawTransformFeedbackInstanced;
  typedef void (* GLEEPFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum  mode, GLuint  id, GLuint  stream, GLsizei  primcount);
  extern GLEEPFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC GLeeFuncPtr_glDrawTransformFeedbackStreamInstanced;

/* GL_ARB_compressed_texture_pixel_storage */

/* Constants */

/* GL_ARB_conservative_depth */

/* Constants */

/* GL_ARB_internalformat_query */

/* Constants */
  typedef void (* GLEEPFNGLGETINTERNALFORMATIVPROC) (GLenum  target, GLenum  internalformat, GLenum  pname, GLsizei  bufSize, GLint * params);
  extern GLEEPFNGLGETINTERNALFORMATIVPROC GLeeFuncPtr_glGetInternalformativ;

/* GL_ARB_map_buffer_alignment */

/* Constants */

/* GL_ARB_shader_atomic_counters */

/* Constants */
  typedef void (* GLEEPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint  program, GLuint  bufferIndex, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC GLeeFuncPtr_glGetActiveAtomicCounterBufferiv;

/* GL_ARB_shader_image_load_store */

/* Constants */
  typedef void (* GLEEPFNGLBINDIMAGETEXTUREPROC) (GLuint  unit, GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  access, GLenum  format);
  extern GLEEPFNGLBINDIMAGETEXTUREPROC GLeeFuncPtr_glBindImageTexture;
  typedef void (* GLEEPFNGLMEMORYBARRIERPROC) (GLbitfield  barriers);
  extern GLEEPFNGLMEMORYBARRIERPROC GLeeFuncPtr_glMemoryBarrier;

/* GL_ARB_shading_language_packing */

/* Constants */

/* GL_ARB_texture_storage */

/* Constants */
  typedef void (* GLEEPFNGLTEXSTORAGE1DPROC) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width);
  extern GLEEPFNGLTEXSTORAGE1DPROC GLeeFuncPtr_glTexStorage1D;
  typedef void (* GLEEPFNGLTEXSTORAGE2DPROC) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLTEXSTORAGE2DPROC GLeeFuncPtr_glTexStorage2D;
  typedef void (* GLEEPFNGLTEXSTORAGE3DPROC) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth);
  extern GLEEPFNGLTEXSTORAGE3DPROC GLeeFuncPtr_glTexStorage3D;
  typedef void (* GLEEPFNGLTEXTURESTORAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width);
  extern GLEEPFNGLTEXTURESTORAGE1DEXTPROC GLeeFuncPtr_glTextureStorage1DEXT;
  typedef void (* GLEEPFNGLTEXTURESTORAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLTEXTURESTORAGE2DEXTPROC GLeeFuncPtr_glTextureStorage2DEXT;
  typedef void (* GLEEPFNGLTEXTURESTORAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth);
  extern GLEEPFNGLTEXTURESTORAGE3DEXTPROC GLeeFuncPtr_glTextureStorage3DEXT;

/* GL_EXT_abgr */

/* Constants */

/* GL_EXT_blend_color */

/* Constants */
  typedef void (* GLEEPFNGLBLENDCOLOREXTPROC) (GLclampf  red, GLclampf  green, GLclampf  blue, GLclampf  alpha);
  extern GLEEPFNGLBLENDCOLOREXTPROC GLeeFuncPtr_glBlendColorEXT;

/* GL_EXT_polygon_offset */

/* Constants */
  typedef void (* GLEEPFNGLPOLYGONOFFSETEXTPROC) (GLfloat  factor, GLfloat  bias);
  extern GLEEPFNGLPOLYGONOFFSETEXTPROC GLeeFuncPtr_glPolygonOffsetEXT;

/* GL_EXT_texture */

/* Constants */

/* GL_EXT_texture3D */

/* Constants */
  typedef void (* GLEEPFNGLTEXIMAGE3DEXTPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXIMAGE3DEXTPROC GLeeFuncPtr_glTexImage3DEXT;
  typedef void (* GLEEPFNGLTEXSUBIMAGE3DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXSUBIMAGE3DEXTPROC GLeeFuncPtr_glTexSubImage3DEXT;

/* GL_SGIS_texture_filter4 */

/* Constants */
  typedef void (* GLEEPFNGLGETTEXFILTERFUNCSGISPROC) (GLenum  target, GLenum  filter, GLfloat * weights);
  extern GLEEPFNGLGETTEXFILTERFUNCSGISPROC GLeeFuncPtr_glGetTexFilterFuncSGIS;
  typedef void (* GLEEPFNGLTEXFILTERFUNCSGISPROC) (GLenum  target, GLenum  filter, GLsizei  n, const GLfloat * weights);
  extern GLEEPFNGLTEXFILTERFUNCSGISPROC GLeeFuncPtr_glTexFilterFuncSGIS;

/* GL_EXT_subtexture */

/* Constants */
  typedef void (* GLEEPFNGLTEXSUBIMAGE1DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXSUBIMAGE1DEXTPROC GLeeFuncPtr_glTexSubImage1DEXT;
  typedef void (* GLEEPFNGLTEXSUBIMAGE2DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXSUBIMAGE2DEXTPROC GLeeFuncPtr_glTexSubImage2DEXT;

/* GL_EXT_copy_texture */

/* Constants */
  typedef void (* GLEEPFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border);
  extern GLEEPFNGLCOPYTEXIMAGE1DEXTPROC GLeeFuncPtr_glCopyTexImage1DEXT;
  typedef void (* GLEEPFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border);
  extern GLEEPFNGLCOPYTEXIMAGE2DEXTPROC GLeeFuncPtr_glCopyTexImage2DEXT;
  typedef void (* GLEEPFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYTEXSUBIMAGE1DEXTPROC GLeeFuncPtr_glCopyTexSubImage1DEXT;
  typedef void (* GLEEPFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYTEXSUBIMAGE2DEXTPROC GLeeFuncPtr_glCopyTexSubImage2DEXT;
  typedef void (* GLEEPFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYTEXSUBIMAGE3DEXTPROC GLeeFuncPtr_glCopyTexSubImage3DEXT;

/* GL_EXT_histogram */

/* Constants */
  typedef void (* GLEEPFNGLGETHISTOGRAMEXTPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLvoid * values);
  extern GLEEPFNGLGETHISTOGRAMEXTPROC GLeeFuncPtr_glGetHistogramEXT;
  typedef void (* GLEEPFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETHISTOGRAMPARAMETERFVEXTPROC GLeeFuncPtr_glGetHistogramParameterfvEXT;
  typedef void (* GLEEPFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETHISTOGRAMPARAMETERIVEXTPROC GLeeFuncPtr_glGetHistogramParameterivEXT;
  typedef void (* GLEEPFNGLGETMINMAXEXTPROC) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLvoid * values);
  extern GLEEPFNGLGETMINMAXEXTPROC GLeeFuncPtr_glGetMinmaxEXT;
  typedef void (* GLEEPFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMINMAXPARAMETERFVEXTPROC GLeeFuncPtr_glGetMinmaxParameterfvEXT;
  typedef void (* GLEEPFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMINMAXPARAMETERIVEXTPROC GLeeFuncPtr_glGetMinmaxParameterivEXT;
  typedef void (* GLEEPFNGLHISTOGRAMEXTPROC) (GLenum  target, GLsizei  width, GLenum  internalformat, GLboolean  sink);
  extern GLEEPFNGLHISTOGRAMEXTPROC GLeeFuncPtr_glHistogramEXT;
  typedef void (* GLEEPFNGLMINMAXEXTPROC) (GLenum  target, GLenum  internalformat, GLboolean  sink);
  extern GLEEPFNGLMINMAXEXTPROC GLeeFuncPtr_glMinmaxEXT;
  typedef void (* GLEEPFNGLRESETHISTOGRAMEXTPROC) (GLenum  target);
  extern GLEEPFNGLRESETHISTOGRAMEXTPROC GLeeFuncPtr_glResetHistogramEXT;
  typedef void (* GLEEPFNGLRESETMINMAXEXTPROC) (GLenum  target);
  extern GLEEPFNGLRESETMINMAXEXTPROC GLeeFuncPtr_glResetMinmaxEXT;

/* GL_EXT_convolution */

/* Constants */
  typedef void (* GLEEPFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * image);
  extern GLEEPFNGLCONVOLUTIONFILTER1DEXTPROC GLeeFuncPtr_glConvolutionFilter1DEXT;
  typedef void (* GLEEPFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * image);
  extern GLEEPFNGLCONVOLUTIONFILTER2DEXTPROC GLeeFuncPtr_glConvolutionFilter2DEXT;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum  target, GLenum  pname, GLfloat  params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERFEXTPROC GLeeFuncPtr_glConvolutionParameterfEXT;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERFVEXTPROC GLeeFuncPtr_glConvolutionParameterfvEXT;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum  target, GLenum  pname, GLint  params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERIEXTPROC GLeeFuncPtr_glConvolutionParameteriEXT;
  typedef void (* GLEEPFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLCONVOLUTIONPARAMETERIVEXTPROC GLeeFuncPtr_glConvolutionParameterivEXT;
  typedef void (* GLEEPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC GLeeFuncPtr_glCopyConvolutionFilter1DEXT;
  typedef void (* GLEEPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC GLeeFuncPtr_glCopyConvolutionFilter2DEXT;
  typedef void (* GLEEPFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * image);
  extern GLEEPFNGLGETCONVOLUTIONFILTEREXTPROC GLeeFuncPtr_glGetConvolutionFilterEXT;
  typedef void (* GLEEPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC GLeeFuncPtr_glGetConvolutionParameterfvEXT;
  typedef void (* GLEEPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC GLeeFuncPtr_glGetConvolutionParameterivEXT;
  typedef void (* GLEEPFNGLGETSEPARABLEFILTEREXTPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * row, GLvoid * column, GLvoid * span);
  extern GLEEPFNGLGETSEPARABLEFILTEREXTPROC GLeeFuncPtr_glGetSeparableFilterEXT;
  typedef void (* GLEEPFNGLSEPARABLEFILTER2DEXTPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * row, const GLvoid * column);
  extern GLEEPFNGLSEPARABLEFILTER2DEXTPROC GLeeFuncPtr_glSeparableFilter2DEXT;

/* GL_SGI_color_matrix */

/* Constants */

/* GL_SGI_color_table */

/* Constants */
  typedef void (* GLEEPFNGLCOLORTABLESGIPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * table);
  extern GLEEPFNGLCOLORTABLESGIPROC GLeeFuncPtr_glColorTableSGI;
  typedef void (* GLEEPFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCOLORTABLEPARAMETERFVSGIPROC GLeeFuncPtr_glColorTableParameterfvSGI;
  typedef void (* GLEEPFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLCOLORTABLEPARAMETERIVSGIPROC GLeeFuncPtr_glColorTableParameterivSGI;
  typedef void (* GLEEPFNGLCOPYCOLORTABLESGIPROC) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCOLORTABLESGIPROC GLeeFuncPtr_glCopyColorTableSGI;
  typedef void (* GLEEPFNGLGETCOLORTABLESGIPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * table);
  extern GLEEPFNGLGETCOLORTABLESGIPROC GLeeFuncPtr_glGetColorTableSGI;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERFVSGIPROC GLeeFuncPtr_glGetColorTableParameterfvSGI;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERIVSGIPROC GLeeFuncPtr_glGetColorTableParameterivSGI;

/* GL_SGIS_pixel_texture */

/* Constants */
  typedef void (* GLEEPFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLPIXELTEXGENPARAMETERISGISPROC GLeeFuncPtr_glPixelTexGenParameteriSGIS;
  typedef void (* GLEEPFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLPIXELTEXGENPARAMETERIVSGISPROC GLeeFuncPtr_glPixelTexGenParameterivSGIS;
  typedef void (* GLEEPFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPIXELTEXGENPARAMETERFSGISPROC GLeeFuncPtr_glPixelTexGenParameterfSGIS;
  typedef void (* GLEEPFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPIXELTEXGENPARAMETERFVSGISPROC GLeeFuncPtr_glPixelTexGenParameterfvSGIS;
  typedef void (* GLEEPFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum  pname, GLint * params);
  extern GLEEPFNGLGETPIXELTEXGENPARAMETERIVSGISPROC GLeeFuncPtr_glGetPixelTexGenParameterivSGIS;
  typedef void (* GLEEPFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETPIXELTEXGENPARAMETERFVSGISPROC GLeeFuncPtr_glGetPixelTexGenParameterfvSGIS;

/* GL_SGIX_pixel_texture */

/* Constants */
  typedef void (* GLEEPFNGLPIXELTEXGENSGIXPROC) (GLenum  mode);
  extern GLEEPFNGLPIXELTEXGENSGIXPROC GLeeFuncPtr_glPixelTexGenSGIX;

/* GL_SGIS_texture4D */

/* Constants */
  typedef void (* GLEEPFNGLTEXIMAGE4DSGISPROC) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLsizei  size4d, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXIMAGE4DSGISPROC GLeeFuncPtr_glTexImage4DSGIS;
  typedef void (* GLEEPFNGLTEXSUBIMAGE4DSGISPROC) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  woffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLsizei  size4d, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXSUBIMAGE4DSGISPROC GLeeFuncPtr_glTexSubImage4DSGIS;

/* GL_SGI_texture_color_table */

/* Constants */

/* GL_EXT_cmyka */

/* Constants */

/* GL_EXT_texture_object */

/* Constants */
  typedef GLboolean (* GLEEPFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei  n, const GLuint * textures, GLboolean * residences);
  extern GLEEPFNGLARETEXTURESRESIDENTEXTPROC GLeeFuncPtr_glAreTexturesResidentEXT;
  typedef void (* GLEEPFNGLBINDTEXTUREEXTPROC) (GLenum  target, GLuint  texture);
  extern GLEEPFNGLBINDTEXTUREEXTPROC GLeeFuncPtr_glBindTextureEXT;
  typedef void (* GLEEPFNGLDELETETEXTURESEXTPROC) (GLsizei  n, const GLuint * textures);
  extern GLEEPFNGLDELETETEXTURESEXTPROC GLeeFuncPtr_glDeleteTexturesEXT;
  typedef void (* GLEEPFNGLGENTEXTURESEXTPROC) (GLsizei  n, GLuint * textures);
  extern GLEEPFNGLGENTEXTURESEXTPROC GLeeFuncPtr_glGenTexturesEXT;
  typedef GLboolean (* GLEEPFNGLISTEXTUREEXTPROC) (GLuint  texture);
  extern GLEEPFNGLISTEXTUREEXTPROC GLeeFuncPtr_glIsTextureEXT;
  typedef void (* GLEEPFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei  n, const GLuint * textures, const GLclampf * priorities);
  extern GLEEPFNGLPRIORITIZETEXTURESEXTPROC GLeeFuncPtr_glPrioritizeTexturesEXT;

/* GL_SGIS_detail_texture */

/* Constants */
  typedef void (* GLEEPFNGLDETAILTEXFUNCSGISPROC) (GLenum  target, GLsizei  n, const GLfloat * points);
  extern GLEEPFNGLDETAILTEXFUNCSGISPROC GLeeFuncPtr_glDetailTexFuncSGIS;
  typedef void (* GLEEPFNGLGETDETAILTEXFUNCSGISPROC) (GLenum  target, GLfloat * points);
  extern GLEEPFNGLGETDETAILTEXFUNCSGISPROC GLeeFuncPtr_glGetDetailTexFuncSGIS;

/* GL_SGIS_sharpen_texture */

/* Constants */
  typedef void (* GLEEPFNGLSHARPENTEXFUNCSGISPROC) (GLenum  target, GLsizei  n, const GLfloat * points);
  extern GLEEPFNGLSHARPENTEXFUNCSGISPROC GLeeFuncPtr_glSharpenTexFuncSGIS;
  typedef void (* GLEEPFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum  target, GLfloat * points);
  extern GLEEPFNGLGETSHARPENTEXFUNCSGISPROC GLeeFuncPtr_glGetSharpenTexFuncSGIS;

/* GL_EXT_packed_pixels */

/* Constants */

/* GL_SGIS_texture_lod */

/* Constants */

/* GL_SGIS_multisample */

/* Constants */
  typedef void (* GLEEPFNGLSAMPLEMASKSGISPROC) (GLclampf  value, GLboolean  invert);
  extern GLEEPFNGLSAMPLEMASKSGISPROC GLeeFuncPtr_glSampleMaskSGIS;
  typedef void (* GLEEPFNGLSAMPLEPATTERNSGISPROC) (GLenum  pattern);
  extern GLEEPFNGLSAMPLEPATTERNSGISPROC GLeeFuncPtr_glSamplePatternSGIS;

/* GL_EXT_rescale_normal */

/* Constants */

/* GL_EXT_vertex_array */

/* Constants */
  typedef void (* GLEEPFNGLARRAYELEMENTEXTPROC) (GLint  i);
  extern GLEEPFNGLARRAYELEMENTEXTPROC GLeeFuncPtr_glArrayElementEXT;
  typedef void (* GLEEPFNGLCOLORPOINTEREXTPROC) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const GLvoid * pointer);
  extern GLEEPFNGLCOLORPOINTEREXTPROC GLeeFuncPtr_glColorPointerEXT;
  typedef void (* GLEEPFNGLDRAWARRAYSEXTPROC) (GLenum  mode, GLint  first, GLsizei  count);
  extern GLEEPFNGLDRAWARRAYSEXTPROC GLeeFuncPtr_glDrawArraysEXT;
  typedef void (* GLEEPFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei  stride, GLsizei  count, const GLboolean * pointer);
  extern GLEEPFNGLEDGEFLAGPOINTEREXTPROC GLeeFuncPtr_glEdgeFlagPointerEXT;
  typedef void (* GLEEPFNGLGETPOINTERVEXTPROC) (GLenum  pname, GLvoid* * params);
  extern GLEEPFNGLGETPOINTERVEXTPROC GLeeFuncPtr_glGetPointervEXT;
  typedef void (* GLEEPFNGLINDEXPOINTEREXTPROC) (GLenum  type, GLsizei  stride, GLsizei  count, const GLvoid * pointer);
  extern GLEEPFNGLINDEXPOINTEREXTPROC GLeeFuncPtr_glIndexPointerEXT;
  typedef void (* GLEEPFNGLNORMALPOINTEREXTPROC) (GLenum  type, GLsizei  stride, GLsizei  count, const GLvoid * pointer);
  extern GLEEPFNGLNORMALPOINTEREXTPROC GLeeFuncPtr_glNormalPointerEXT;
  typedef void (* GLEEPFNGLTEXCOORDPOINTEREXTPROC) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const GLvoid * pointer);
  extern GLEEPFNGLTEXCOORDPOINTEREXTPROC GLeeFuncPtr_glTexCoordPointerEXT;
  typedef void (* GLEEPFNGLVERTEXPOINTEREXTPROC) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXPOINTEREXTPROC GLeeFuncPtr_glVertexPointerEXT;

/* GL_EXT_misc_attribute */

/* Constants */

/* GL_SGIS_generate_mipmap */

/* Constants */

/* GL_SGIX_clipmap */

/* Constants */

/* GL_SGIX_shadow */

/* Constants */

/* GL_SGIS_texture_edge_clamp */

/* Constants */

/* GL_SGIS_texture_border_clamp */

/* Constants */

/* GL_EXT_blend_minmax */

/* Constants */
  typedef void (* GLEEPFNGLBLENDEQUATIONEXTPROC) (GLenum  mode);
  extern GLEEPFNGLBLENDEQUATIONEXTPROC GLeeFuncPtr_glBlendEquationEXT;

/* GL_EXT_blend_subtract */

/* Constants */

/* GL_EXT_blend_logic_op */

/* Constants */

/* GL_SGIX_interlace */

/* Constants */

/* GL_SGIX_pixel_tiles */

/* Constants */

/* GL_SGIS_texture_select */

/* Constants */

/* GL_SGIX_sprite */

/* Constants */
  typedef void (* GLEEPFNGLSPRITEPARAMETERFSGIXPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLSPRITEPARAMETERFSGIXPROC GLeeFuncPtr_glSpriteParameterfSGIX;
  typedef void (* GLEEPFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLSPRITEPARAMETERFVSGIXPROC GLeeFuncPtr_glSpriteParameterfvSGIX;
  typedef void (* GLEEPFNGLSPRITEPARAMETERISGIXPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLSPRITEPARAMETERISGIXPROC GLeeFuncPtr_glSpriteParameteriSGIX;
  typedef void (* GLEEPFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLSPRITEPARAMETERIVSGIXPROC GLeeFuncPtr_glSpriteParameterivSGIX;

/* GL_SGIX_texture_multi_buffer */

/* Constants */

/* GL_EXT_point_parameters */

/* Constants */
  typedef void (* GLEEPFNGLPOINTPARAMETERFEXTPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPOINTPARAMETERFEXTPROC GLeeFuncPtr_glPointParameterfEXT;
  typedef void (* GLEEPFNGLPOINTPARAMETERFVEXTPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPOINTPARAMETERFVEXTPROC GLeeFuncPtr_glPointParameterfvEXT;

/* GL_SGIS_point_parameters */

/* Constants */
  typedef void (* GLEEPFNGLPOINTPARAMETERFSGISPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPOINTPARAMETERFSGISPROC GLeeFuncPtr_glPointParameterfSGIS;
  typedef void (* GLEEPFNGLPOINTPARAMETERFVSGISPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPOINTPARAMETERFVSGISPROC GLeeFuncPtr_glPointParameterfvSGIS;

/* GL_SGIX_instruments */

/* Constants */
  typedef GLint (* GLEEPFNGLGETINSTRUMENTSSGIXPROC) ();
  extern GLEEPFNGLGETINSTRUMENTSSGIXPROC GLeeFuncPtr_glGetInstrumentsSGIX;
  typedef void (* GLEEPFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei  size, GLint * buffer);
  extern GLEEPFNGLINSTRUMENTSBUFFERSGIXPROC GLeeFuncPtr_glInstrumentsBufferSGIX;
  typedef GLint (* GLEEPFNGLPOLLINSTRUMENTSSGIXPROC) (GLint * marker_p);
  extern GLEEPFNGLPOLLINSTRUMENTSSGIXPROC GLeeFuncPtr_glPollInstrumentsSGIX;
  typedef void (* GLEEPFNGLREADINSTRUMENTSSGIXPROC) (GLint  marker);
  extern GLEEPFNGLREADINSTRUMENTSSGIXPROC GLeeFuncPtr_glReadInstrumentsSGIX;
  typedef void (* GLEEPFNGLSTARTINSTRUMENTSSGIXPROC) ();
  extern GLEEPFNGLSTARTINSTRUMENTSSGIXPROC GLeeFuncPtr_glStartInstrumentsSGIX;
  typedef void (* GLEEPFNGLSTOPINSTRUMENTSSGIXPROC) (GLint  marker);
  extern GLEEPFNGLSTOPINSTRUMENTSSGIXPROC GLeeFuncPtr_glStopInstrumentsSGIX;

/* GL_SGIX_texture_scale_bias */

/* Constants */

/* GL_SGIX_framezoom */

/* Constants */
  typedef void (* GLEEPFNGLFRAMEZOOMSGIXPROC) (GLint  factor);
  extern GLEEPFNGLFRAMEZOOMSGIXPROC GLeeFuncPtr_glFrameZoomSGIX;

/* GL_SGIX_tag_sample_buffer */

/* Constants */
  typedef void (* GLEEPFNGLTAGSAMPLEBUFFERSGIXPROC) ();
  extern GLEEPFNGLTAGSAMPLEBUFFERSGIXPROC GLeeFuncPtr_glTagSampleBufferSGIX;

/* GL_FfdMaskSGIX */

/* Constants */

/* GL_SGIX_polynomial_ffd */

/* Constants */
  typedef void (* GLEEPFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum  target, GLdouble  u1, GLdouble  u2, GLint  ustride, GLint  uorder, GLdouble  v1, GLdouble  v2, GLint  vstride, GLint  vorder, GLdouble  w1, GLdouble  w2, GLint  wstride, GLint  worder, const GLdouble * points);
  extern GLEEPFNGLDEFORMATIONMAP3DSGIXPROC GLeeFuncPtr_glDeformationMap3dSGIX;
  typedef void (* GLEEPFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum  target, GLfloat  u1, GLfloat  u2, GLint  ustride, GLint  uorder, GLfloat  v1, GLfloat  v2, GLint  vstride, GLint  vorder, GLfloat  w1, GLfloat  w2, GLint  wstride, GLint  worder, const GLfloat * points);
  extern GLEEPFNGLDEFORMATIONMAP3FSGIXPROC GLeeFuncPtr_glDeformationMap3fSGIX;
  typedef void (* GLEEPFNGLDEFORMSGIXPROC) (GLbitfield  mask);
  extern GLEEPFNGLDEFORMSGIXPROC GLeeFuncPtr_glDeformSGIX;
  typedef void (* GLEEPFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield  mask);
  extern GLEEPFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC GLeeFuncPtr_glLoadIdentityDeformationMapSGIX;

/* GL_SGIX_reference_plane */

/* Constants */
  typedef void (* GLEEPFNGLREFERENCEPLANESGIXPROC) (const GLdouble * equation);
  extern GLEEPFNGLREFERENCEPLANESGIXPROC GLeeFuncPtr_glReferencePlaneSGIX;

/* GL_SGIX_flush_raster */

/* Constants */
  typedef void (* GLEEPFNGLFLUSHRASTERSGIXPROC) ();
  extern GLEEPFNGLFLUSHRASTERSGIXPROC GLeeFuncPtr_glFlushRasterSGIX;

/* GL_SGIX_depth_texture */

/* Constants */

/* GL_SGIS_fog_function */

/* Constants */
  typedef void (* GLEEPFNGLFOGFUNCSGISPROC) (GLsizei  n, const GLfloat * points);
  extern GLEEPFNGLFOGFUNCSGISPROC GLeeFuncPtr_glFogFuncSGIS;
  typedef void (* GLEEPFNGLGETFOGFUNCSGISPROC) (GLfloat * points);
  extern GLEEPFNGLGETFOGFUNCSGISPROC GLeeFuncPtr_glGetFogFuncSGIS;

/* GL_SGIX_fog_offset */

/* Constants */

/* GL_HP_image_transform */

/* Constants */
  typedef void (* GLEEPFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLIMAGETRANSFORMPARAMETERIHPPROC GLeeFuncPtr_glImageTransformParameteriHP;
  typedef void (* GLEEPFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum  target, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLIMAGETRANSFORMPARAMETERFHPPROC GLeeFuncPtr_glImageTransformParameterfHP;
  typedef void (* GLEEPFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLIMAGETRANSFORMPARAMETERIVHPPROC GLeeFuncPtr_glImageTransformParameterivHP;
  typedef void (* GLEEPFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLIMAGETRANSFORMPARAMETERFVHPPROC GLeeFuncPtr_glImageTransformParameterfvHP;
  typedef void (* GLEEPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC GLeeFuncPtr_glGetImageTransformParameterivHP;
  typedef void (* GLEEPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC GLeeFuncPtr_glGetImageTransformParameterfvHP;

/* GL_HP_convolution_border_modes */

/* Constants */

/* GL_INGR_palette_buffer */

/* Constants */

/* GL_SGIX_texture_add_env */

/* Constants */

/* GL_EXT_color_subtable */

/* Constants */
  typedef void (* GLEEPFNGLCOLORSUBTABLEEXTPROC) (GLenum  target, GLsizei  start, GLsizei  count, GLenum  format, GLenum  type, const GLvoid * data);
  extern GLEEPFNGLCOLORSUBTABLEEXTPROC GLeeFuncPtr_glColorSubTableEXT;
  typedef void (* GLEEPFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum  target, GLsizei  start, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYCOLORSUBTABLEEXTPROC GLeeFuncPtr_glCopyColorSubTableEXT;

/* GL_PGI_vertex_hints */

/* Constants */

/* GL_PGI_misc_hints */

/* Constants */
  typedef void (* GLEEPFNGLHINTPGIPROC) (GLenum  target, GLint  mode);
  extern GLEEPFNGLHINTPGIPROC GLeeFuncPtr_glHintPGI;

/* GL_EXT_paletted_texture */

/* Constants */
  typedef void (* GLEEPFNGLCOLORTABLEEXTPROC) (GLenum  target, GLenum  internalFormat, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * table);
  extern GLEEPFNGLCOLORTABLEEXTPROC GLeeFuncPtr_glColorTableEXT;
  typedef void (* GLEEPFNGLGETCOLORTABLEEXTPROC) (GLenum  target, GLenum  format, GLenum  type, GLvoid * data);
  extern GLEEPFNGLGETCOLORTABLEEXTPROC GLeeFuncPtr_glGetColorTableEXT;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERIVEXTPROC GLeeFuncPtr_glGetColorTableParameterivEXT;
  typedef void (* GLEEPFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOLORTABLEPARAMETERFVEXTPROC GLeeFuncPtr_glGetColorTableParameterfvEXT;

/* GL_EXT_clip_volume_hint */

/* Constants */

/* GL_SGIX_list_priority */

/* Constants */
  typedef void (* GLEEPFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint  list, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETLISTPARAMETERFVSGIXPROC GLeeFuncPtr_glGetListParameterfvSGIX;
  typedef void (* GLEEPFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint  list, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETLISTPARAMETERIVSGIXPROC GLeeFuncPtr_glGetListParameterivSGIX;
  typedef void (* GLEEPFNGLLISTPARAMETERFSGIXPROC) (GLuint  list, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLLISTPARAMETERFSGIXPROC GLeeFuncPtr_glListParameterfSGIX;
  typedef void (* GLEEPFNGLLISTPARAMETERFVSGIXPROC) (GLuint  list, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLLISTPARAMETERFVSGIXPROC GLeeFuncPtr_glListParameterfvSGIX;
  typedef void (* GLEEPFNGLLISTPARAMETERISGIXPROC) (GLuint  list, GLenum  pname, GLint  param);
  extern GLEEPFNGLLISTPARAMETERISGIXPROC GLeeFuncPtr_glListParameteriSGIX;
  typedef void (* GLEEPFNGLLISTPARAMETERIVSGIXPROC) (GLuint  list, GLenum  pname, const GLint * params);
  extern GLEEPFNGLLISTPARAMETERIVSGIXPROC GLeeFuncPtr_glListParameterivSGIX;

/* GL_SGIX_ir_instrument1 */

/* Constants */

/* GL_SGIX_calligraphic_fragment */

/* Constants */

/* GL_SGIX_texture_lod_bias */

/* Constants */

/* GL_SGIX_shadow_ambient */

/* Constants */

/* GL_EXT_index_texture */

/* Constants */

/* GL_EXT_index_material */

/* Constants */
  typedef void (* GLEEPFNGLINDEXMATERIALEXTPROC) (GLenum  face, GLenum  mode);
  extern GLEEPFNGLINDEXMATERIALEXTPROC GLeeFuncPtr_glIndexMaterialEXT;

/* GL_EXT_index_func */

/* Constants */
  typedef void (* GLEEPFNGLINDEXFUNCEXTPROC) (GLenum  func, GLclampf  ref);
  extern GLEEPFNGLINDEXFUNCEXTPROC GLeeFuncPtr_glIndexFuncEXT;

/* GL_EXT_index_array_formats */

/* Constants */

/* GL_EXT_compiled_vertex_array */

/* Constants */
  typedef void (* GLEEPFNGLLOCKARRAYSEXTPROC) (GLint  first, GLsizei  count);
  extern GLEEPFNGLLOCKARRAYSEXTPROC GLeeFuncPtr_glLockArraysEXT;
  typedef void (* GLEEPFNGLUNLOCKARRAYSEXTPROC) ();
  extern GLEEPFNGLUNLOCKARRAYSEXTPROC GLeeFuncPtr_glUnlockArraysEXT;

/* GL_EXT_cull_vertex */

/* Constants */
  typedef void (* GLEEPFNGLCULLPARAMETERDVEXTPROC) (GLenum  pname, GLdouble * params);
  extern GLEEPFNGLCULLPARAMETERDVEXTPROC GLeeFuncPtr_glCullParameterdvEXT;
  typedef void (* GLEEPFNGLCULLPARAMETERFVEXTPROC) (GLenum  pname, GLfloat * params);
  extern GLEEPFNGLCULLPARAMETERFVEXTPROC GLeeFuncPtr_glCullParameterfvEXT;

/* GL_SGIX_ycrcb */

/* Constants */

/* GL_SGIX_fragment_lighting */

/* Constants */
  typedef void (* GLEEPFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum  face, GLenum  mode);
  extern GLEEPFNGLFRAGMENTCOLORMATERIALSGIXPROC GLeeFuncPtr_glFragmentColorMaterialSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum  light, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLFRAGMENTLIGHTFSGIXPROC GLeeFuncPtr_glFragmentLightfSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum  light, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLFRAGMENTLIGHTFVSGIXPROC GLeeFuncPtr_glFragmentLightfvSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTISGIXPROC) (GLenum  light, GLenum  pname, GLint  param);
  extern GLEEPFNGLFRAGMENTLIGHTISGIXPROC GLeeFuncPtr_glFragmentLightiSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum  light, GLenum  pname, const GLint * params);
  extern GLEEPFNGLFRAGMENTLIGHTIVSGIXPROC GLeeFuncPtr_glFragmentLightivSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLFRAGMENTLIGHTMODELFSGIXPROC GLeeFuncPtr_glFragmentLightModelfSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLFRAGMENTLIGHTMODELFVSGIXPROC GLeeFuncPtr_glFragmentLightModelfvSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLFRAGMENTLIGHTMODELISGIXPROC GLeeFuncPtr_glFragmentLightModeliSGIX;
  typedef void (* GLEEPFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLFRAGMENTLIGHTMODELIVSGIXPROC GLeeFuncPtr_glFragmentLightModelivSGIX;
  typedef void (* GLEEPFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum  face, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLFRAGMENTMATERIALFSGIXPROC GLeeFuncPtr_glFragmentMaterialfSGIX;
  typedef void (* GLEEPFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum  face, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLFRAGMENTMATERIALFVSGIXPROC GLeeFuncPtr_glFragmentMaterialfvSGIX;
  typedef void (* GLEEPFNGLFRAGMENTMATERIALISGIXPROC) (GLenum  face, GLenum  pname, GLint  param);
  extern GLEEPFNGLFRAGMENTMATERIALISGIXPROC GLeeFuncPtr_glFragmentMaterialiSGIX;
  typedef void (* GLEEPFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum  face, GLenum  pname, const GLint * params);
  extern GLEEPFNGLFRAGMENTMATERIALIVSGIXPROC GLeeFuncPtr_glFragmentMaterialivSGIX;
  typedef void (* GLEEPFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum  light, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETFRAGMENTLIGHTFVSGIXPROC GLeeFuncPtr_glGetFragmentLightfvSGIX;
  typedef void (* GLEEPFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum  light, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFRAGMENTLIGHTIVSGIXPROC GLeeFuncPtr_glGetFragmentLightivSGIX;
  typedef void (* GLEEPFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum  face, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETFRAGMENTMATERIALFVSGIXPROC GLeeFuncPtr_glGetFragmentMaterialfvSGIX;
  typedef void (* GLEEPFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum  face, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFRAGMENTMATERIALIVSGIXPROC GLeeFuncPtr_glGetFragmentMaterialivSGIX;
  typedef void (* GLEEPFNGLLIGHTENVISGIXPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLLIGHTENVISGIXPROC GLeeFuncPtr_glLightEnviSGIX;

/* GL_IBM_rasterpos_clip */

/* Constants */

/* GL_HP_texture_lighting */

/* Constants */

/* GL_EXT_draw_range_elements */

/* Constants */
  typedef void (* GLEEPFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const GLvoid * indices);
  extern GLEEPFNGLDRAWRANGEELEMENTSEXTPROC GLeeFuncPtr_glDrawRangeElementsEXT;

/* GL_WIN_phong_shading */

/* Constants */

/* GL_WIN_specular_fog */

/* Constants */

/* GL_EXT_light_texture */

/* Constants */
  typedef void (* GLEEPFNGLAPPLYTEXTUREEXTPROC) (GLenum  mode);
  extern GLEEPFNGLAPPLYTEXTUREEXTPROC GLeeFuncPtr_glApplyTextureEXT;
  typedef void (* GLEEPFNGLTEXTURELIGHTEXTPROC) (GLenum  pname);
  extern GLEEPFNGLTEXTURELIGHTEXTPROC GLeeFuncPtr_glTextureLightEXT;
  typedef void (* GLEEPFNGLTEXTUREMATERIALEXTPROC) (GLenum  face, GLenum  mode);
  extern GLEEPFNGLTEXTUREMATERIALEXTPROC GLeeFuncPtr_glTextureMaterialEXT;

/* GL_SGIX_blend_alpha_minmax */

/* Constants */

/* GL_SGIX_impact_pixel_texture */

/* Constants */

/* GL_EXT_bgra */

/* Constants */

/* GL_SGIX_async */

/* Constants */
  typedef void (* GLEEPFNGLASYNCMARKERSGIXPROC) (GLuint  marker);
  extern GLEEPFNGLASYNCMARKERSGIXPROC GLeeFuncPtr_glAsyncMarkerSGIX;
  typedef GLint (* GLEEPFNGLFINISHASYNCSGIXPROC) (GLuint * markerp);
  extern GLEEPFNGLFINISHASYNCSGIXPROC GLeeFuncPtr_glFinishAsyncSGIX;
  typedef GLint (* GLEEPFNGLPOLLASYNCSGIXPROC) (GLuint * markerp);
  extern GLEEPFNGLPOLLASYNCSGIXPROC GLeeFuncPtr_glPollAsyncSGIX;
  typedef GLuint (* GLEEPFNGLGENASYNCMARKERSSGIXPROC) (GLsizei  range);
  extern GLEEPFNGLGENASYNCMARKERSSGIXPROC GLeeFuncPtr_glGenAsyncMarkersSGIX;
  typedef void (* GLEEPFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint  marker, GLsizei  range);
  extern GLEEPFNGLDELETEASYNCMARKERSSGIXPROC GLeeFuncPtr_glDeleteAsyncMarkersSGIX;
  typedef GLboolean (* GLEEPFNGLISASYNCMARKERSGIXPROC) (GLuint  marker);
  extern GLEEPFNGLISASYNCMARKERSGIXPROC GLeeFuncPtr_glIsAsyncMarkerSGIX;

/* GL_SGIX_async_pixel */

/* Constants */

/* GL_SGIX_async_histogram */

/* Constants */

/* GL_INTEL_texture_scissor */

/* Constants */

/* GL_INTEL_parallel_arrays */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXPOINTERVINTELPROC) (GLint  size, GLenum  type, const GLvoid* * pointer);
  extern GLEEPFNGLVERTEXPOINTERVINTELPROC GLeeFuncPtr_glVertexPointervINTEL;
  typedef void (* GLEEPFNGLNORMALPOINTERVINTELPROC) (GLenum  type, const GLvoid* * pointer);
  extern GLEEPFNGLNORMALPOINTERVINTELPROC GLeeFuncPtr_glNormalPointervINTEL;
  typedef void (* GLEEPFNGLCOLORPOINTERVINTELPROC) (GLint  size, GLenum  type, const GLvoid* * pointer);
  extern GLEEPFNGLCOLORPOINTERVINTELPROC GLeeFuncPtr_glColorPointervINTEL;
  typedef void (* GLEEPFNGLTEXCOORDPOINTERVINTELPROC) (GLint  size, GLenum  type, const GLvoid* * pointer);
  extern GLEEPFNGLTEXCOORDPOINTERVINTELPROC GLeeFuncPtr_glTexCoordPointervINTEL;

/* GL_HP_occlusion_test */

/* Constants */

/* GL_EXT_pixel_transform */

/* Constants */
  typedef void (* GLEEPFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLPIXELTRANSFORMPARAMETERIEXTPROC GLeeFuncPtr_glPixelTransformParameteriEXT;
  typedef void (* GLEEPFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum  target, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPIXELTRANSFORMPARAMETERFEXTPROC GLeeFuncPtr_glPixelTransformParameterfEXT;
  typedef void (* GLEEPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC GLeeFuncPtr_glPixelTransformParameterivEXT;
  typedef void (* GLEEPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC GLeeFuncPtr_glPixelTransformParameterfvEXT;

/* GL_EXT_pixel_transform_color_table */

/* Constants */

/* GL_EXT_shared_texture_palette */

/* Constants */

/* GL_EXT_separate_specular_color */

/* Constants */

/* GL_EXT_secondary_color */

/* Constants */
  typedef void (* GLEEPFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte  red, GLbyte  green, GLbyte  blue);
  extern GLEEPFNGLSECONDARYCOLOR3BEXTPROC GLeeFuncPtr_glSecondaryColor3bEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte * v);
  extern GLEEPFNGLSECONDARYCOLOR3BVEXTPROC GLeeFuncPtr_glSecondaryColor3bvEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble  red, GLdouble  green, GLdouble  blue);
  extern GLEEPFNGLSECONDARYCOLOR3DEXTPROC GLeeFuncPtr_glSecondaryColor3dEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble * v);
  extern GLEEPFNGLSECONDARYCOLOR3DVEXTPROC GLeeFuncPtr_glSecondaryColor3dvEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat  red, GLfloat  green, GLfloat  blue);
  extern GLEEPFNGLSECONDARYCOLOR3FEXTPROC GLeeFuncPtr_glSecondaryColor3fEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat * v);
  extern GLEEPFNGLSECONDARYCOLOR3FVEXTPROC GLeeFuncPtr_glSecondaryColor3fvEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3IEXTPROC) (GLint  red, GLint  green, GLint  blue);
  extern GLEEPFNGLSECONDARYCOLOR3IEXTPROC GLeeFuncPtr_glSecondaryColor3iEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint * v);
  extern GLEEPFNGLSECONDARYCOLOR3IVEXTPROC GLeeFuncPtr_glSecondaryColor3ivEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3SEXTPROC) (GLshort  red, GLshort  green, GLshort  blue);
  extern GLEEPFNGLSECONDARYCOLOR3SEXTPROC GLeeFuncPtr_glSecondaryColor3sEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort * v);
  extern GLEEPFNGLSECONDARYCOLOR3SVEXTPROC GLeeFuncPtr_glSecondaryColor3svEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte  red, GLubyte  green, GLubyte  blue);
  extern GLEEPFNGLSECONDARYCOLOR3UBEXTPROC GLeeFuncPtr_glSecondaryColor3ubEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte * v);
  extern GLEEPFNGLSECONDARYCOLOR3UBVEXTPROC GLeeFuncPtr_glSecondaryColor3ubvEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint  red, GLuint  green, GLuint  blue);
  extern GLEEPFNGLSECONDARYCOLOR3UIEXTPROC GLeeFuncPtr_glSecondaryColor3uiEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint * v);
  extern GLEEPFNGLSECONDARYCOLOR3UIVEXTPROC GLeeFuncPtr_glSecondaryColor3uivEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3USEXTPROC) (GLushort  red, GLushort  green, GLushort  blue);
  extern GLEEPFNGLSECONDARYCOLOR3USEXTPROC GLeeFuncPtr_glSecondaryColor3usEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort * v);
  extern GLEEPFNGLSECONDARYCOLOR3USVEXTPROC GLeeFuncPtr_glSecondaryColor3usvEXT;
  typedef void (* GLEEPFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLSECONDARYCOLORPOINTEREXTPROC GLeeFuncPtr_glSecondaryColorPointerEXT;

/* GL_EXT_texture_perturb_normal */

/* Constants */
  typedef void (* GLEEPFNGLTEXTURENORMALEXTPROC) (GLenum  mode);
  extern GLEEPFNGLTEXTURENORMALEXTPROC GLeeFuncPtr_glTextureNormalEXT;

/* GL_EXT_multi_draw_arrays */

/* Constants */
  typedef void (* GLEEPFNGLMULTIDRAWARRAYSEXTPROC) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWARRAYSEXTPROC GLeeFuncPtr_glMultiDrawArraysEXT;
  typedef void (* GLEEPFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum  mode, const GLsizei * count, GLenum  type, const GLvoid* * indices, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWELEMENTSEXTPROC GLeeFuncPtr_glMultiDrawElementsEXT;

/* GL_EXT_fog_coord */

/* Constants */
  typedef void (* GLEEPFNGLFOGCOORDFEXTPROC) (GLfloat  coord);
  extern GLEEPFNGLFOGCOORDFEXTPROC GLeeFuncPtr_glFogCoordfEXT;
  typedef void (* GLEEPFNGLFOGCOORDFVEXTPROC) (const GLfloat * coord);
  extern GLEEPFNGLFOGCOORDFVEXTPROC GLeeFuncPtr_glFogCoordfvEXT;
  typedef void (* GLEEPFNGLFOGCOORDDEXTPROC) (GLdouble  coord);
  extern GLEEPFNGLFOGCOORDDEXTPROC GLeeFuncPtr_glFogCoorddEXT;
  typedef void (* GLEEPFNGLFOGCOORDDVEXTPROC) (const GLdouble * coord);
  extern GLEEPFNGLFOGCOORDDVEXTPROC GLeeFuncPtr_glFogCoorddvEXT;
  typedef void (* GLEEPFNGLFOGCOORDPOINTEREXTPROC) (GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLFOGCOORDPOINTEREXTPROC GLeeFuncPtr_glFogCoordPointerEXT;

/* GL_REND_screen_coordinates */

/* Constants */

/* GL_EXT_coordinate_frame */

/* Constants */
  typedef void (* GLEEPFNGLTANGENT3BEXTPROC) (GLbyte  tx, GLbyte  ty, GLbyte  tz);
  extern GLEEPFNGLTANGENT3BEXTPROC GLeeFuncPtr_glTangent3bEXT;
  typedef void (* GLEEPFNGLTANGENT3BVEXTPROC) (const GLbyte * v);
  extern GLEEPFNGLTANGENT3BVEXTPROC GLeeFuncPtr_glTangent3bvEXT;
  typedef void (* GLEEPFNGLTANGENT3DEXTPROC) (GLdouble  tx, GLdouble  ty, GLdouble  tz);
  extern GLEEPFNGLTANGENT3DEXTPROC GLeeFuncPtr_glTangent3dEXT;
  typedef void (* GLEEPFNGLTANGENT3DVEXTPROC) (const GLdouble * v);
  extern GLEEPFNGLTANGENT3DVEXTPROC GLeeFuncPtr_glTangent3dvEXT;
  typedef void (* GLEEPFNGLTANGENT3FEXTPROC) (GLfloat  tx, GLfloat  ty, GLfloat  tz);
  extern GLEEPFNGLTANGENT3FEXTPROC GLeeFuncPtr_glTangent3fEXT;
  typedef void (* GLEEPFNGLTANGENT3FVEXTPROC) (const GLfloat * v);
  extern GLEEPFNGLTANGENT3FVEXTPROC GLeeFuncPtr_glTangent3fvEXT;
  typedef void (* GLEEPFNGLTANGENT3IEXTPROC) (GLint  tx, GLint  ty, GLint  tz);
  extern GLEEPFNGLTANGENT3IEXTPROC GLeeFuncPtr_glTangent3iEXT;
  typedef void (* GLEEPFNGLTANGENT3IVEXTPROC) (const GLint * v);
  extern GLEEPFNGLTANGENT3IVEXTPROC GLeeFuncPtr_glTangent3ivEXT;
  typedef void (* GLEEPFNGLTANGENT3SEXTPROC) (GLshort  tx, GLshort  ty, GLshort  tz);
  extern GLEEPFNGLTANGENT3SEXTPROC GLeeFuncPtr_glTangent3sEXT;
  typedef void (* GLEEPFNGLTANGENT3SVEXTPROC) (const GLshort * v);
  extern GLEEPFNGLTANGENT3SVEXTPROC GLeeFuncPtr_glTangent3svEXT;
  typedef void (* GLEEPFNGLBINORMAL3BEXTPROC) (GLbyte  bx, GLbyte  by, GLbyte  bz);
  extern GLEEPFNGLBINORMAL3BEXTPROC GLeeFuncPtr_glBinormal3bEXT;
  typedef void (* GLEEPFNGLBINORMAL3BVEXTPROC) (const GLbyte * v);
  extern GLEEPFNGLBINORMAL3BVEXTPROC GLeeFuncPtr_glBinormal3bvEXT;
  typedef void (* GLEEPFNGLBINORMAL3DEXTPROC) (GLdouble  bx, GLdouble  by, GLdouble  bz);
  extern GLEEPFNGLBINORMAL3DEXTPROC GLeeFuncPtr_glBinormal3dEXT;
  typedef void (* GLEEPFNGLBINORMAL3DVEXTPROC) (const GLdouble * v);
  extern GLEEPFNGLBINORMAL3DVEXTPROC GLeeFuncPtr_glBinormal3dvEXT;
  typedef void (* GLEEPFNGLBINORMAL3FEXTPROC) (GLfloat  bx, GLfloat  by, GLfloat  bz);
  extern GLEEPFNGLBINORMAL3FEXTPROC GLeeFuncPtr_glBinormal3fEXT;
  typedef void (* GLEEPFNGLBINORMAL3FVEXTPROC) (const GLfloat * v);
  extern GLEEPFNGLBINORMAL3FVEXTPROC GLeeFuncPtr_glBinormal3fvEXT;
  typedef void (* GLEEPFNGLBINORMAL3IEXTPROC) (GLint  bx, GLint  by, GLint  bz);
  extern GLEEPFNGLBINORMAL3IEXTPROC GLeeFuncPtr_glBinormal3iEXT;
  typedef void (* GLEEPFNGLBINORMAL3IVEXTPROC) (const GLint * v);
  extern GLEEPFNGLBINORMAL3IVEXTPROC GLeeFuncPtr_glBinormal3ivEXT;
  typedef void (* GLEEPFNGLBINORMAL3SEXTPROC) (GLshort  bx, GLshort  by, GLshort  bz);
  extern GLEEPFNGLBINORMAL3SEXTPROC GLeeFuncPtr_glBinormal3sEXT;
  typedef void (* GLEEPFNGLBINORMAL3SVEXTPROC) (const GLshort * v);
  extern GLEEPFNGLBINORMAL3SVEXTPROC GLeeFuncPtr_glBinormal3svEXT;
  typedef void (* GLEEPFNGLTANGENTPOINTEREXTPROC) (GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLTANGENTPOINTEREXTPROC GLeeFuncPtr_glTangentPointerEXT;
  typedef void (* GLEEPFNGLBINORMALPOINTEREXTPROC) (GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLBINORMALPOINTEREXTPROC GLeeFuncPtr_glBinormalPointerEXT;

/* GL_EXT_texture_env_combine */

/* Constants */

/* GL_APPLE_specular_vector */

/* Constants */

/* GL_APPLE_transform_hint */

/* Constants */

/* GL_SGIX_fog_scale */

/* Constants */

/* GL_SUNX_constant_data */

/* Constants */
  typedef void (* GLEEPFNGLFINISHTEXTURESUNXPROC) ();
  extern GLEEPFNGLFINISHTEXTURESUNXPROC GLeeFuncPtr_glFinishTextureSUNX;

/* GL_SUN_global_alpha */

/* Constants */
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORBSUNPROC GLeeFuncPtr_glGlobalAlphaFactorbSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORSSUNPROC GLeeFuncPtr_glGlobalAlphaFactorsSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORISUNPROC) (GLint  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORISUNPROC GLeeFuncPtr_glGlobalAlphaFactoriSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORFSUNPROC GLeeFuncPtr_glGlobalAlphaFactorfSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORDSUNPROC GLeeFuncPtr_glGlobalAlphaFactordSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORUBSUNPROC GLeeFuncPtr_glGlobalAlphaFactorubSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORUSSUNPROC GLeeFuncPtr_glGlobalAlphaFactorusSUN;
  typedef void (* GLEEPFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint  factor);
  extern GLEEPFNGLGLOBALALPHAFACTORUISUNPROC GLeeFuncPtr_glGlobalAlphaFactoruiSUN;

/* GL_SUN_triangle_list */

/* Constants */
  typedef void (* GLEEPFNGLREPLACEMENTCODEUISUNPROC) (GLuint  code);
  extern GLEEPFNGLREPLACEMENTCODEUISUNPROC GLeeFuncPtr_glReplacementCodeuiSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUSSUNPROC) (GLushort  code);
  extern GLEEPFNGLREPLACEMENTCODEUSSUNPROC GLeeFuncPtr_glReplacementCodeusSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte  code);
  extern GLEEPFNGLREPLACEMENTCODEUBSUNPROC GLeeFuncPtr_glReplacementCodeubSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint * code);
  extern GLEEPFNGLREPLACEMENTCODEUIVSUNPROC GLeeFuncPtr_glReplacementCodeuivSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort * code);
  extern GLEEPFNGLREPLACEMENTCODEUSVSUNPROC GLeeFuncPtr_glReplacementCodeusvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte * code);
  extern GLEEPFNGLREPLACEMENTCODEUBVSUNPROC GLeeFuncPtr_glReplacementCodeubvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum  type, GLsizei  stride, const GLvoid* * pointer);
  extern GLEEPFNGLREPLACEMENTCODEPOINTERSUNPROC GLeeFuncPtr_glReplacementCodePointerSUN;

/* GL_SUN_vertex */

/* Constants */
  typedef void (* GLEEPFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte  r, GLubyte  g, GLubyte  b, GLubyte  a, GLfloat  x, GLfloat  y);
  extern GLEEPFNGLCOLOR4UBVERTEX2FSUNPROC GLeeFuncPtr_glColor4ubVertex2fSUN;
  typedef void (* GLEEPFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte * c, const GLfloat * v);
  extern GLEEPFNGLCOLOR4UBVERTEX2FVSUNPROC GLeeFuncPtr_glColor4ubVertex2fvSUN;
  typedef void (* GLEEPFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte  r, GLubyte  g, GLubyte  b, GLubyte  a, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLCOLOR4UBVERTEX3FSUNPROC GLeeFuncPtr_glColor4ubVertex3fSUN;
  typedef void (* GLEEPFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte * c, const GLfloat * v);
  extern GLEEPFNGLCOLOR4UBVERTEX3FVSUNPROC GLeeFuncPtr_glColor4ubVertex3fvSUN;
  typedef void (* GLEEPFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLCOLOR3FVERTEX3FSUNPROC GLeeFuncPtr_glColor3fVertex3fSUN;
  typedef void (* GLEEPFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat * c, const GLfloat * v);
  extern GLEEPFNGLCOLOR3FVERTEX3FVSUNPROC GLeeFuncPtr_glColor3fVertex3fvSUN;
  typedef void (* GLEEPFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  a, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glColor4fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * c, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glColor4fNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLTEXCOORD2FVERTEX3FSUNPROC GLeeFuncPtr_glTexCoord2fVertex3fSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD2FVERTEX3FVSUNPROC GLeeFuncPtr_glTexCoord2fVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  p, GLfloat  q, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLTEXCOORD4FVERTEX4FSUNPROC GLeeFuncPtr_glTexCoord4fVertex4fSUN;
  typedef void (* GLEEPFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat * tc, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD4FVERTEX4FVSUNPROC GLeeFuncPtr_glTexCoord4fVertex4fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat  s, GLfloat  t, GLubyte  r, GLubyte  g, GLubyte  b, GLubyte  a, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC GLeeFuncPtr_glTexCoord2fColor4ubVertex3fSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat * tc, const GLubyte * c, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC GLeeFuncPtr_glTexCoord2fColor4ubVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC GLeeFuncPtr_glTexCoord2fColor3fVertex3fSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC GLeeFuncPtr_glTexCoord2fColor3fVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glTexCoord2fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glTexCoord2fNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  a, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glTexCoord2fColor4fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glTexCoord2fColor4fNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat  s, GLfloat  t, GLfloat  p, GLfloat  q, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  a, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC GLeeFuncPtr_glTexCoord4fColor4fNormal3fVertex4fSUN;
  typedef void (* GLEEPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC GLeeFuncPtr_glTexCoord4fColor4fNormal3fVertex4fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint  rc, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint  rc, GLubyte  r, GLubyte  g, GLubyte  b, GLubyte  a, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiColor4ubVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint * rc, const GLubyte * c, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiColor4ubVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiColor3fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * c, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiColor3fVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  a, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  s, GLfloat  t, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  s, GLfloat  t, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint  rc, GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  g, GLfloat  b, GLfloat  a, GLfloat  nx, GLfloat  ny, GLfloat  nz, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
  typedef void (* GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
  extern GLEEPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC GLeeFuncPtr_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;

/* GL_EXT_blend_func_separate */

/* Constants */
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum  sfactorRGB, GLenum  dfactorRGB, GLenum  sfactorAlpha, GLenum  dfactorAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEEXTPROC GLeeFuncPtr_glBlendFuncSeparateEXT;

/* GL_INGR_color_clamp */

/* Constants */

/* GL_INGR_interlace_read */

/* Constants */

/* GL_EXT_stencil_wrap */

/* Constants */

/* GL_EXT_422_pixels */

/* Constants */

/* GL_NV_texgen_reflection */

/* Constants */

/* GL_EXT_texture_cube_map */

/* Constants */

/* GL_SUN_convolution_border_modes */

/* Constants */

/* GL_EXT_texture_env_add */

/* Constants */

/* GL_EXT_texture_lod_bias */

/* Constants */

/* GL_EXT_texture_filter_anisotropic */

/* Constants */

/* GL_EXT_vertex_weighting */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXWEIGHTFEXTPROC) (GLfloat  weight);
  extern GLEEPFNGLVERTEXWEIGHTFEXTPROC GLeeFuncPtr_glVertexWeightfEXT;
  typedef void (* GLEEPFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat * weight);
  extern GLEEPFNGLVERTEXWEIGHTFVEXTPROC GLeeFuncPtr_glVertexWeightfvEXT;
  typedef void (* GLEEPFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXWEIGHTPOINTEREXTPROC GLeeFuncPtr_glVertexWeightPointerEXT;

/* GL_NV_light_max_exponent */

/* Constants */

/* GL_NV_vertex_array_range */

/* Constants */
  typedef void (* GLEEPFNGLFLUSHVERTEXARRAYRANGENVPROC) ();
  extern GLEEPFNGLFLUSHVERTEXARRAYRANGENVPROC GLeeFuncPtr_glFlushVertexArrayRangeNV;
  typedef void (* GLEEPFNGLVERTEXARRAYRANGENVPROC) (GLsizei  length, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXARRAYRANGENVPROC GLeeFuncPtr_glVertexArrayRangeNV;

/* GL_NV_register_combiners */

/* Constants */
  typedef void (* GLEEPFNGLCOMBINERPARAMETERFVNVPROC) (GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCOMBINERPARAMETERFVNVPROC GLeeFuncPtr_glCombinerParameterfvNV;
  typedef void (* GLEEPFNGLCOMBINERPARAMETERFNVPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLCOMBINERPARAMETERFNVPROC GLeeFuncPtr_glCombinerParameterfNV;
  typedef void (* GLEEPFNGLCOMBINERPARAMETERIVNVPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLCOMBINERPARAMETERIVNVPROC GLeeFuncPtr_glCombinerParameterivNV;
  typedef void (* GLEEPFNGLCOMBINERPARAMETERINVPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLCOMBINERPARAMETERINVPROC GLeeFuncPtr_glCombinerParameteriNV;
  typedef void (* GLEEPFNGLCOMBINERINPUTNVPROC) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  input, GLenum  mapping, GLenum  componentUsage);
  extern GLEEPFNGLCOMBINERINPUTNVPROC GLeeFuncPtr_glCombinerInputNV;
  typedef void (* GLEEPFNGLCOMBINEROUTPUTNVPROC) (GLenum  stage, GLenum  portion, GLenum  abOutput, GLenum  cdOutput, GLenum  sumOutput, GLenum  scale, GLenum  bias, GLboolean  abDotProduct, GLboolean  cdDotProduct, GLboolean  muxSum);
  extern GLEEPFNGLCOMBINEROUTPUTNVPROC GLeeFuncPtr_glCombinerOutputNV;
  typedef void (* GLEEPFNGLFINALCOMBINERINPUTNVPROC) (GLenum  variable, GLenum  input, GLenum  mapping, GLenum  componentUsage);
  extern GLEEPFNGLFINALCOMBINERINPUTNVPROC GLeeFuncPtr_glFinalCombinerInputNV;
  typedef void (* GLEEPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC GLeeFuncPtr_glGetCombinerInputParameterfvNV;
  typedef void (* GLEEPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC GLeeFuncPtr_glGetCombinerInputParameterivNV;
  typedef void (* GLEEPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum  stage, GLenum  portion, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC GLeeFuncPtr_glGetCombinerOutputParameterfvNV;
  typedef void (* GLEEPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum  stage, GLenum  portion, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC GLeeFuncPtr_glGetCombinerOutputParameterivNV;
  typedef void (* GLEEPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum  variable, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC GLeeFuncPtr_glGetFinalCombinerInputParameterfvNV;
  typedef void (* GLEEPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum  variable, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC GLeeFuncPtr_glGetFinalCombinerInputParameterivNV;

/* GL_NV_fog_distance */

/* Constants */

/* GL_NV_texgen_emboss */

/* Constants */

/* GL_NV_blend_square */

/* Constants */

/* GL_NV_texture_env_combine4 */

/* Constants */

/* GL_MESA_resize_buffers */

/* Constants */
  typedef void (* GLEEPFNGLRESIZEBUFFERSMESAPROC) ();
  extern GLEEPFNGLRESIZEBUFFERSMESAPROC GLeeFuncPtr_glResizeBuffersMESA;

/* GL_MESA_window_pos */

/* Constants */
  typedef void (* GLEEPFNGLWINDOWPOS2DMESAPROC) (GLdouble  x, GLdouble  y);
  extern GLEEPFNGLWINDOWPOS2DMESAPROC GLeeFuncPtr_glWindowPos2dMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2DVMESAPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS2DVMESAPROC GLeeFuncPtr_glWindowPos2dvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2FMESAPROC) (GLfloat  x, GLfloat  y);
  extern GLEEPFNGLWINDOWPOS2FMESAPROC GLeeFuncPtr_glWindowPos2fMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2FVMESAPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS2FVMESAPROC GLeeFuncPtr_glWindowPos2fvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2IMESAPROC) (GLint  x, GLint  y);
  extern GLEEPFNGLWINDOWPOS2IMESAPROC GLeeFuncPtr_glWindowPos2iMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2IVMESAPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS2IVMESAPROC GLeeFuncPtr_glWindowPos2ivMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2SMESAPROC) (GLshort  x, GLshort  y);
  extern GLEEPFNGLWINDOWPOS2SMESAPROC GLeeFuncPtr_glWindowPos2sMESA;
  typedef void (* GLEEPFNGLWINDOWPOS2SVMESAPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS2SVMESAPROC GLeeFuncPtr_glWindowPos2svMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3DMESAPROC) (GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLWINDOWPOS3DMESAPROC GLeeFuncPtr_glWindowPos3dMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3DVMESAPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS3DVMESAPROC GLeeFuncPtr_glWindowPos3dvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3FMESAPROC) (GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLWINDOWPOS3FMESAPROC GLeeFuncPtr_glWindowPos3fMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3FVMESAPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS3FVMESAPROC GLeeFuncPtr_glWindowPos3fvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3IMESAPROC) (GLint  x, GLint  y, GLint  z);
  extern GLEEPFNGLWINDOWPOS3IMESAPROC GLeeFuncPtr_glWindowPos3iMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3IVMESAPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS3IVMESAPROC GLeeFuncPtr_glWindowPos3ivMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3SMESAPROC) (GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLWINDOWPOS3SMESAPROC GLeeFuncPtr_glWindowPos3sMESA;
  typedef void (* GLEEPFNGLWINDOWPOS3SVMESAPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS3SVMESAPROC GLeeFuncPtr_glWindowPos3svMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4DMESAPROC) (GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLWINDOWPOS4DMESAPROC GLeeFuncPtr_glWindowPos4dMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4DVMESAPROC) (const GLdouble * v);
  extern GLEEPFNGLWINDOWPOS4DVMESAPROC GLeeFuncPtr_glWindowPos4dvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4FMESAPROC) (GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLWINDOWPOS4FMESAPROC GLeeFuncPtr_glWindowPos4fMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4FVMESAPROC) (const GLfloat * v);
  extern GLEEPFNGLWINDOWPOS4FVMESAPROC GLeeFuncPtr_glWindowPos4fvMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4IMESAPROC) (GLint  x, GLint  y, GLint  z, GLint  w);
  extern GLEEPFNGLWINDOWPOS4IMESAPROC GLeeFuncPtr_glWindowPos4iMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4IVMESAPROC) (const GLint * v);
  extern GLEEPFNGLWINDOWPOS4IVMESAPROC GLeeFuncPtr_glWindowPos4ivMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4SMESAPROC) (GLshort  x, GLshort  y, GLshort  z, GLshort  w);
  extern GLEEPFNGLWINDOWPOS4SMESAPROC GLeeFuncPtr_glWindowPos4sMESA;
  typedef void (* GLEEPFNGLWINDOWPOS4SVMESAPROC) (const GLshort * v);
  extern GLEEPFNGLWINDOWPOS4SVMESAPROC GLeeFuncPtr_glWindowPos4svMESA;

/* GL_EXT_texture_compression_s3tc */

/* Constants */

/* GL_IBM_cull_vertex */

/* Constants */

/* GL_IBM_multimode_draw_arrays */

/* Constants */
  typedef void (* GLEEPFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei  primcount, GLint  modestride);
  extern GLEEPFNGLMULTIMODEDRAWARRAYSIBMPROC GLeeFuncPtr_glMultiModeDrawArraysIBM;
  typedef void (* GLEEPFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum * mode, const GLsizei * count, GLenum  type, const GLvoid* const * indices, GLsizei  primcount, GLint  modestride);
  extern GLEEPFNGLMULTIMODEDRAWELEMENTSIBMPROC GLeeFuncPtr_glMultiModeDrawElementsIBM;

/* GL_IBM_vertex_array_lists */

/* Constants */
  typedef void (* GLEEPFNGLCOLORPOINTERLISTIBMPROC) (GLint  size, GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLCOLORPOINTERLISTIBMPROC GLeeFuncPtr_glColorPointerListIBM;
  typedef void (* GLEEPFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint  size, GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLSECONDARYCOLORPOINTERLISTIBMPROC GLeeFuncPtr_glSecondaryColorPointerListIBM;
  typedef void (* GLEEPFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint  stride, const GLboolean* * pointer, GLint  ptrstride);
  extern GLEEPFNGLEDGEFLAGPOINTERLISTIBMPROC GLeeFuncPtr_glEdgeFlagPointerListIBM;
  typedef void (* GLEEPFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLFOGCOORDPOINTERLISTIBMPROC GLeeFuncPtr_glFogCoordPointerListIBM;
  typedef void (* GLEEPFNGLINDEXPOINTERLISTIBMPROC) (GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLINDEXPOINTERLISTIBMPROC GLeeFuncPtr_glIndexPointerListIBM;
  typedef void (* GLEEPFNGLNORMALPOINTERLISTIBMPROC) (GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLNORMALPOINTERLISTIBMPROC GLeeFuncPtr_glNormalPointerListIBM;
  typedef void (* GLEEPFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint  size, GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLTEXCOORDPOINTERLISTIBMPROC GLeeFuncPtr_glTexCoordPointerListIBM;
  typedef void (* GLEEPFNGLVERTEXPOINTERLISTIBMPROC) (GLint  size, GLenum  type, GLint  stride, const GLvoid* * pointer, GLint  ptrstride);
  extern GLEEPFNGLVERTEXPOINTERLISTIBMPROC GLeeFuncPtr_glVertexPointerListIBM;

/* GL_SGIX_subsample */

/* Constants */

/* GL_SGIX_ycrcb_subsample */

/* Constants */

/* GL_SGIX_ycrcba */

/* Constants */

/* GL_SGI_depth_pass_instrument */

/* Constants */

/* GL_3DFX_texture_compression_FXT1 */

/* Constants */

/* GL_3DFX_multisample */

/* Constants */

/* GL_3DFX_tbuffer */

/* Constants */
  typedef void (* GLEEPFNGLTBUFFERMASK3DFXPROC) (GLuint  mask);
  extern GLEEPFNGLTBUFFERMASK3DFXPROC GLeeFuncPtr_glTbufferMask3DFX;

/* GL_EXT_multisample */

/* Constants */
  typedef void (* GLEEPFNGLSAMPLEMASKEXTPROC) (GLclampf  value, GLboolean  invert);
  extern GLEEPFNGLSAMPLEMASKEXTPROC GLeeFuncPtr_glSampleMaskEXT;
  typedef void (* GLEEPFNGLSAMPLEPATTERNEXTPROC) (GLenum  pattern);
  extern GLEEPFNGLSAMPLEPATTERNEXTPROC GLeeFuncPtr_glSamplePatternEXT;

/* GL_SGIX_vertex_preclip */

/* Constants */

/* GL_SGIX_convolution_accuracy */

/* Constants */

/* GL_SGIX_resample */

/* Constants */

/* GL_SGIS_point_line_texgen */

/* Constants */

/* GL_SGIS_texture_color_mask */

/* Constants */
  typedef void (* GLEEPFNGLTEXTURECOLORMASKSGISPROC) (GLboolean  red, GLboolean  green, GLboolean  blue, GLboolean  alpha);
  extern GLEEPFNGLTEXTURECOLORMASKSGISPROC GLeeFuncPtr_glTextureColorMaskSGIS;

/* GL_EXT_texture_env_dot3 */

/* Constants */

/* GL_ATI_texture_mirror_once */

/* Constants */

/* GL_NV_fence */

/* Constants */
  typedef void (* GLEEPFNGLDELETEFENCESNVPROC) (GLsizei  n, const GLuint * fences);
  extern GLEEPFNGLDELETEFENCESNVPROC GLeeFuncPtr_glDeleteFencesNV;
  typedef void (* GLEEPFNGLGENFENCESNVPROC) (GLsizei  n, GLuint * fences);
  extern GLEEPFNGLGENFENCESNVPROC GLeeFuncPtr_glGenFencesNV;
  typedef GLboolean (* GLEEPFNGLISFENCENVPROC) (GLuint  fence);
  extern GLEEPFNGLISFENCENVPROC GLeeFuncPtr_glIsFenceNV;
  typedef GLboolean (* GLEEPFNGLTESTFENCENVPROC) (GLuint  fence);
  extern GLEEPFNGLTESTFENCENVPROC GLeeFuncPtr_glTestFenceNV;
  typedef void (* GLEEPFNGLGETFENCEIVNVPROC) (GLuint  fence, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFENCEIVNVPROC GLeeFuncPtr_glGetFenceivNV;
  typedef void (* GLEEPFNGLFINISHFENCENVPROC) (GLuint  fence);
  extern GLEEPFNGLFINISHFENCENVPROC GLeeFuncPtr_glFinishFenceNV;
  typedef void (* GLEEPFNGLSETFENCENVPROC) (GLuint  fence, GLenum  condition);
  extern GLEEPFNGLSETFENCENVPROC GLeeFuncPtr_glSetFenceNV;

/* GL_IBM_texture_mirrored_repeat */

/* Constants */

/* GL_NV_evaluators */

/* Constants */
  typedef void (* GLEEPFNGLMAPCONTROLPOINTSNVPROC) (GLenum  target, GLuint  index, GLenum  type, GLsizei  ustride, GLsizei  vstride, GLint  uorder, GLint  vorder, GLboolean  packed, const GLvoid * points);
  extern GLEEPFNGLMAPCONTROLPOINTSNVPROC GLeeFuncPtr_glMapControlPointsNV;
  typedef void (* GLEEPFNGLMAPPARAMETERIVNVPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLMAPPARAMETERIVNVPROC GLeeFuncPtr_glMapParameterivNV;
  typedef void (* GLEEPFNGLMAPPARAMETERFVNVPROC) (GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLMAPPARAMETERFVNVPROC GLeeFuncPtr_glMapParameterfvNV;
  typedef void (* GLEEPFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum  target, GLuint  index, GLenum  type, GLsizei  ustride, GLsizei  vstride, GLboolean  packed, GLvoid * points);
  extern GLEEPFNGLGETMAPCONTROLPOINTSNVPROC GLeeFuncPtr_glGetMapControlPointsNV;
  typedef void (* GLEEPFNGLGETMAPPARAMETERIVNVPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMAPPARAMETERIVNVPROC GLeeFuncPtr_glGetMapParameterivNV;
  typedef void (* GLEEPFNGLGETMAPPARAMETERFVNVPROC) (GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMAPPARAMETERFVNVPROC GLeeFuncPtr_glGetMapParameterfvNV;
  typedef void (* GLEEPFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum  target, GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMAPATTRIBPARAMETERIVNVPROC GLeeFuncPtr_glGetMapAttribParameterivNV;
  typedef void (* GLEEPFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum  target, GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMAPATTRIBPARAMETERFVNVPROC GLeeFuncPtr_glGetMapAttribParameterfvNV;
  typedef void (* GLEEPFNGLEVALMAPSNVPROC) (GLenum  target, GLenum  mode);
  extern GLEEPFNGLEVALMAPSNVPROC GLeeFuncPtr_glEvalMapsNV;

/* GL_NV_packed_depth_stencil */

/* Constants */

/* GL_NV_register_combiners2 */

/* Constants */
  typedef void (* GLEEPFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum  stage, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLCOMBINERSTAGEPARAMETERFVNVPROC GLeeFuncPtr_glCombinerStageParameterfvNV;
  typedef void (* GLEEPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum  stage, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC GLeeFuncPtr_glGetCombinerStageParameterfvNV;

/* GL_NV_texture_compression_vtc */

/* Constants */

/* GL_NV_texture_rectangle */

/* Constants */

/* GL_NV_texture_shader */

/* Constants */

/* GL_NV_texture_shader2 */

/* Constants */

/* GL_NV_vertex_array_range2 */

/* Constants */

/* GL_NV_vertex_program */

/* Constants */
  typedef GLboolean (* GLEEPFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei  n, const GLuint * programs, GLboolean * residences);
  extern GLEEPFNGLAREPROGRAMSRESIDENTNVPROC GLeeFuncPtr_glAreProgramsResidentNV;
  typedef void (* GLEEPFNGLBINDPROGRAMNVPROC) (GLenum  target, GLuint  id);
  extern GLEEPFNGLBINDPROGRAMNVPROC GLeeFuncPtr_glBindProgramNV;
  typedef void (* GLEEPFNGLDELETEPROGRAMSNVPROC) (GLsizei  n, const GLuint * programs);
  extern GLEEPFNGLDELETEPROGRAMSNVPROC GLeeFuncPtr_glDeleteProgramsNV;
  typedef void (* GLEEPFNGLEXECUTEPROGRAMNVPROC) (GLenum  target, GLuint  id, const GLfloat * params);
  extern GLEEPFNGLEXECUTEPROGRAMNVPROC GLeeFuncPtr_glExecuteProgramNV;
  typedef void (* GLEEPFNGLGENPROGRAMSNVPROC) (GLsizei  n, GLuint * programs);
  extern GLEEPFNGLGENPROGRAMSNVPROC GLeeFuncPtr_glGenProgramsNV;
  typedef void (* GLEEPFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum  target, GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETPROGRAMPARAMETERDVNVPROC GLeeFuncPtr_glGetProgramParameterdvNV;
  typedef void (* GLEEPFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum  target, GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETPROGRAMPARAMETERFVNVPROC GLeeFuncPtr_glGetProgramParameterfvNV;
  typedef void (* GLEEPFNGLGETPROGRAMIVNVPROC) (GLuint  id, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETPROGRAMIVNVPROC GLeeFuncPtr_glGetProgramivNV;
  typedef void (* GLEEPFNGLGETPROGRAMSTRINGNVPROC) (GLuint  id, GLenum  pname, GLubyte * program);
  extern GLEEPFNGLGETPROGRAMSTRINGNVPROC GLeeFuncPtr_glGetProgramStringNV;
  typedef void (* GLEEPFNGLGETTRACKMATRIXIVNVPROC) (GLenum  target, GLuint  address, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTRACKMATRIXIVNVPROC GLeeFuncPtr_glGetTrackMatrixivNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBDVNVPROC) (GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVERTEXATTRIBDVNVPROC GLeeFuncPtr_glGetVertexAttribdvNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBFVNVPROC) (GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVERTEXATTRIBFVNVPROC GLeeFuncPtr_glGetVertexAttribfvNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBIVNVPROC) (GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVERTEXATTRIBIVNVPROC GLeeFuncPtr_glGetVertexAttribivNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint  index, GLenum  pname, GLvoid* * pointer);
  extern GLEEPFNGLGETVERTEXATTRIBPOINTERVNVPROC GLeeFuncPtr_glGetVertexAttribPointervNV;
  typedef GLboolean (* GLEEPFNGLISPROGRAMNVPROC) (GLuint  id);
  extern GLEEPFNGLISPROGRAMNVPROC GLeeFuncPtr_glIsProgramNV;
  typedef void (* GLEEPFNGLLOADPROGRAMNVPROC) (GLenum  target, GLuint  id, GLsizei  len, const GLubyte * program);
  extern GLEEPFNGLLOADPROGRAMNVPROC GLeeFuncPtr_glLoadProgramNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETER4DNVPROC) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLPROGRAMPARAMETER4DNVPROC GLeeFuncPtr_glProgramParameter4dNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum  target, GLuint  index, const GLdouble * v);
  extern GLEEPFNGLPROGRAMPARAMETER4DVNVPROC GLeeFuncPtr_glProgramParameter4dvNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETER4FNVPROC) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLPROGRAMPARAMETER4FNVPROC GLeeFuncPtr_glProgramParameter4fNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum  target, GLuint  index, const GLfloat * v);
  extern GLEEPFNGLPROGRAMPARAMETER4FVNVPROC GLeeFuncPtr_glProgramParameter4fvNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum  target, GLuint  index, GLsizei  count, const GLdouble * v);
  extern GLEEPFNGLPROGRAMPARAMETERS4DVNVPROC GLeeFuncPtr_glProgramParameters4dvNV;
  typedef void (* GLEEPFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLPROGRAMPARAMETERS4FVNVPROC GLeeFuncPtr_glProgramParameters4fvNV;
  typedef void (* GLEEPFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei  n, const GLuint * programs);
  extern GLEEPFNGLREQUESTRESIDENTPROGRAMSNVPROC GLeeFuncPtr_glRequestResidentProgramsNV;
  typedef void (* GLEEPFNGLTRACKMATRIXNVPROC) (GLenum  target, GLuint  address, GLenum  matrix, GLenum  transform);
  extern GLEEPFNGLTRACKMATRIXNVPROC GLeeFuncPtr_glTrackMatrixNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint  index, GLint  fsize, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBPOINTERNVPROC GLeeFuncPtr_glVertexAttribPointerNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1DNVPROC) (GLuint  index, GLdouble  x);
  extern GLEEPFNGLVERTEXATTRIB1DNVPROC GLeeFuncPtr_glVertexAttrib1dNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1DVNVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB1DVNVPROC GLeeFuncPtr_glVertexAttrib1dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FNVPROC) (GLuint  index, GLfloat  x);
  extern GLEEPFNGLVERTEXATTRIB1FNVPROC GLeeFuncPtr_glVertexAttrib1fNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1FVNVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB1FVNVPROC GLeeFuncPtr_glVertexAttrib1fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SNVPROC) (GLuint  index, GLshort  x);
  extern GLEEPFNGLVERTEXATTRIB1SNVPROC GLeeFuncPtr_glVertexAttrib1sNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1SVNVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB1SVNVPROC GLeeFuncPtr_glVertexAttrib1svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DNVPROC) (GLuint  index, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXATTRIB2DNVPROC GLeeFuncPtr_glVertexAttrib2dNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2DVNVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB2DVNVPROC GLeeFuncPtr_glVertexAttrib2dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FNVPROC) (GLuint  index, GLfloat  x, GLfloat  y);
  extern GLEEPFNGLVERTEXATTRIB2FNVPROC GLeeFuncPtr_glVertexAttrib2fNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2FVNVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB2FVNVPROC GLeeFuncPtr_glVertexAttrib2fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SNVPROC) (GLuint  index, GLshort  x, GLshort  y);
  extern GLEEPFNGLVERTEXATTRIB2SNVPROC GLeeFuncPtr_glVertexAttrib2sNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2SVNVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB2SVNVPROC GLeeFuncPtr_glVertexAttrib2svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DNVPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXATTRIB3DNVPROC GLeeFuncPtr_glVertexAttrib3dNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3DVNVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB3DVNVPROC GLeeFuncPtr_glVertexAttrib3dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FNVPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLVERTEXATTRIB3FNVPROC GLeeFuncPtr_glVertexAttrib3fNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3FVNVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB3FVNVPROC GLeeFuncPtr_glVertexAttrib3fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SNVPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLVERTEXATTRIB3SNVPROC GLeeFuncPtr_glVertexAttrib3sNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3SVNVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB3SVNVPROC GLeeFuncPtr_glVertexAttrib3svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DNVPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXATTRIB4DNVPROC GLeeFuncPtr_glVertexAttrib4dNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4DVNVPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIB4DVNVPROC GLeeFuncPtr_glVertexAttrib4dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FNVPROC) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLVERTEXATTRIB4FNVPROC GLeeFuncPtr_glVertexAttrib4fNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4FVNVPROC) (GLuint  index, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIB4FVNVPROC GLeeFuncPtr_glVertexAttrib4fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SNVPROC) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w);
  extern GLEEPFNGLVERTEXATTRIB4SNVPROC GLeeFuncPtr_glVertexAttrib4sNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4SVNVPROC) (GLuint  index, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIB4SVNVPROC GLeeFuncPtr_glVertexAttrib4svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UBNVPROC) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w);
  extern GLEEPFNGLVERTEXATTRIB4UBNVPROC GLeeFuncPtr_glVertexAttrib4ubNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4UBVNVPROC) (GLuint  index, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIB4UBVNVPROC GLeeFuncPtr_glVertexAttrib4ubvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS1DVNVPROC) (GLuint  index, GLsizei  count, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBS1DVNVPROC GLeeFuncPtr_glVertexAttribs1dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS1FVNVPROC) (GLuint  index, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIBS1FVNVPROC GLeeFuncPtr_glVertexAttribs1fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS1SVNVPROC) (GLuint  index, GLsizei  count, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIBS1SVNVPROC GLeeFuncPtr_glVertexAttribs1svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS2DVNVPROC) (GLuint  index, GLsizei  count, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBS2DVNVPROC GLeeFuncPtr_glVertexAttribs2dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS2FVNVPROC) (GLuint  index, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIBS2FVNVPROC GLeeFuncPtr_glVertexAttribs2fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS2SVNVPROC) (GLuint  index, GLsizei  count, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIBS2SVNVPROC GLeeFuncPtr_glVertexAttribs2svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS3DVNVPROC) (GLuint  index, GLsizei  count, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBS3DVNVPROC GLeeFuncPtr_glVertexAttribs3dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS3FVNVPROC) (GLuint  index, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIBS3FVNVPROC GLeeFuncPtr_glVertexAttribs3fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS3SVNVPROC) (GLuint  index, GLsizei  count, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIBS3SVNVPROC GLeeFuncPtr_glVertexAttribs3svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS4DVNVPROC) (GLuint  index, GLsizei  count, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBS4DVNVPROC GLeeFuncPtr_glVertexAttribs4dvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS4FVNVPROC) (GLuint  index, GLsizei  count, const GLfloat * v);
  extern GLEEPFNGLVERTEXATTRIBS4FVNVPROC GLeeFuncPtr_glVertexAttribs4fvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS4SVNVPROC) (GLuint  index, GLsizei  count, const GLshort * v);
  extern GLEEPFNGLVERTEXATTRIBS4SVNVPROC GLeeFuncPtr_glVertexAttribs4svNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint  index, GLsizei  count, const GLubyte * v);
  extern GLEEPFNGLVERTEXATTRIBS4UBVNVPROC GLeeFuncPtr_glVertexAttribs4ubvNV;

/* GL_SGIX_texture_coordinate_clamp */

/* Constants */

/* GL_SGIX_scalebias_hint */

/* Constants */

/* GL_OML_interlace */

/* Constants */

/* GL_OML_subsample */

/* Constants */

/* GL_OML_resample */

/* Constants */

/* GL_NV_copy_depth_to_color */

/* Constants */

/* GL_ATI_envmap_bumpmap */

/* Constants */
  typedef void (* GLEEPFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum  pname, const GLint * param);
  extern GLEEPFNGLTEXBUMPPARAMETERIVATIPROC GLeeFuncPtr_glTexBumpParameterivATI;
  typedef void (* GLEEPFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum  pname, const GLfloat * param);
  extern GLEEPFNGLTEXBUMPPARAMETERFVATIPROC GLeeFuncPtr_glTexBumpParameterfvATI;
  typedef void (* GLEEPFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum  pname, GLint * param);
  extern GLEEPFNGLGETTEXBUMPPARAMETERIVATIPROC GLeeFuncPtr_glGetTexBumpParameterivATI;
  typedef void (* GLEEPFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum  pname, GLfloat * param);
  extern GLEEPFNGLGETTEXBUMPPARAMETERFVATIPROC GLeeFuncPtr_glGetTexBumpParameterfvATI;

/* GL_ATI_fragment_shader */

/* Constants */
  typedef GLuint (* GLEEPFNGLGENFRAGMENTSHADERSATIPROC) (GLuint  range);
  extern GLEEPFNGLGENFRAGMENTSHADERSATIPROC GLeeFuncPtr_glGenFragmentShadersATI;
  typedef void (* GLEEPFNGLBINDFRAGMENTSHADERATIPROC) (GLuint  id);
  extern GLEEPFNGLBINDFRAGMENTSHADERATIPROC GLeeFuncPtr_glBindFragmentShaderATI;
  typedef void (* GLEEPFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint  id);
  extern GLEEPFNGLDELETEFRAGMENTSHADERATIPROC GLeeFuncPtr_glDeleteFragmentShaderATI;
  typedef void (* GLEEPFNGLBEGINFRAGMENTSHADERATIPROC) ();
  extern GLEEPFNGLBEGINFRAGMENTSHADERATIPROC GLeeFuncPtr_glBeginFragmentShaderATI;
  typedef void (* GLEEPFNGLENDFRAGMENTSHADERATIPROC) ();
  extern GLEEPFNGLENDFRAGMENTSHADERATIPROC GLeeFuncPtr_glEndFragmentShaderATI;
  typedef void (* GLEEPFNGLPASSTEXCOORDATIPROC) (GLuint  dst, GLuint  coord, GLenum  swizzle);
  extern GLEEPFNGLPASSTEXCOORDATIPROC GLeeFuncPtr_glPassTexCoordATI;
  typedef void (* GLEEPFNGLSAMPLEMAPATIPROC) (GLuint  dst, GLuint  interp, GLenum  swizzle);
  extern GLEEPFNGLSAMPLEMAPATIPROC GLeeFuncPtr_glSampleMapATI;
  typedef void (* GLEEPFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMask, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod);
  extern GLEEPFNGLCOLORFRAGMENTOP1ATIPROC GLeeFuncPtr_glColorFragmentOp1ATI;
  typedef void (* GLEEPFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMask, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod, GLuint  arg2, GLuint  arg2Rep, GLuint  arg2Mod);
  extern GLEEPFNGLCOLORFRAGMENTOP2ATIPROC GLeeFuncPtr_glColorFragmentOp2ATI;
  typedef void (* GLEEPFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMask, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod, GLuint  arg2, GLuint  arg2Rep, GLuint  arg2Mod, GLuint  arg3, GLuint  arg3Rep, GLuint  arg3Mod);
  extern GLEEPFNGLCOLORFRAGMENTOP3ATIPROC GLeeFuncPtr_glColorFragmentOp3ATI;
  typedef void (* GLEEPFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod);
  extern GLEEPFNGLALPHAFRAGMENTOP1ATIPROC GLeeFuncPtr_glAlphaFragmentOp1ATI;
  typedef void (* GLEEPFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod, GLuint  arg2, GLuint  arg2Rep, GLuint  arg2Mod);
  extern GLEEPFNGLALPHAFRAGMENTOP2ATIPROC GLeeFuncPtr_glAlphaFragmentOp2ATI;
  typedef void (* GLEEPFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum  op, GLuint  dst, GLuint  dstMod, GLuint  arg1, GLuint  arg1Rep, GLuint  arg1Mod, GLuint  arg2, GLuint  arg2Rep, GLuint  arg2Mod, GLuint  arg3, GLuint  arg3Rep, GLuint  arg3Mod);
  extern GLEEPFNGLALPHAFRAGMENTOP3ATIPROC GLeeFuncPtr_glAlphaFragmentOp3ATI;
  typedef void (* GLEEPFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint  dst, const GLfloat * value);
  extern GLEEPFNGLSETFRAGMENTSHADERCONSTANTATIPROC GLeeFuncPtr_glSetFragmentShaderConstantATI;

/* GL_ATI_pn_triangles */

/* Constants */
  typedef void (* GLEEPFNGLPNTRIANGLESIATIPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLPNTRIANGLESIATIPROC GLeeFuncPtr_glPNTrianglesiATI;
  typedef void (* GLEEPFNGLPNTRIANGLESFATIPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLPNTRIANGLESFATIPROC GLeeFuncPtr_glPNTrianglesfATI;

/* GL_ATI_vertex_array_object */

/* Constants */
  typedef GLuint (* GLEEPFNGLNEWOBJECTBUFFERATIPROC) (GLsizei  size, const GLvoid * pointer, GLenum  usage);
  extern GLEEPFNGLNEWOBJECTBUFFERATIPROC GLeeFuncPtr_glNewObjectBufferATI;
  typedef GLboolean (* GLEEPFNGLISOBJECTBUFFERATIPROC) (GLuint  buffer);
  extern GLEEPFNGLISOBJECTBUFFERATIPROC GLeeFuncPtr_glIsObjectBufferATI;
  typedef void (* GLEEPFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint  buffer, GLuint  offset, GLsizei  size, const GLvoid * pointer, GLenum  preserve);
  extern GLEEPFNGLUPDATEOBJECTBUFFERATIPROC GLeeFuncPtr_glUpdateObjectBufferATI;
  typedef void (* GLEEPFNGLGETOBJECTBUFFERFVATIPROC) (GLuint  buffer, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETOBJECTBUFFERFVATIPROC GLeeFuncPtr_glGetObjectBufferfvATI;
  typedef void (* GLEEPFNGLGETOBJECTBUFFERIVATIPROC) (GLuint  buffer, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETOBJECTBUFFERIVATIPROC GLeeFuncPtr_glGetObjectBufferivATI;
  typedef void (* GLEEPFNGLFREEOBJECTBUFFERATIPROC) (GLuint  buffer);
  extern GLEEPFNGLFREEOBJECTBUFFERATIPROC GLeeFuncPtr_glFreeObjectBufferATI;
  typedef void (* GLEEPFNGLARRAYOBJECTATIPROC) (GLenum  array, GLint  size, GLenum  type, GLsizei  stride, GLuint  buffer, GLuint  offset);
  extern GLEEPFNGLARRAYOBJECTATIPROC GLeeFuncPtr_glArrayObjectATI;
  typedef void (* GLEEPFNGLGETARRAYOBJECTFVATIPROC) (GLenum  array, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETARRAYOBJECTFVATIPROC GLeeFuncPtr_glGetArrayObjectfvATI;
  typedef void (* GLEEPFNGLGETARRAYOBJECTIVATIPROC) (GLenum  array, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETARRAYOBJECTIVATIPROC GLeeFuncPtr_glGetArrayObjectivATI;
  typedef void (* GLEEPFNGLVARIANTARRAYOBJECTATIPROC) (GLuint  id, GLenum  type, GLsizei  stride, GLuint  buffer, GLuint  offset);
  extern GLEEPFNGLVARIANTARRAYOBJECTATIPROC GLeeFuncPtr_glVariantArrayObjectATI;
  typedef void (* GLEEPFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint  id, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVARIANTARRAYOBJECTFVATIPROC GLeeFuncPtr_glGetVariantArrayObjectfvATI;
  typedef void (* GLEEPFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint  id, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVARIANTARRAYOBJECTIVATIPROC GLeeFuncPtr_glGetVariantArrayObjectivATI;

/* GL_EXT_vertex_shader */

/* Constants */
  typedef void (* GLEEPFNGLBEGINVERTEXSHADEREXTPROC) ();
  extern GLEEPFNGLBEGINVERTEXSHADEREXTPROC GLeeFuncPtr_glBeginVertexShaderEXT;
  typedef void (* GLEEPFNGLENDVERTEXSHADEREXTPROC) ();
  extern GLEEPFNGLENDVERTEXSHADEREXTPROC GLeeFuncPtr_glEndVertexShaderEXT;
  typedef void (* GLEEPFNGLBINDVERTEXSHADEREXTPROC) (GLuint  id);
  extern GLEEPFNGLBINDVERTEXSHADEREXTPROC GLeeFuncPtr_glBindVertexShaderEXT;
  typedef GLuint (* GLEEPFNGLGENVERTEXSHADERSEXTPROC) (GLuint  range);
  extern GLEEPFNGLGENVERTEXSHADERSEXTPROC GLeeFuncPtr_glGenVertexShadersEXT;
  typedef void (* GLEEPFNGLDELETEVERTEXSHADEREXTPROC) (GLuint  id);
  extern GLEEPFNGLDELETEVERTEXSHADEREXTPROC GLeeFuncPtr_glDeleteVertexShaderEXT;
  typedef void (* GLEEPFNGLSHADEROP1EXTPROC) (GLenum  op, GLuint  res, GLuint  arg1);
  extern GLEEPFNGLSHADEROP1EXTPROC GLeeFuncPtr_glShaderOp1EXT;
  typedef void (* GLEEPFNGLSHADEROP2EXTPROC) (GLenum  op, GLuint  res, GLuint  arg1, GLuint  arg2);
  extern GLEEPFNGLSHADEROP2EXTPROC GLeeFuncPtr_glShaderOp2EXT;
  typedef void (* GLEEPFNGLSHADEROP3EXTPROC) (GLenum  op, GLuint  res, GLuint  arg1, GLuint  arg2, GLuint  arg3);
  extern GLEEPFNGLSHADEROP3EXTPROC GLeeFuncPtr_glShaderOp3EXT;
  typedef void (* GLEEPFNGLSWIZZLEEXTPROC) (GLuint  res, GLuint  in, GLenum  outX, GLenum  outY, GLenum  outZ, GLenum  outW);
  extern GLEEPFNGLSWIZZLEEXTPROC GLeeFuncPtr_glSwizzleEXT;
  typedef void (* GLEEPFNGLWRITEMASKEXTPROC) (GLuint  res, GLuint  in, GLenum  outX, GLenum  outY, GLenum  outZ, GLenum  outW);
  extern GLEEPFNGLWRITEMASKEXTPROC GLeeFuncPtr_glWriteMaskEXT;
  typedef void (* GLEEPFNGLINSERTCOMPONENTEXTPROC) (GLuint  res, GLuint  src, GLuint  num);
  extern GLEEPFNGLINSERTCOMPONENTEXTPROC GLeeFuncPtr_glInsertComponentEXT;
  typedef void (* GLEEPFNGLEXTRACTCOMPONENTEXTPROC) (GLuint  res, GLuint  src, GLuint  num);
  extern GLEEPFNGLEXTRACTCOMPONENTEXTPROC GLeeFuncPtr_glExtractComponentEXT;
  typedef GLuint (* GLEEPFNGLGENSYMBOLSEXTPROC) (GLenum  datatype, GLenum  storagetype, GLenum  range, GLuint  components);
  extern GLEEPFNGLGENSYMBOLSEXTPROC GLeeFuncPtr_glGenSymbolsEXT;
  typedef void (* GLEEPFNGLSETINVARIANTEXTPROC) (GLuint  id, GLenum  type, const GLvoid * addr);
  extern GLEEPFNGLSETINVARIANTEXTPROC GLeeFuncPtr_glSetInvariantEXT;
  typedef void (* GLEEPFNGLSETLOCALCONSTANTEXTPROC) (GLuint  id, GLenum  type, const GLvoid * addr);
  extern GLEEPFNGLSETLOCALCONSTANTEXTPROC GLeeFuncPtr_glSetLocalConstantEXT;
  typedef void (* GLEEPFNGLVARIANTBVEXTPROC) (GLuint  id, const GLbyte * addr);
  extern GLEEPFNGLVARIANTBVEXTPROC GLeeFuncPtr_glVariantbvEXT;
  typedef void (* GLEEPFNGLVARIANTSVEXTPROC) (GLuint  id, const GLshort * addr);
  extern GLEEPFNGLVARIANTSVEXTPROC GLeeFuncPtr_glVariantsvEXT;
  typedef void (* GLEEPFNGLVARIANTIVEXTPROC) (GLuint  id, const GLint * addr);
  extern GLEEPFNGLVARIANTIVEXTPROC GLeeFuncPtr_glVariantivEXT;
  typedef void (* GLEEPFNGLVARIANTFVEXTPROC) (GLuint  id, const GLfloat * addr);
  extern GLEEPFNGLVARIANTFVEXTPROC GLeeFuncPtr_glVariantfvEXT;
  typedef void (* GLEEPFNGLVARIANTDVEXTPROC) (GLuint  id, const GLdouble * addr);
  extern GLEEPFNGLVARIANTDVEXTPROC GLeeFuncPtr_glVariantdvEXT;
  typedef void (* GLEEPFNGLVARIANTUBVEXTPROC) (GLuint  id, const GLubyte * addr);
  extern GLEEPFNGLVARIANTUBVEXTPROC GLeeFuncPtr_glVariantubvEXT;
  typedef void (* GLEEPFNGLVARIANTUSVEXTPROC) (GLuint  id, const GLushort * addr);
  extern GLEEPFNGLVARIANTUSVEXTPROC GLeeFuncPtr_glVariantusvEXT;
  typedef void (* GLEEPFNGLVARIANTUIVEXTPROC) (GLuint  id, const GLuint * addr);
  extern GLEEPFNGLVARIANTUIVEXTPROC GLeeFuncPtr_glVariantuivEXT;
  typedef void (* GLEEPFNGLVARIANTPOINTEREXTPROC) (GLuint  id, GLenum  type, GLuint  stride, const GLvoid * addr);
  extern GLEEPFNGLVARIANTPOINTEREXTPROC GLeeFuncPtr_glVariantPointerEXT;
  typedef void (* GLEEPFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint  id);
  extern GLEEPFNGLENABLEVARIANTCLIENTSTATEEXTPROC GLeeFuncPtr_glEnableVariantClientStateEXT;
  typedef void (* GLEEPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint  id);
  extern GLEEPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC GLeeFuncPtr_glDisableVariantClientStateEXT;
  typedef GLuint (* GLEEPFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum  light, GLenum  value);
  extern GLEEPFNGLBINDLIGHTPARAMETEREXTPROC GLeeFuncPtr_glBindLightParameterEXT;
  typedef GLuint (* GLEEPFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum  face, GLenum  value);
  extern GLEEPFNGLBINDMATERIALPARAMETEREXTPROC GLeeFuncPtr_glBindMaterialParameterEXT;
  typedef GLuint (* GLEEPFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum  unit, GLenum  coord, GLenum  value);
  extern GLEEPFNGLBINDTEXGENPARAMETEREXTPROC GLeeFuncPtr_glBindTexGenParameterEXT;
  typedef GLuint (* GLEEPFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum  unit, GLenum  value);
  extern GLEEPFNGLBINDTEXTUREUNITPARAMETEREXTPROC GLeeFuncPtr_glBindTextureUnitParameterEXT;
  typedef GLuint (* GLEEPFNGLBINDPARAMETEREXTPROC) (GLenum  value);
  extern GLEEPFNGLBINDPARAMETEREXTPROC GLeeFuncPtr_glBindParameterEXT;
  typedef GLboolean (* GLEEPFNGLISVARIANTENABLEDEXTPROC) (GLuint  id, GLenum  cap);
  extern GLEEPFNGLISVARIANTENABLEDEXTPROC GLeeFuncPtr_glIsVariantEnabledEXT;
  typedef void (* GLEEPFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint  id, GLenum  value, GLboolean * data);
  extern GLEEPFNGLGETVARIANTBOOLEANVEXTPROC GLeeFuncPtr_glGetVariantBooleanvEXT;
  typedef void (* GLEEPFNGLGETVARIANTINTEGERVEXTPROC) (GLuint  id, GLenum  value, GLint * data);
  extern GLEEPFNGLGETVARIANTINTEGERVEXTPROC GLeeFuncPtr_glGetVariantIntegervEXT;
  typedef void (* GLEEPFNGLGETVARIANTFLOATVEXTPROC) (GLuint  id, GLenum  value, GLfloat * data);
  extern GLEEPFNGLGETVARIANTFLOATVEXTPROC GLeeFuncPtr_glGetVariantFloatvEXT;
  typedef void (* GLEEPFNGLGETVARIANTPOINTERVEXTPROC) (GLuint  id, GLenum  value, GLvoid* * data);
  extern GLEEPFNGLGETVARIANTPOINTERVEXTPROC GLeeFuncPtr_glGetVariantPointervEXT;
  typedef void (* GLEEPFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint  id, GLenum  value, GLboolean * data);
  extern GLEEPFNGLGETINVARIANTBOOLEANVEXTPROC GLeeFuncPtr_glGetInvariantBooleanvEXT;
  typedef void (* GLEEPFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint  id, GLenum  value, GLint * data);
  extern GLEEPFNGLGETINVARIANTINTEGERVEXTPROC GLeeFuncPtr_glGetInvariantIntegervEXT;
  typedef void (* GLEEPFNGLGETINVARIANTFLOATVEXTPROC) (GLuint  id, GLenum  value, GLfloat * data);
  extern GLEEPFNGLGETINVARIANTFLOATVEXTPROC GLeeFuncPtr_glGetInvariantFloatvEXT;
  typedef void (* GLEEPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint  id, GLenum  value, GLboolean * data);
  extern GLEEPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC GLeeFuncPtr_glGetLocalConstantBooleanvEXT;
  typedef void (* GLEEPFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint  id, GLenum  value, GLint * data);
  extern GLEEPFNGLGETLOCALCONSTANTINTEGERVEXTPROC GLeeFuncPtr_glGetLocalConstantIntegervEXT;
  typedef void (* GLEEPFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint  id, GLenum  value, GLfloat * data);
  extern GLEEPFNGLGETLOCALCONSTANTFLOATVEXTPROC GLeeFuncPtr_glGetLocalConstantFloatvEXT;

/* GL_ATI_vertex_streams */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXSTREAM1SATIPROC) (GLenum  stream, GLshort  x);
  extern GLEEPFNGLVERTEXSTREAM1SATIPROC GLeeFuncPtr_glVertexStream1sATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1SVATIPROC) (GLenum  stream, const GLshort * coords);
  extern GLEEPFNGLVERTEXSTREAM1SVATIPROC GLeeFuncPtr_glVertexStream1svATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1IATIPROC) (GLenum  stream, GLint  x);
  extern GLEEPFNGLVERTEXSTREAM1IATIPROC GLeeFuncPtr_glVertexStream1iATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1IVATIPROC) (GLenum  stream, const GLint * coords);
  extern GLEEPFNGLVERTEXSTREAM1IVATIPROC GLeeFuncPtr_glVertexStream1ivATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1FATIPROC) (GLenum  stream, GLfloat  x);
  extern GLEEPFNGLVERTEXSTREAM1FATIPROC GLeeFuncPtr_glVertexStream1fATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1FVATIPROC) (GLenum  stream, const GLfloat * coords);
  extern GLEEPFNGLVERTEXSTREAM1FVATIPROC GLeeFuncPtr_glVertexStream1fvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1DATIPROC) (GLenum  stream, GLdouble  x);
  extern GLEEPFNGLVERTEXSTREAM1DATIPROC GLeeFuncPtr_glVertexStream1dATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM1DVATIPROC) (GLenum  stream, const GLdouble * coords);
  extern GLEEPFNGLVERTEXSTREAM1DVATIPROC GLeeFuncPtr_glVertexStream1dvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2SATIPROC) (GLenum  stream, GLshort  x, GLshort  y);
  extern GLEEPFNGLVERTEXSTREAM2SATIPROC GLeeFuncPtr_glVertexStream2sATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2SVATIPROC) (GLenum  stream, const GLshort * coords);
  extern GLEEPFNGLVERTEXSTREAM2SVATIPROC GLeeFuncPtr_glVertexStream2svATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2IATIPROC) (GLenum  stream, GLint  x, GLint  y);
  extern GLEEPFNGLVERTEXSTREAM2IATIPROC GLeeFuncPtr_glVertexStream2iATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2IVATIPROC) (GLenum  stream, const GLint * coords);
  extern GLEEPFNGLVERTEXSTREAM2IVATIPROC GLeeFuncPtr_glVertexStream2ivATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2FATIPROC) (GLenum  stream, GLfloat  x, GLfloat  y);
  extern GLEEPFNGLVERTEXSTREAM2FATIPROC GLeeFuncPtr_glVertexStream2fATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2FVATIPROC) (GLenum  stream, const GLfloat * coords);
  extern GLEEPFNGLVERTEXSTREAM2FVATIPROC GLeeFuncPtr_glVertexStream2fvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2DATIPROC) (GLenum  stream, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXSTREAM2DATIPROC GLeeFuncPtr_glVertexStream2dATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM2DVATIPROC) (GLenum  stream, const GLdouble * coords);
  extern GLEEPFNGLVERTEXSTREAM2DVATIPROC GLeeFuncPtr_glVertexStream2dvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3SATIPROC) (GLenum  stream, GLshort  x, GLshort  y, GLshort  z);
  extern GLEEPFNGLVERTEXSTREAM3SATIPROC GLeeFuncPtr_glVertexStream3sATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3SVATIPROC) (GLenum  stream, const GLshort * coords);
  extern GLEEPFNGLVERTEXSTREAM3SVATIPROC GLeeFuncPtr_glVertexStream3svATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3IATIPROC) (GLenum  stream, GLint  x, GLint  y, GLint  z);
  extern GLEEPFNGLVERTEXSTREAM3IATIPROC GLeeFuncPtr_glVertexStream3iATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3IVATIPROC) (GLenum  stream, const GLint * coords);
  extern GLEEPFNGLVERTEXSTREAM3IVATIPROC GLeeFuncPtr_glVertexStream3ivATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3FATIPROC) (GLenum  stream, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLVERTEXSTREAM3FATIPROC GLeeFuncPtr_glVertexStream3fATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3FVATIPROC) (GLenum  stream, const GLfloat * coords);
  extern GLEEPFNGLVERTEXSTREAM3FVATIPROC GLeeFuncPtr_glVertexStream3fvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3DATIPROC) (GLenum  stream, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXSTREAM3DATIPROC GLeeFuncPtr_glVertexStream3dATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM3DVATIPROC) (GLenum  stream, const GLdouble * coords);
  extern GLEEPFNGLVERTEXSTREAM3DVATIPROC GLeeFuncPtr_glVertexStream3dvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4SATIPROC) (GLenum  stream, GLshort  x, GLshort  y, GLshort  z, GLshort  w);
  extern GLEEPFNGLVERTEXSTREAM4SATIPROC GLeeFuncPtr_glVertexStream4sATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4SVATIPROC) (GLenum  stream, const GLshort * coords);
  extern GLEEPFNGLVERTEXSTREAM4SVATIPROC GLeeFuncPtr_glVertexStream4svATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4IATIPROC) (GLenum  stream, GLint  x, GLint  y, GLint  z, GLint  w);
  extern GLEEPFNGLVERTEXSTREAM4IATIPROC GLeeFuncPtr_glVertexStream4iATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4IVATIPROC) (GLenum  stream, const GLint * coords);
  extern GLEEPFNGLVERTEXSTREAM4IVATIPROC GLeeFuncPtr_glVertexStream4ivATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4FATIPROC) (GLenum  stream, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLVERTEXSTREAM4FATIPROC GLeeFuncPtr_glVertexStream4fATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4FVATIPROC) (GLenum  stream, const GLfloat * coords);
  extern GLEEPFNGLVERTEXSTREAM4FVATIPROC GLeeFuncPtr_glVertexStream4fvATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4DATIPROC) (GLenum  stream, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXSTREAM4DATIPROC GLeeFuncPtr_glVertexStream4dATI;
  typedef void (* GLEEPFNGLVERTEXSTREAM4DVATIPROC) (GLenum  stream, const GLdouble * coords);
  extern GLEEPFNGLVERTEXSTREAM4DVATIPROC GLeeFuncPtr_glVertexStream4dvATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3BATIPROC) (GLenum  stream, GLbyte  nx, GLbyte  ny, GLbyte  nz);
  extern GLEEPFNGLNORMALSTREAM3BATIPROC GLeeFuncPtr_glNormalStream3bATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3BVATIPROC) (GLenum  stream, const GLbyte * coords);
  extern GLEEPFNGLNORMALSTREAM3BVATIPROC GLeeFuncPtr_glNormalStream3bvATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3SATIPROC) (GLenum  stream, GLshort  nx, GLshort  ny, GLshort  nz);
  extern GLEEPFNGLNORMALSTREAM3SATIPROC GLeeFuncPtr_glNormalStream3sATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3SVATIPROC) (GLenum  stream, const GLshort * coords);
  extern GLEEPFNGLNORMALSTREAM3SVATIPROC GLeeFuncPtr_glNormalStream3svATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3IATIPROC) (GLenum  stream, GLint  nx, GLint  ny, GLint  nz);
  extern GLEEPFNGLNORMALSTREAM3IATIPROC GLeeFuncPtr_glNormalStream3iATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3IVATIPROC) (GLenum  stream, const GLint * coords);
  extern GLEEPFNGLNORMALSTREAM3IVATIPROC GLeeFuncPtr_glNormalStream3ivATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3FATIPROC) (GLenum  stream, GLfloat  nx, GLfloat  ny, GLfloat  nz);
  extern GLEEPFNGLNORMALSTREAM3FATIPROC GLeeFuncPtr_glNormalStream3fATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3FVATIPROC) (GLenum  stream, const GLfloat * coords);
  extern GLEEPFNGLNORMALSTREAM3FVATIPROC GLeeFuncPtr_glNormalStream3fvATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3DATIPROC) (GLenum  stream, GLdouble  nx, GLdouble  ny, GLdouble  nz);
  extern GLEEPFNGLNORMALSTREAM3DATIPROC GLeeFuncPtr_glNormalStream3dATI;
  typedef void (* GLEEPFNGLNORMALSTREAM3DVATIPROC) (GLenum  stream, const GLdouble * coords);
  extern GLEEPFNGLNORMALSTREAM3DVATIPROC GLeeFuncPtr_glNormalStream3dvATI;
  typedef void (* GLEEPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum  stream);
  extern GLEEPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC GLeeFuncPtr_glClientActiveVertexStreamATI;
  typedef void (* GLEEPFNGLVERTEXBLENDENVIATIPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLVERTEXBLENDENVIATIPROC GLeeFuncPtr_glVertexBlendEnviATI;
  typedef void (* GLEEPFNGLVERTEXBLENDENVFATIPROC) (GLenum  pname, GLfloat  param);
  extern GLEEPFNGLVERTEXBLENDENVFATIPROC GLeeFuncPtr_glVertexBlendEnvfATI;

/* GL_ATI_element_array */

/* Constants */
  typedef void (* GLEEPFNGLELEMENTPOINTERATIPROC) (GLenum  type, const GLvoid * pointer);
  extern GLEEPFNGLELEMENTPOINTERATIPROC GLeeFuncPtr_glElementPointerATI;
  typedef void (* GLEEPFNGLDRAWELEMENTARRAYATIPROC) (GLenum  mode, GLsizei  count);
  extern GLEEPFNGLDRAWELEMENTARRAYATIPROC GLeeFuncPtr_glDrawElementArrayATI;
  typedef void (* GLEEPFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count);
  extern GLEEPFNGLDRAWRANGEELEMENTARRAYATIPROC GLeeFuncPtr_glDrawRangeElementArrayATI;

/* GL_SUN_mesh_array */

/* Constants */
  typedef void (* GLEEPFNGLDRAWMESHARRAYSSUNPROC) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  width);
  extern GLEEPFNGLDRAWMESHARRAYSSUNPROC GLeeFuncPtr_glDrawMeshArraysSUN;

/* GL_SUN_slice_accum */

/* Constants */

/* GL_NV_multisample_filter_hint */

/* Constants */

/* GL_NV_depth_clamp */

/* Constants */

/* GL_NV_occlusion_query */

/* Constants */
  typedef void (* GLEEPFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei  n, GLuint * ids);
  extern GLEEPFNGLGENOCCLUSIONQUERIESNVPROC GLeeFuncPtr_glGenOcclusionQueriesNV;
  typedef void (* GLEEPFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei  n, const GLuint * ids);
  extern GLEEPFNGLDELETEOCCLUSIONQUERIESNVPROC GLeeFuncPtr_glDeleteOcclusionQueriesNV;
  typedef GLboolean (* GLEEPFNGLISOCCLUSIONQUERYNVPROC) (GLuint  id);
  extern GLEEPFNGLISOCCLUSIONQUERYNVPROC GLeeFuncPtr_glIsOcclusionQueryNV;
  typedef void (* GLEEPFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint  id);
  extern GLEEPFNGLBEGINOCCLUSIONQUERYNVPROC GLeeFuncPtr_glBeginOcclusionQueryNV;
  typedef void (* GLEEPFNGLENDOCCLUSIONQUERYNVPROC) ();
  extern GLEEPFNGLENDOCCLUSIONQUERYNVPROC GLeeFuncPtr_glEndOcclusionQueryNV;
  typedef void (* GLEEPFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint  id, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETOCCLUSIONQUERYIVNVPROC GLeeFuncPtr_glGetOcclusionQueryivNV;
  typedef void (* GLEEPFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint  id, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETOCCLUSIONQUERYUIVNVPROC GLeeFuncPtr_glGetOcclusionQueryuivNV;

/* GL_NV_point_sprite */

/* Constants */
  typedef void (* GLEEPFNGLPOINTPARAMETERINVPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLPOINTPARAMETERINVPROC GLeeFuncPtr_glPointParameteriNV;
  typedef void (* GLEEPFNGLPOINTPARAMETERIVNVPROC) (GLenum  pname, const GLint * params);
  extern GLEEPFNGLPOINTPARAMETERIVNVPROC GLeeFuncPtr_glPointParameterivNV;

/* GL_NV_texture_shader3 */

/* Constants */

/* GL_NV_vertex_program1_1 */

/* Constants */

/* GL_EXT_shadow_funcs */

/* Constants */

/* GL_EXT_stencil_two_side */

/* Constants */
  typedef void (* GLEEPFNGLACTIVESTENCILFACEEXTPROC) (GLenum  face);
  extern GLEEPFNGLACTIVESTENCILFACEEXTPROC GLeeFuncPtr_glActiveStencilFaceEXT;

/* GL_ATI_text_fragment_shader */

/* Constants */

/* GL_APPLE_client_storage */

/* Constants */

/* GL_APPLE_element_array */

/* Constants */
  typedef void (* GLEEPFNGLELEMENTPOINTERAPPLEPROC) (GLenum  type, const GLvoid * pointer);
  extern GLEEPFNGLELEMENTPOINTERAPPLEPROC GLeeFuncPtr_glElementPointerAPPLE;
  typedef void (* GLEEPFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum  mode, GLint  first, GLsizei  count);
  extern GLEEPFNGLDRAWELEMENTARRAYAPPLEPROC GLeeFuncPtr_glDrawElementArrayAPPLE;
  typedef void (* GLEEPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum  mode, GLuint  start, GLuint  end, GLint  first, GLsizei  count);
  extern GLEEPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC GLeeFuncPtr_glDrawRangeElementArrayAPPLE;
  typedef void (* GLEEPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC GLeeFuncPtr_glMultiDrawElementArrayAPPLE;
  typedef void (* GLEEPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum  mode, GLuint  start, GLuint  end, const GLint * first, const GLsizei * count, GLsizei  primcount);
  extern GLEEPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC GLeeFuncPtr_glMultiDrawRangeElementArrayAPPLE;

/* GL_APPLE_fence */

/* Constants */
  typedef void (* GLEEPFNGLGENFENCESAPPLEPROC) (GLsizei  n, GLuint * fences);
  extern GLEEPFNGLGENFENCESAPPLEPROC GLeeFuncPtr_glGenFencesAPPLE;
  typedef void (* GLEEPFNGLDELETEFENCESAPPLEPROC) (GLsizei  n, const GLuint * fences);
  extern GLEEPFNGLDELETEFENCESAPPLEPROC GLeeFuncPtr_glDeleteFencesAPPLE;
  typedef void (* GLEEPFNGLSETFENCEAPPLEPROC) (GLuint  fence);
  extern GLEEPFNGLSETFENCEAPPLEPROC GLeeFuncPtr_glSetFenceAPPLE;
  typedef GLboolean (* GLEEPFNGLISFENCEAPPLEPROC) (GLuint  fence);
  extern GLEEPFNGLISFENCEAPPLEPROC GLeeFuncPtr_glIsFenceAPPLE;
  typedef GLboolean (* GLEEPFNGLTESTFENCEAPPLEPROC) (GLuint  fence);
  extern GLEEPFNGLTESTFENCEAPPLEPROC GLeeFuncPtr_glTestFenceAPPLE;
  typedef void (* GLEEPFNGLFINISHFENCEAPPLEPROC) (GLuint  fence);
  extern GLEEPFNGLFINISHFENCEAPPLEPROC GLeeFuncPtr_glFinishFenceAPPLE;
  typedef GLboolean (* GLEEPFNGLTESTOBJECTAPPLEPROC) (GLenum  object, GLuint  name);
  extern GLEEPFNGLTESTOBJECTAPPLEPROC GLeeFuncPtr_glTestObjectAPPLE;
  typedef void (* GLEEPFNGLFINISHOBJECTAPPLEPROC) (GLenum  object, GLint  name);
  extern GLEEPFNGLFINISHOBJECTAPPLEPROC GLeeFuncPtr_glFinishObjectAPPLE;

/* GL_APPLE_vertex_array_object */

/* Constants */
  typedef void (* GLEEPFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint  array);
  extern GLEEPFNGLBINDVERTEXARRAYAPPLEPROC GLeeFuncPtr_glBindVertexArrayAPPLE;
  typedef void (* GLEEPFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei  n, const GLuint * arrays);
  extern GLEEPFNGLDELETEVERTEXARRAYSAPPLEPROC GLeeFuncPtr_glDeleteVertexArraysAPPLE;
  typedef void (* GLEEPFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei  n, GLuint * arrays);
  extern GLEEPFNGLGENVERTEXARRAYSAPPLEPROC GLeeFuncPtr_glGenVertexArraysAPPLE;
  typedef GLboolean (* GLEEPFNGLISVERTEXARRAYAPPLEPROC) (GLuint  array);
  extern GLEEPFNGLISVERTEXARRAYAPPLEPROC GLeeFuncPtr_glIsVertexArrayAPPLE;

/* GL_APPLE_vertex_array_range */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei  length, GLvoid * pointer);
  extern GLEEPFNGLVERTEXARRAYRANGEAPPLEPROC GLeeFuncPtr_glVertexArrayRangeAPPLE;
  typedef void (* GLEEPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei  length, GLvoid * pointer);
  extern GLEEPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC GLeeFuncPtr_glFlushVertexArrayRangeAPPLE;
  typedef void (* GLEEPFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum  pname, GLint  param);
  extern GLEEPFNGLVERTEXARRAYPARAMETERIAPPLEPROC GLeeFuncPtr_glVertexArrayParameteriAPPLE;

/* GL_APPLE_ycbcr_422 */

/* Constants */

/* GL_S3_s3tc */

/* Constants */

/* GL_ATI_draw_buffers */

/* Constants */
  typedef void (* GLEEPFNGLDRAWBUFFERSATIPROC) (GLsizei  n, const GLenum * bufs);
  extern GLEEPFNGLDRAWBUFFERSATIPROC GLeeFuncPtr_glDrawBuffersATI;

/* GL_ATI_pixel_format_float */

/* Constants */

/* GL_ATI_texture_env_combine3 */

/* Constants */

/* GL_ATI_texture_float */

/* Constants */

/* GL_NV_float_buffer */

/* Constants */

/* GL_NV_fragment_program */

/* Constants */
  typedef void (* GLEEPFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLPROGRAMNAMEDPARAMETER4FNVPROC GLeeFuncPtr_glProgramNamedParameter4fNV;
  typedef void (* GLEEPFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLPROGRAMNAMEDPARAMETER4DNVPROC GLeeFuncPtr_glProgramNamedParameter4dNV;
  typedef void (* GLEEPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, const GLfloat * v);
  extern GLEEPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC GLeeFuncPtr_glProgramNamedParameter4fvNV;
  typedef void (* GLEEPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, const GLdouble * v);
  extern GLEEPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC GLeeFuncPtr_glProgramNamedParameter4dvNV;
  typedef void (* GLEEPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, GLfloat * params);
  extern GLEEPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC GLeeFuncPtr_glGetProgramNamedParameterfvNV;
  typedef void (* GLEEPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint  id, GLsizei  len, const GLubyte * name, GLdouble * params);
  extern GLEEPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC GLeeFuncPtr_glGetProgramNamedParameterdvNV;

/* GL_NV_half_float */

/* Constants */
  typedef void (* GLEEPFNGLVERTEX2HNVPROC) (GLhalfNV  x, GLhalfNV  y);
  extern GLEEPFNGLVERTEX2HNVPROC GLeeFuncPtr_glVertex2hNV;
  typedef void (* GLEEPFNGLVERTEX2HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLVERTEX2HVNVPROC GLeeFuncPtr_glVertex2hvNV;
  typedef void (* GLEEPFNGLVERTEX3HNVPROC) (GLhalfNV  x, GLhalfNV  y, GLhalfNV  z);
  extern GLEEPFNGLVERTEX3HNVPROC GLeeFuncPtr_glVertex3hNV;
  typedef void (* GLEEPFNGLVERTEX3HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLVERTEX3HVNVPROC GLeeFuncPtr_glVertex3hvNV;
  typedef void (* GLEEPFNGLVERTEX4HNVPROC) (GLhalfNV  x, GLhalfNV  y, GLhalfNV  z, GLhalfNV  w);
  extern GLEEPFNGLVERTEX4HNVPROC GLeeFuncPtr_glVertex4hNV;
  typedef void (* GLEEPFNGLVERTEX4HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLVERTEX4HVNVPROC GLeeFuncPtr_glVertex4hvNV;
  typedef void (* GLEEPFNGLNORMAL3HNVPROC) (GLhalfNV  nx, GLhalfNV  ny, GLhalfNV  nz);
  extern GLEEPFNGLNORMAL3HNVPROC GLeeFuncPtr_glNormal3hNV;
  typedef void (* GLEEPFNGLNORMAL3HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLNORMAL3HVNVPROC GLeeFuncPtr_glNormal3hvNV;
  typedef void (* GLEEPFNGLCOLOR3HNVPROC) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue);
  extern GLEEPFNGLCOLOR3HNVPROC GLeeFuncPtr_glColor3hNV;
  typedef void (* GLEEPFNGLCOLOR3HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLCOLOR3HVNVPROC GLeeFuncPtr_glColor3hvNV;
  typedef void (* GLEEPFNGLCOLOR4HNVPROC) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue, GLhalfNV  alpha);
  extern GLEEPFNGLCOLOR4HNVPROC GLeeFuncPtr_glColor4hNV;
  typedef void (* GLEEPFNGLCOLOR4HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLCOLOR4HVNVPROC GLeeFuncPtr_glColor4hvNV;
  typedef void (* GLEEPFNGLTEXCOORD1HNVPROC) (GLhalfNV  s);
  extern GLEEPFNGLTEXCOORD1HNVPROC GLeeFuncPtr_glTexCoord1hNV;
  typedef void (* GLEEPFNGLTEXCOORD1HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLTEXCOORD1HVNVPROC GLeeFuncPtr_glTexCoord1hvNV;
  typedef void (* GLEEPFNGLTEXCOORD2HNVPROC) (GLhalfNV  s, GLhalfNV  t);
  extern GLEEPFNGLTEXCOORD2HNVPROC GLeeFuncPtr_glTexCoord2hNV;
  typedef void (* GLEEPFNGLTEXCOORD2HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLTEXCOORD2HVNVPROC GLeeFuncPtr_glTexCoord2hvNV;
  typedef void (* GLEEPFNGLTEXCOORD3HNVPROC) (GLhalfNV  s, GLhalfNV  t, GLhalfNV  r);
  extern GLEEPFNGLTEXCOORD3HNVPROC GLeeFuncPtr_glTexCoord3hNV;
  typedef void (* GLEEPFNGLTEXCOORD3HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLTEXCOORD3HVNVPROC GLeeFuncPtr_glTexCoord3hvNV;
  typedef void (* GLEEPFNGLTEXCOORD4HNVPROC) (GLhalfNV  s, GLhalfNV  t, GLhalfNV  r, GLhalfNV  q);
  extern GLEEPFNGLTEXCOORD4HNVPROC GLeeFuncPtr_glTexCoord4hNV;
  typedef void (* GLEEPFNGLTEXCOORD4HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLTEXCOORD4HVNVPROC GLeeFuncPtr_glTexCoord4hvNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD1HNVPROC) (GLenum  target, GLhalfNV  s);
  extern GLEEPFNGLMULTITEXCOORD1HNVPROC GLeeFuncPtr_glMultiTexCoord1hNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD1HVNVPROC) (GLenum  target, const GLhalfNV * v);
  extern GLEEPFNGLMULTITEXCOORD1HVNVPROC GLeeFuncPtr_glMultiTexCoord1hvNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD2HNVPROC) (GLenum  target, GLhalfNV  s, GLhalfNV  t);
  extern GLEEPFNGLMULTITEXCOORD2HNVPROC GLeeFuncPtr_glMultiTexCoord2hNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD2HVNVPROC) (GLenum  target, const GLhalfNV * v);
  extern GLEEPFNGLMULTITEXCOORD2HVNVPROC GLeeFuncPtr_glMultiTexCoord2hvNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD3HNVPROC) (GLenum  target, GLhalfNV  s, GLhalfNV  t, GLhalfNV  r);
  extern GLEEPFNGLMULTITEXCOORD3HNVPROC GLeeFuncPtr_glMultiTexCoord3hNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD3HVNVPROC) (GLenum  target, const GLhalfNV * v);
  extern GLEEPFNGLMULTITEXCOORD3HVNVPROC GLeeFuncPtr_glMultiTexCoord3hvNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD4HNVPROC) (GLenum  target, GLhalfNV  s, GLhalfNV  t, GLhalfNV  r, GLhalfNV  q);
  extern GLEEPFNGLMULTITEXCOORD4HNVPROC GLeeFuncPtr_glMultiTexCoord4hNV;
  typedef void (* GLEEPFNGLMULTITEXCOORD4HVNVPROC) (GLenum  target, const GLhalfNV * v);
  extern GLEEPFNGLMULTITEXCOORD4HVNVPROC GLeeFuncPtr_glMultiTexCoord4hvNV;
  typedef void (* GLEEPFNGLFOGCOORDHNVPROC) (GLhalfNV  fog);
  extern GLEEPFNGLFOGCOORDHNVPROC GLeeFuncPtr_glFogCoordhNV;
  typedef void (* GLEEPFNGLFOGCOORDHVNVPROC) (const GLhalfNV * fog);
  extern GLEEPFNGLFOGCOORDHVNVPROC GLeeFuncPtr_glFogCoordhvNV;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue);
  extern GLEEPFNGLSECONDARYCOLOR3HNVPROC GLeeFuncPtr_glSecondaryColor3hNV;
  typedef void (* GLEEPFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV * v);
  extern GLEEPFNGLSECONDARYCOLOR3HVNVPROC GLeeFuncPtr_glSecondaryColor3hvNV;
  typedef void (* GLEEPFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV  weight);
  extern GLEEPFNGLVERTEXWEIGHTHNVPROC GLeeFuncPtr_glVertexWeighthNV;
  typedef void (* GLEEPFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV * weight);
  extern GLEEPFNGLVERTEXWEIGHTHVNVPROC GLeeFuncPtr_glVertexWeighthvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1HNVPROC) (GLuint  index, GLhalfNV  x);
  extern GLEEPFNGLVERTEXATTRIB1HNVPROC GLeeFuncPtr_glVertexAttrib1hNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB1HVNVPROC) (GLuint  index, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIB1HVNVPROC GLeeFuncPtr_glVertexAttrib1hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2HNVPROC) (GLuint  index, GLhalfNV  x, GLhalfNV  y);
  extern GLEEPFNGLVERTEXATTRIB2HNVPROC GLeeFuncPtr_glVertexAttrib2hNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB2HVNVPROC) (GLuint  index, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIB2HVNVPROC GLeeFuncPtr_glVertexAttrib2hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3HNVPROC) (GLuint  index, GLhalfNV  x, GLhalfNV  y, GLhalfNV  z);
  extern GLEEPFNGLVERTEXATTRIB3HNVPROC GLeeFuncPtr_glVertexAttrib3hNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB3HVNVPROC) (GLuint  index, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIB3HVNVPROC GLeeFuncPtr_glVertexAttrib3hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4HNVPROC) (GLuint  index, GLhalfNV  x, GLhalfNV  y, GLhalfNV  z, GLhalfNV  w);
  extern GLEEPFNGLVERTEXATTRIB4HNVPROC GLeeFuncPtr_glVertexAttrib4hNV;
  typedef void (* GLEEPFNGLVERTEXATTRIB4HVNVPROC) (GLuint  index, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIB4HVNVPROC GLeeFuncPtr_glVertexAttrib4hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS1HVNVPROC) (GLuint  index, GLsizei  n, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIBS1HVNVPROC GLeeFuncPtr_glVertexAttribs1hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS2HVNVPROC) (GLuint  index, GLsizei  n, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIBS2HVNVPROC GLeeFuncPtr_glVertexAttribs2hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS3HVNVPROC) (GLuint  index, GLsizei  n, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIBS3HVNVPROC GLeeFuncPtr_glVertexAttribs3hvNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBS4HVNVPROC) (GLuint  index, GLsizei  n, const GLhalfNV * v);
  extern GLEEPFNGLVERTEXATTRIBS4HVNVPROC GLeeFuncPtr_glVertexAttribs4hvNV;

/* GL_NV_pixel_data_range */

/* Constants */
  typedef void (* GLEEPFNGLPIXELDATARANGENVPROC) (GLenum  target, GLsizei  length, GLvoid * pointer);
  extern GLEEPFNGLPIXELDATARANGENVPROC GLeeFuncPtr_glPixelDataRangeNV;
  typedef void (* GLEEPFNGLFLUSHPIXELDATARANGENVPROC) (GLenum  target);
  extern GLEEPFNGLFLUSHPIXELDATARANGENVPROC GLeeFuncPtr_glFlushPixelDataRangeNV;

/* GL_NV_primitive_restart */

/* Constants */
  typedef void (* GLEEPFNGLPRIMITIVERESTARTNVPROC) ();
  extern GLEEPFNGLPRIMITIVERESTARTNVPROC GLeeFuncPtr_glPrimitiveRestartNV;
  typedef void (* GLEEPFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint  index);
  extern GLEEPFNGLPRIMITIVERESTARTINDEXNVPROC GLeeFuncPtr_glPrimitiveRestartIndexNV;

/* GL_NV_texture_expand_normal */

/* Constants */

/* GL_NV_vertex_program2 */

/* Constants */

/* GL_ATI_map_object_buffer */

/* Constants */
  typedef GLvoid* (* GLEEPFNGLMAPOBJECTBUFFERATIPROC) (GLuint  buffer);
  extern GLEEPFNGLMAPOBJECTBUFFERATIPROC GLeeFuncPtr_glMapObjectBufferATI;
  typedef void (* GLEEPFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint  buffer);
  extern GLEEPFNGLUNMAPOBJECTBUFFERATIPROC GLeeFuncPtr_glUnmapObjectBufferATI;

/* GL_ATI_separate_stencil */

/* Constants */
  typedef void (* GLEEPFNGLSTENCILOPSEPARATEATIPROC) (GLenum  face, GLenum  sfail, GLenum  dpfail, GLenum  dppass);
  extern GLEEPFNGLSTENCILOPSEPARATEATIPROC GLeeFuncPtr_glStencilOpSeparateATI;
  typedef void (* GLEEPFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum  frontfunc, GLenum  backfunc, GLint  ref, GLuint  mask);
  extern GLEEPFNGLSTENCILFUNCSEPARATEATIPROC GLeeFuncPtr_glStencilFuncSeparateATI;

/* GL_ATI_vertex_attrib_array_object */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, GLuint  buffer, GLuint  offset);
  extern GLEEPFNGLVERTEXATTRIBARRAYOBJECTATIPROC GLeeFuncPtr_glVertexAttribArrayObjectATI;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint  index, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC GLeeFuncPtr_glGetVertexAttribArrayObjectfvATI;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint  index, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC GLeeFuncPtr_glGetVertexAttribArrayObjectivATI;

/* GL_OES_read_format */

/* Constants */

/* GL_EXT_depth_bounds_test */

/* Constants */
  typedef void (* GLEEPFNGLDEPTHBOUNDSEXTPROC) (GLclampd  zmin, GLclampd  zmax);
  extern GLEEPFNGLDEPTHBOUNDSEXTPROC GLeeFuncPtr_glDepthBoundsEXT;

/* GL_EXT_texture_mirror_clamp */

/* Constants */

/* GL_EXT_blend_equation_separate */

/* Constants */
  typedef void (* GLEEPFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum  modeRGB, GLenum  modeAlpha);
  extern GLEEPFNGLBLENDEQUATIONSEPARATEEXTPROC GLeeFuncPtr_glBlendEquationSeparateEXT;

/* GL_MESA_pack_invert */

/* Constants */

/* GL_MESA_ycbcr_texture */

/* Constants */

/* GL_EXT_pixel_buffer_object */

/* Constants */

/* GL_NV_fragment_program_option */

/* Constants */

/* GL_NV_fragment_program2 */

/* Constants */

/* GL_NV_vertex_program2_option */

/* Constants */

/* GL_NV_vertex_program3 */

/* Constants */

/* GL_EXT_framebuffer_object */

/* Constants */
  typedef GLboolean (* GLEEPFNGLISRENDERBUFFEREXTPROC) (GLuint  renderbuffer);
  extern GLEEPFNGLISRENDERBUFFEREXTPROC GLeeFuncPtr_glIsRenderbufferEXT;
  typedef void (* GLEEPFNGLBINDRENDERBUFFEREXTPROC) (GLenum  target, GLuint  renderbuffer);
  extern GLEEPFNGLBINDRENDERBUFFEREXTPROC GLeeFuncPtr_glBindRenderbufferEXT;
  typedef void (* GLEEPFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei  n, const GLuint * renderbuffers);
  extern GLEEPFNGLDELETERENDERBUFFERSEXTPROC GLeeFuncPtr_glDeleteRenderbuffersEXT;
  typedef void (* GLEEPFNGLGENRENDERBUFFERSEXTPROC) (GLsizei  n, GLuint * renderbuffers);
  extern GLEEPFNGLGENRENDERBUFFERSEXTPROC GLeeFuncPtr_glGenRenderbuffersEXT;
  typedef void (* GLEEPFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLRENDERBUFFERSTORAGEEXTPROC GLeeFuncPtr_glRenderbufferStorageEXT;
  typedef void (* GLEEPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC GLeeFuncPtr_glGetRenderbufferParameterivEXT;
  typedef GLboolean (* GLEEPFNGLISFRAMEBUFFEREXTPROC) (GLuint  framebuffer);
  extern GLEEPFNGLISFRAMEBUFFEREXTPROC GLeeFuncPtr_glIsFramebufferEXT;
  typedef void (* GLEEPFNGLBINDFRAMEBUFFEREXTPROC) (GLenum  target, GLuint  framebuffer);
  extern GLEEPFNGLBINDFRAMEBUFFEREXTPROC GLeeFuncPtr_glBindFramebufferEXT;
  typedef void (* GLEEPFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei  n, const GLuint * framebuffers);
  extern GLEEPFNGLDELETEFRAMEBUFFERSEXTPROC GLeeFuncPtr_glDeleteFramebuffersEXT;
  typedef void (* GLEEPFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei  n, GLuint * framebuffers);
  extern GLEEPFNGLGENFRAMEBUFFERSEXTPROC GLeeFuncPtr_glGenFramebuffersEXT;
  typedef GLenum (* GLEEPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum  target);
  extern GLEEPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC GLeeFuncPtr_glCheckFramebufferStatusEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE1DEXTPROC GLeeFuncPtr_glFramebufferTexture1DEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE2DEXTPROC GLeeFuncPtr_glFramebufferTexture2DEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset);
  extern GLEEPFNGLFRAMEBUFFERTEXTURE3DEXTPROC GLeeFuncPtr_glFramebufferTexture3DEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum  target, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer);
  extern GLEEPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC GLeeFuncPtr_glFramebufferRenderbufferEXT;
  typedef void (* GLEEPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum  target, GLenum  attachment, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC GLeeFuncPtr_glGetFramebufferAttachmentParameterivEXT;
  typedef void (* GLEEPFNGLGENERATEMIPMAPEXTPROC) (GLenum  target);
  extern GLEEPFNGLGENERATEMIPMAPEXTPROC GLeeFuncPtr_glGenerateMipmapEXT;

/* GL_GREMEDY_string_marker */

/* Constants */
  typedef void (* GLEEPFNGLSTRINGMARKERGREMEDYPROC) (GLsizei  len, const GLvoid * string);
  extern GLEEPFNGLSTRINGMARKERGREMEDYPROC GLeeFuncPtr_glStringMarkerGREMEDY;

/* GL_EXT_packed_depth_stencil */

/* Constants */

/* GL_EXT_stencil_clear_tag */

/* Constants */
  typedef void (* GLEEPFNGLSTENCILCLEARTAGEXTPROC) (GLsizei  stencilTagBits, GLuint  stencilClearTag);
  extern GLEEPFNGLSTENCILCLEARTAGEXTPROC GLeeFuncPtr_glStencilClearTagEXT;

/* GL_EXT_texture_sRGB */

/* Constants */

/* GL_EXT_framebuffer_blit */

/* Constants */
  typedef void (* GLEEPFNGLBLITFRAMEBUFFEREXTPROC) (GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter);
  extern GLEEPFNGLBLITFRAMEBUFFEREXTPROC GLeeFuncPtr_glBlitFramebufferEXT;

/* GL_EXT_framebuffer_multisample */

/* Constants */
  typedef void (* GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC GLeeFuncPtr_glRenderbufferStorageMultisampleEXT;

/* GL_MESAX_texture_stack */

/* Constants */

/* GL_EXT_timer_query */

/* Constants */
  typedef void (* GLEEPFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint  id, GLenum  pname, GLint64EXT * params);
  extern GLEEPFNGLGETQUERYOBJECTI64VEXTPROC GLeeFuncPtr_glGetQueryObjecti64vEXT;
  typedef void (* GLEEPFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint  id, GLenum  pname, GLuint64EXT * params);
  extern GLEEPFNGLGETQUERYOBJECTUI64VEXTPROC GLeeFuncPtr_glGetQueryObjectui64vEXT;

/* GL_EXT_gpu_program_parameters */

/* Constants */
  typedef void (* GLEEPFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params);
  extern GLEEPFNGLPROGRAMENVPARAMETERS4FVEXTPROC GLeeFuncPtr_glProgramEnvParameters4fvEXT;
  typedef void (* GLEEPFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params);
  extern GLEEPFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC GLeeFuncPtr_glProgramLocalParameters4fvEXT;

/* GL_APPLE_flush_buffer_range */

/* Constants */
  typedef void (* GLEEPFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLBUFFERPARAMETERIAPPLEPROC GLeeFuncPtr_glBufferParameteriAPPLE;
  typedef void (* GLEEPFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum  target, GLintptr  offset, GLsizeiptr  size);
  extern GLEEPFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC GLeeFuncPtr_glFlushMappedBufferRangeAPPLE;

/* GL_EXT_gpu_shader4 */

/* Constants */
  typedef void (* GLEEPFNGLGETUNIFORMUIVEXTPROC) (GLuint  program, GLint  location, GLuint * params);
  extern GLEEPFNGLGETUNIFORMUIVEXTPROC GLeeFuncPtr_glGetUniformuivEXT;
  typedef void (* GLEEPFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint  program, GLuint  color, const GLchar * name);
  extern GLEEPFNGLBINDFRAGDATALOCATIONEXTPROC GLeeFuncPtr_glBindFragDataLocationEXT;
  typedef GLint (* GLEEPFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETFRAGDATALOCATIONEXTPROC GLeeFuncPtr_glGetFragDataLocationEXT;
  typedef void (* GLEEPFNGLUNIFORM1UIEXTPROC) (GLint  location, GLuint  v0);
  extern GLEEPFNGLUNIFORM1UIEXTPROC GLeeFuncPtr_glUniform1uiEXT;
  typedef void (* GLEEPFNGLUNIFORM2UIEXTPROC) (GLint  location, GLuint  v0, GLuint  v1);
  extern GLEEPFNGLUNIFORM2UIEXTPROC GLeeFuncPtr_glUniform2uiEXT;
  typedef void (* GLEEPFNGLUNIFORM3UIEXTPROC) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2);
  extern GLEEPFNGLUNIFORM3UIEXTPROC GLeeFuncPtr_glUniform3uiEXT;
  typedef void (* GLEEPFNGLUNIFORM4UIEXTPROC) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3);
  extern GLEEPFNGLUNIFORM4UIEXTPROC GLeeFuncPtr_glUniform4uiEXT;
  typedef void (* GLEEPFNGLUNIFORM1UIVEXTPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM1UIVEXTPROC GLeeFuncPtr_glUniform1uivEXT;
  typedef void (* GLEEPFNGLUNIFORM2UIVEXTPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM2UIVEXTPROC GLeeFuncPtr_glUniform2uivEXT;
  typedef void (* GLEEPFNGLUNIFORM3UIVEXTPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM3UIVEXTPROC GLeeFuncPtr_glUniform3uivEXT;
  typedef void (* GLEEPFNGLUNIFORM4UIVEXTPROC) (GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLUNIFORM4UIVEXTPROC GLeeFuncPtr_glUniform4uivEXT;

/* GL_EXT_draw_instanced */

/* Constants */
  typedef void (* GLEEPFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum  mode, GLint  start, GLsizei  count, GLsizei  primcount);
  extern GLEEPFNGLDRAWARRAYSINSTANCEDEXTPROC GLeeFuncPtr_glDrawArraysInstancedEXT;
  typedef void (* GLEEPFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum  mode, GLsizei  count, GLenum  type, const GLvoid * indices, GLsizei  primcount);
  extern GLEEPFNGLDRAWELEMENTSINSTANCEDEXTPROC GLeeFuncPtr_glDrawElementsInstancedEXT;

/* GL_EXT_packed_float */

/* Constants */

/* GL_EXT_texture_array */

/* Constants */

/* GL_EXT_texture_buffer_object */

/* Constants */
  typedef void (* GLEEPFNGLTEXBUFFEREXTPROC) (GLenum  target, GLenum  internalformat, GLuint  buffer);
  extern GLEEPFNGLTEXBUFFEREXTPROC GLeeFuncPtr_glTexBufferEXT;

/* GL_EXT_texture_compression_latc */

/* Constants */

/* GL_EXT_texture_compression_rgtc */

/* Constants */

/* GL_EXT_texture_shared_exponent */

/* Constants */

/* GL_NV_depth_buffer_float */

/* Constants */
  typedef void (* GLEEPFNGLDEPTHRANGEDNVPROC) (GLdouble  zNear, GLdouble  zFar);
  extern GLEEPFNGLDEPTHRANGEDNVPROC GLeeFuncPtr_glDepthRangedNV;
  typedef void (* GLEEPFNGLCLEARDEPTHDNVPROC) (GLdouble  depth);
  extern GLEEPFNGLCLEARDEPTHDNVPROC GLeeFuncPtr_glClearDepthdNV;
  typedef void (* GLEEPFNGLDEPTHBOUNDSDNVPROC) (GLdouble  zmin, GLdouble  zmax);
  extern GLEEPFNGLDEPTHBOUNDSDNVPROC GLeeFuncPtr_glDepthBoundsdNV;

/* GL_NV_framebuffer_multisample_coverage */

/* Constants */
  typedef void (* GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC GLeeFuncPtr_glRenderbufferStorageMultisampleCoverageNV;

/* GL_EXT_framebuffer_sRGB */

/* Constants */

/* GL_NV_geometry_shader4 */

/* Constants */

/* GL_NV_parameter_buffer_object */

/* Constants */
  typedef void (* GLEEPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum  target, GLuint  buffer, GLuint  index, GLsizei  count, const GLfloat * params);
  extern GLEEPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC GLeeFuncPtr_glProgramBufferParametersfvNV;
  typedef void (* GLEEPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum  target, GLuint  buffer, GLuint  index, GLsizei  count, const GLint * params);
  extern GLEEPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC GLeeFuncPtr_glProgramBufferParametersIivNV;
  typedef void (* GLEEPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum  target, GLuint  buffer, GLuint  index, GLsizei  count, const GLuint * params);
  extern GLEEPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC GLeeFuncPtr_glProgramBufferParametersIuivNV;

/* GL_EXT_draw_buffers2 */

/* Constants */
  typedef void (* GLEEPFNGLCOLORMASKINDEXEDEXTPROC) (GLuint  index, GLboolean  r, GLboolean  g, GLboolean  b, GLboolean  a);
  extern GLEEPFNGLCOLORMASKINDEXEDEXTPROC GLeeFuncPtr_glColorMaskIndexedEXT;
  typedef void (* GLEEPFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum  target, GLuint  index, GLboolean * data);
  extern GLEEPFNGLGETBOOLEANINDEXEDVEXTPROC GLeeFuncPtr_glGetBooleanIndexedvEXT;
  typedef void (* GLEEPFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum  target, GLuint  index, GLint * data);
  extern GLEEPFNGLGETINTEGERINDEXEDVEXTPROC GLeeFuncPtr_glGetIntegerIndexedvEXT;
  typedef void (* GLEEPFNGLENABLEINDEXEDEXTPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLENABLEINDEXEDEXTPROC GLeeFuncPtr_glEnableIndexedEXT;
  typedef void (* GLEEPFNGLDISABLEINDEXEDEXTPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLDISABLEINDEXEDEXTPROC GLeeFuncPtr_glDisableIndexedEXT;
  typedef GLboolean (* GLEEPFNGLISENABLEDINDEXEDEXTPROC) (GLenum  target, GLuint  index);
  extern GLEEPFNGLISENABLEDINDEXEDEXTPROC GLeeFuncPtr_glIsEnabledIndexedEXT;

/* GL_NV_transform_feedback */

/* Constants */
  typedef void (* GLEEPFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum  primitiveMode);
  extern GLEEPFNGLBEGINTRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glBeginTransformFeedbackNV;
  typedef void (* GLEEPFNGLENDTRANSFORMFEEDBACKNVPROC) ();
  extern GLEEPFNGLENDTRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glEndTransformFeedbackNV;
  typedef void (* GLEEPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint  count, const GLint * attribs, GLenum  bufferMode);
  extern GLEEPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC GLeeFuncPtr_glTransformFeedbackAttribsNV;
  typedef void (* GLEEPFNGLBINDBUFFERRANGENVPROC) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size);
  extern GLEEPFNGLBINDBUFFERRANGENVPROC GLeeFuncPtr_glBindBufferRangeNV;
  typedef void (* GLEEPFNGLBINDBUFFEROFFSETNVPROC) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset);
  extern GLEEPFNGLBINDBUFFEROFFSETNVPROC GLeeFuncPtr_glBindBufferOffsetNV;
  typedef void (* GLEEPFNGLBINDBUFFERBASENVPROC) (GLenum  target, GLuint  index, GLuint  buffer);
  extern GLEEPFNGLBINDBUFFERBASENVPROC GLeeFuncPtr_glBindBufferBaseNV;
  typedef void (* GLEEPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint  program, GLsizei  count, const GLint * locations, GLenum  bufferMode);
  extern GLEEPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC GLeeFuncPtr_glTransformFeedbackVaryingsNV;
  typedef void (* GLEEPFNGLACTIVEVARYINGNVPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLACTIVEVARYINGNVPROC GLeeFuncPtr_glActiveVaryingNV;
  typedef GLint (* GLEEPFNGLGETVARYINGLOCATIONNVPROC) (GLuint  program, const GLchar * name);
  extern GLEEPFNGLGETVARYINGLOCATIONNVPROC GLeeFuncPtr_glGetVaryingLocationNV;
  typedef void (* GLEEPFNGLGETACTIVEVARYINGNVPROC) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
  extern GLEEPFNGLGETACTIVEVARYINGNVPROC GLeeFuncPtr_glGetActiveVaryingNV;
  typedef void (* GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint  program, GLuint  index, GLint * location);
  extern GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC GLeeFuncPtr_glGetTransformFeedbackVaryingNV;
  typedef void (* GLEEPFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei  count, const GLint * attribs, GLsizei  nbuffers, const GLint * bufstreams, GLenum  bufferMode);
  extern GLEEPFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC GLeeFuncPtr_glTransformFeedbackStreamAttribsNV;

/* GL_EXT_bindable_uniform */

/* Constants */
  typedef void (* GLEEPFNGLUNIFORMBUFFEREXTPROC) (GLuint  program, GLint  location, GLuint  buffer);
  extern GLEEPFNGLUNIFORMBUFFEREXTPROC GLeeFuncPtr_glUniformBufferEXT;
  typedef GLint (* GLEEPFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint  program, GLint  location);
  extern GLEEPFNGLGETUNIFORMBUFFERSIZEEXTPROC GLeeFuncPtr_glGetUniformBufferSizeEXT;
  typedef GLintptr (* GLEEPFNGLGETUNIFORMOFFSETEXTPROC) (GLuint  program, GLint  location);
  extern GLEEPFNGLGETUNIFORMOFFSETEXTPROC GLeeFuncPtr_glGetUniformOffsetEXT;

/* GL_EXT_texture_integer */

/* Constants */
  typedef void (* GLEEPFNGLTEXPARAMETERIIVEXTPROC) (GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLTEXPARAMETERIIVEXTPROC GLeeFuncPtr_glTexParameterIivEXT;
  typedef void (* GLEEPFNGLTEXPARAMETERIUIVEXTPROC) (GLenum  target, GLenum  pname, const GLuint * params);
  extern GLEEPFNGLTEXPARAMETERIUIVEXTPROC GLeeFuncPtr_glTexParameterIuivEXT;
  typedef void (* GLEEPFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTEXPARAMETERIIVEXTPROC GLeeFuncPtr_glGetTexParameterIivEXT;
  typedef void (* GLEEPFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum  target, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETTEXPARAMETERIUIVEXTPROC GLeeFuncPtr_glGetTexParameterIuivEXT;
  typedef void (* GLEEPFNGLCLEARCOLORIIEXTPROC) (GLint  red, GLint  green, GLint  blue, GLint  alpha);
  extern GLEEPFNGLCLEARCOLORIIEXTPROC GLeeFuncPtr_glClearColorIiEXT;
  typedef void (* GLEEPFNGLCLEARCOLORIUIEXTPROC) (GLuint  red, GLuint  green, GLuint  blue, GLuint  alpha);
  extern GLEEPFNGLCLEARCOLORIUIEXTPROC GLeeFuncPtr_glClearColorIuiEXT;

/* GL_GREMEDY_frame_terminator */

/* Constants */
  typedef void (* GLEEPFNGLFRAMETERMINATORGREMEDYPROC) ();
  extern GLEEPFNGLFRAMETERMINATORGREMEDYPROC GLeeFuncPtr_glFrameTerminatorGREMEDY;

/* GL_NV_conditional_render */

/* Constants */
  typedef void (* GLEEPFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint  id, GLenum  mode);
  extern GLEEPFNGLBEGINCONDITIONALRENDERNVPROC GLeeFuncPtr_glBeginConditionalRenderNV;
  typedef void (* GLEEPFNGLENDCONDITIONALRENDERNVPROC) ();
  extern GLEEPFNGLENDCONDITIONALRENDERNVPROC GLeeFuncPtr_glEndConditionalRenderNV;

/* GL_NV_present_video */

/* Constants */
  typedef void (* GLEEPFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint  video_slot, GLuint64EXT  minPresentTime, GLuint  beginPresentTimeId, GLuint  presentDurationId, GLenum  type, GLenum  target0, GLuint  fill0, GLuint  key0, GLenum  target1, GLuint  fill1, GLuint  key1);
  extern GLEEPFNGLPRESENTFRAMEKEYEDNVPROC GLeeFuncPtr_glPresentFrameKeyedNV;
  typedef void (* GLEEPFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint  video_slot, GLuint64EXT  minPresentTime, GLuint  beginPresentTimeId, GLuint  presentDurationId, GLenum  type, GLenum  target0, GLuint  fill0, GLenum  target1, GLuint  fill1, GLenum  target2, GLuint  fill2, GLenum  target3, GLuint  fill3);
  extern GLEEPFNGLPRESENTFRAMEDUALFILLNVPROC GLeeFuncPtr_glPresentFrameDualFillNV;
  typedef void (* GLEEPFNGLGETVIDEOIVNVPROC) (GLuint  video_slot, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVIDEOIVNVPROC GLeeFuncPtr_glGetVideoivNV;
  typedef void (* GLEEPFNGLGETVIDEOUIVNVPROC) (GLuint  video_slot, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETVIDEOUIVNVPROC GLeeFuncPtr_glGetVideouivNV;
  typedef void (* GLEEPFNGLGETVIDEOI64VNVPROC) (GLuint  video_slot, GLenum  pname, GLint64EXT * params);
  extern GLEEPFNGLGETVIDEOI64VNVPROC GLeeFuncPtr_glGetVideoi64vNV;
  typedef void (* GLEEPFNGLGETVIDEOUI64VNVPROC) (GLuint  video_slot, GLenum  pname, GLuint64EXT * params);
  extern GLEEPFNGLGETVIDEOUI64VNVPROC GLeeFuncPtr_glGetVideoui64vNV;

/* GL_EXT_transform_feedback */

/* Constants */
  typedef void (* GLEEPFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum  primitiveMode);
  extern GLEEPFNGLBEGINTRANSFORMFEEDBACKEXTPROC GLeeFuncPtr_glBeginTransformFeedbackEXT;
  typedef void (* GLEEPFNGLENDTRANSFORMFEEDBACKEXTPROC) ();
  extern GLEEPFNGLENDTRANSFORMFEEDBACKEXTPROC GLeeFuncPtr_glEndTransformFeedbackEXT;
  typedef void (* GLEEPFNGLBINDBUFFERRANGEEXTPROC) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size);
  extern GLEEPFNGLBINDBUFFERRANGEEXTPROC GLeeFuncPtr_glBindBufferRangeEXT;
  typedef void (* GLEEPFNGLBINDBUFFEROFFSETEXTPROC) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset);
  extern GLEEPFNGLBINDBUFFEROFFSETEXTPROC GLeeFuncPtr_glBindBufferOffsetEXT;
  typedef void (* GLEEPFNGLBINDBUFFERBASEEXTPROC) (GLenum  target, GLuint  index, GLuint  buffer);
  extern GLEEPFNGLBINDBUFFERBASEEXTPROC GLeeFuncPtr_glBindBufferBaseEXT;
  typedef void (* GLEEPFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint  program, GLsizei  count, const GLchar* * varyings, GLenum  bufferMode);
  extern GLEEPFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC GLeeFuncPtr_glTransformFeedbackVaryingsEXT;
  typedef void (* GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
  extern GLEEPFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC GLeeFuncPtr_glGetTransformFeedbackVaryingEXT;

/* GL_EXT_direct_state_access */

/* Constants */
  typedef void (* GLEEPFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield  mask);
  extern GLEEPFNGLCLIENTATTRIBDEFAULTEXTPROC GLeeFuncPtr_glClientAttribDefaultEXT;
  typedef void (* GLEEPFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield  mask);
  extern GLEEPFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC GLeeFuncPtr_glPushClientAttribDefaultEXT;
  typedef void (* GLEEPFNGLMATRIXLOADFEXTPROC) (GLenum  mode, const GLfloat * m);
  extern GLEEPFNGLMATRIXLOADFEXTPROC GLeeFuncPtr_glMatrixLoadfEXT;
  typedef void (* GLEEPFNGLMATRIXLOADDEXTPROC) (GLenum  mode, const GLdouble * m);
  extern GLEEPFNGLMATRIXLOADDEXTPROC GLeeFuncPtr_glMatrixLoaddEXT;
  typedef void (* GLEEPFNGLMATRIXMULTFEXTPROC) (GLenum  mode, const GLfloat * m);
  extern GLEEPFNGLMATRIXMULTFEXTPROC GLeeFuncPtr_glMatrixMultfEXT;
  typedef void (* GLEEPFNGLMATRIXMULTDEXTPROC) (GLenum  mode, const GLdouble * m);
  extern GLEEPFNGLMATRIXMULTDEXTPROC GLeeFuncPtr_glMatrixMultdEXT;
  typedef void (* GLEEPFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum  mode);
  extern GLEEPFNGLMATRIXLOADIDENTITYEXTPROC GLeeFuncPtr_glMatrixLoadIdentityEXT;
  typedef void (* GLEEPFNGLMATRIXROTATEFEXTPROC) (GLenum  mode, GLfloat  angle, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLMATRIXROTATEFEXTPROC GLeeFuncPtr_glMatrixRotatefEXT;
  typedef void (* GLEEPFNGLMATRIXROTATEDEXTPROC) (GLenum  mode, GLdouble  angle, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLMATRIXROTATEDEXTPROC GLeeFuncPtr_glMatrixRotatedEXT;
  typedef void (* GLEEPFNGLMATRIXSCALEFEXTPROC) (GLenum  mode, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLMATRIXSCALEFEXTPROC GLeeFuncPtr_glMatrixScalefEXT;
  typedef void (* GLEEPFNGLMATRIXSCALEDEXTPROC) (GLenum  mode, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLMATRIXSCALEDEXTPROC GLeeFuncPtr_glMatrixScaledEXT;
  typedef void (* GLEEPFNGLMATRIXTRANSLATEFEXTPROC) (GLenum  mode, GLfloat  x, GLfloat  y, GLfloat  z);
  extern GLEEPFNGLMATRIXTRANSLATEFEXTPROC GLeeFuncPtr_glMatrixTranslatefEXT;
  typedef void (* GLEEPFNGLMATRIXTRANSLATEDEXTPROC) (GLenum  mode, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLMATRIXTRANSLATEDEXTPROC GLeeFuncPtr_glMatrixTranslatedEXT;
  typedef void (* GLEEPFNGLMATRIXFRUSTUMEXTPROC) (GLenum  mode, GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar);
  extern GLEEPFNGLMATRIXFRUSTUMEXTPROC GLeeFuncPtr_glMatrixFrustumEXT;
  typedef void (* GLEEPFNGLMATRIXORTHOEXTPROC) (GLenum  mode, GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar);
  extern GLEEPFNGLMATRIXORTHOEXTPROC GLeeFuncPtr_glMatrixOrthoEXT;
  typedef void (* GLEEPFNGLMATRIXPOPEXTPROC) (GLenum  mode);
  extern GLEEPFNGLMATRIXPOPEXTPROC GLeeFuncPtr_glMatrixPopEXT;
  typedef void (* GLEEPFNGLMATRIXPUSHEXTPROC) (GLenum  mode);
  extern GLEEPFNGLMATRIXPUSHEXTPROC GLeeFuncPtr_glMatrixPushEXT;
  typedef void (* GLEEPFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum  mode, const GLfloat * m);
  extern GLEEPFNGLMATRIXLOADTRANSPOSEFEXTPROC GLeeFuncPtr_glMatrixLoadTransposefEXT;
  typedef void (* GLEEPFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum  mode, const GLdouble * m);
  extern GLEEPFNGLMATRIXLOADTRANSPOSEDEXTPROC GLeeFuncPtr_glMatrixLoadTransposedEXT;
  typedef void (* GLEEPFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum  mode, const GLfloat * m);
  extern GLEEPFNGLMATRIXMULTTRANSPOSEFEXTPROC GLeeFuncPtr_glMatrixMultTransposefEXT;
  typedef void (* GLEEPFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum  mode, const GLdouble * m);
  extern GLEEPFNGLMATRIXMULTTRANSPOSEDEXTPROC GLeeFuncPtr_glMatrixMultTransposedEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERFEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLTEXTUREPARAMETERFEXTPROC GLeeFuncPtr_glTextureParameterfEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLTEXTUREPARAMETERFVEXTPROC GLeeFuncPtr_glTextureParameterfvEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERIEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLTEXTUREPARAMETERIEXTPROC GLeeFuncPtr_glTextureParameteriEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLTEXTUREPARAMETERIVEXTPROC GLeeFuncPtr_glTextureParameterivEXT;
  typedef void (* GLEEPFNGLTEXTUREIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTUREIMAGE1DEXTPROC GLeeFuncPtr_glTextureImage1DEXT;
  typedef void (* GLEEPFNGLTEXTUREIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTUREIMAGE2DEXTPROC GLeeFuncPtr_glTextureImage2DEXT;
  typedef void (* GLEEPFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTURESUBIMAGE1DEXTPROC GLeeFuncPtr_glTextureSubImage1DEXT;
  typedef void (* GLEEPFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTURESUBIMAGE2DEXTPROC GLeeFuncPtr_glTextureSubImage2DEXT;
  typedef void (* GLEEPFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border);
  extern GLEEPFNGLCOPYTEXTUREIMAGE1DEXTPROC GLeeFuncPtr_glCopyTextureImage1DEXT;
  typedef void (* GLEEPFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border);
  extern GLEEPFNGLCOPYTEXTUREIMAGE2DEXTPROC GLeeFuncPtr_glCopyTextureImage2DEXT;
  typedef void (* GLEEPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC GLeeFuncPtr_glCopyTextureSubImage1DEXT;
  typedef void (* GLEEPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC GLeeFuncPtr_glCopyTextureSubImage2DEXT;
  typedef void (* GLEEPFNGLGETTEXTUREIMAGEEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  format, GLenum  type, GLvoid * pixels);
  extern GLEEPFNGLGETTEXTUREIMAGEEXTPROC GLeeFuncPtr_glGetTextureImageEXT;
  typedef void (* GLEEPFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETTEXTUREPARAMETERFVEXTPROC GLeeFuncPtr_glGetTextureParameterfvEXT;
  typedef void (* GLEEPFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTEXTUREPARAMETERIVEXTPROC GLeeFuncPtr_glGetTextureParameterivEXT;
  typedef void (* GLEEPFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETTEXTURELEVELPARAMETERFVEXTPROC GLeeFuncPtr_glGetTextureLevelParameterfvEXT;
  typedef void (* GLEEPFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTEXTURELEVELPARAMETERIVEXTPROC GLeeFuncPtr_glGetTextureLevelParameterivEXT;
  typedef void (* GLEEPFNGLTEXTUREIMAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTUREIMAGE3DEXTPROC GLeeFuncPtr_glTextureImage3DEXT;
  typedef void (* GLEEPFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLTEXTURESUBIMAGE3DEXTPROC GLeeFuncPtr_glTextureSubImage3DEXT;
  typedef void (* GLEEPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC GLeeFuncPtr_glCopyTextureSubImage3DEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERFEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLMULTITEXPARAMETERFEXTPROC GLeeFuncPtr_glMultiTexParameterfEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLMULTITEXPARAMETERFVEXTPROC GLeeFuncPtr_glMultiTexParameterfvEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERIEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLMULTITEXPARAMETERIEXTPROC GLeeFuncPtr_glMultiTexParameteriEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLMULTITEXPARAMETERIVEXTPROC GLeeFuncPtr_glMultiTexParameterivEXT;
  typedef void (* GLEEPFNGLMULTITEXIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXIMAGE1DEXTPROC GLeeFuncPtr_glMultiTexImage1DEXT;
  typedef void (* GLEEPFNGLMULTITEXIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXIMAGE2DEXTPROC GLeeFuncPtr_glMultiTexImage2DEXT;
  typedef void (* GLEEPFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXSUBIMAGE1DEXTPROC GLeeFuncPtr_glMultiTexSubImage1DEXT;
  typedef void (* GLEEPFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXSUBIMAGE2DEXTPROC GLeeFuncPtr_glMultiTexSubImage2DEXT;
  typedef void (* GLEEPFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border);
  extern GLEEPFNGLCOPYMULTITEXIMAGE1DEXTPROC GLeeFuncPtr_glCopyMultiTexImage1DEXT;
  typedef void (* GLEEPFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border);
  extern GLEEPFNGLCOPYMULTITEXIMAGE2DEXTPROC GLeeFuncPtr_glCopyMultiTexImage2DEXT;
  typedef void (* GLEEPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width);
  extern GLEEPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC GLeeFuncPtr_glCopyMultiTexSubImage1DEXT;
  typedef void (* GLEEPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC GLeeFuncPtr_glCopyMultiTexSubImage2DEXT;
  typedef void (* GLEEPFNGLGETMULTITEXIMAGEEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  format, GLenum  type, GLvoid * pixels);
  extern GLEEPFNGLGETMULTITEXIMAGEEXTPROC GLeeFuncPtr_glGetMultiTexImageEXT;
  typedef void (* GLEEPFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMULTITEXPARAMETERFVEXTPROC GLeeFuncPtr_glGetMultiTexParameterfvEXT;
  typedef void (* GLEEPFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMULTITEXPARAMETERIVEXTPROC GLeeFuncPtr_glGetMultiTexParameterivEXT;
  typedef void (* GLEEPFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC GLeeFuncPtr_glGetMultiTexLevelParameterfvEXT;
  typedef void (* GLEEPFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC GLeeFuncPtr_glGetMultiTexLevelParameterivEXT;
  typedef void (* GLEEPFNGLMULTITEXIMAGE3DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXIMAGE3DEXTPROC GLeeFuncPtr_glMultiTexImage3DEXT;
  typedef void (* GLEEPFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const GLvoid * pixels);
  extern GLEEPFNGLMULTITEXSUBIMAGE3DEXTPROC GLeeFuncPtr_glMultiTexSubImage3DEXT;
  typedef void (* GLEEPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC GLeeFuncPtr_glCopyMultiTexSubImage3DEXT;
  typedef void (* GLEEPFNGLBINDMULTITEXTUREEXTPROC) (GLenum  texunit, GLenum  target, GLuint  texture);
  extern GLEEPFNGLBINDMULTITEXTUREEXTPROC GLeeFuncPtr_glBindMultiTextureEXT;
  typedef void (* GLEEPFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum  array, GLuint  index);
  extern GLEEPFNGLENABLECLIENTSTATEINDEXEDEXTPROC GLeeFuncPtr_glEnableClientStateIndexedEXT;
  typedef void (* GLEEPFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum  array, GLuint  index);
  extern GLEEPFNGLDISABLECLIENTSTATEINDEXEDEXTPROC GLeeFuncPtr_glDisableClientStateIndexedEXT;
  typedef void (* GLEEPFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum  texunit, GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLMULTITEXCOORDPOINTEREXTPROC GLeeFuncPtr_glMultiTexCoordPointerEXT;
  typedef void (* GLEEPFNGLMULTITEXENVFEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLMULTITEXENVFEXTPROC GLeeFuncPtr_glMultiTexEnvfEXT;
  typedef void (* GLEEPFNGLMULTITEXENVFVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLMULTITEXENVFVEXTPROC GLeeFuncPtr_glMultiTexEnvfvEXT;
  typedef void (* GLEEPFNGLMULTITEXENVIEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLint  param);
  extern GLEEPFNGLMULTITEXENVIEXTPROC GLeeFuncPtr_glMultiTexEnviEXT;
  typedef void (* GLEEPFNGLMULTITEXENVIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLMULTITEXENVIVEXTPROC GLeeFuncPtr_glMultiTexEnvivEXT;
  typedef void (* GLEEPFNGLMULTITEXGENDEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLdouble  param);
  extern GLEEPFNGLMULTITEXGENDEXTPROC GLeeFuncPtr_glMultiTexGendEXT;
  typedef void (* GLEEPFNGLMULTITEXGENDVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLdouble * params);
  extern GLEEPFNGLMULTITEXGENDVEXTPROC GLeeFuncPtr_glMultiTexGendvEXT;
  typedef void (* GLEEPFNGLMULTITEXGENFEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLfloat  param);
  extern GLEEPFNGLMULTITEXGENFEXTPROC GLeeFuncPtr_glMultiTexGenfEXT;
  typedef void (* GLEEPFNGLMULTITEXGENFVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLMULTITEXGENFVEXTPROC GLeeFuncPtr_glMultiTexGenfvEXT;
  typedef void (* GLEEPFNGLMULTITEXGENIEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLint  param);
  extern GLEEPFNGLMULTITEXGENIEXTPROC GLeeFuncPtr_glMultiTexGeniEXT;
  typedef void (* GLEEPFNGLMULTITEXGENIVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLint * params);
  extern GLEEPFNGLMULTITEXGENIVEXTPROC GLeeFuncPtr_glMultiTexGenivEXT;
  typedef void (* GLEEPFNGLGETMULTITEXENVFVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMULTITEXENVFVEXTPROC GLeeFuncPtr_glGetMultiTexEnvfvEXT;
  typedef void (* GLEEPFNGLGETMULTITEXENVIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMULTITEXENVIVEXTPROC GLeeFuncPtr_glGetMultiTexEnvivEXT;
  typedef void (* GLEEPFNGLGETMULTITEXGENDVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETMULTITEXGENDVEXTPROC GLeeFuncPtr_glGetMultiTexGendvEXT;
  typedef void (* GLEEPFNGLGETMULTITEXGENFVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETMULTITEXGENFVEXTPROC GLeeFuncPtr_glGetMultiTexGenfvEXT;
  typedef void (* GLEEPFNGLGETMULTITEXGENIVEXTPROC) (GLenum  texunit, GLenum  coord, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMULTITEXGENIVEXTPROC GLeeFuncPtr_glGetMultiTexGenivEXT;
  typedef void (* GLEEPFNGLGETFLOATINDEXEDVEXTPROC) (GLenum  target, GLuint  index, GLfloat * data);
  extern GLEEPFNGLGETFLOATINDEXEDVEXTPROC GLeeFuncPtr_glGetFloatIndexedvEXT;
  typedef void (* GLEEPFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum  target, GLuint  index, GLdouble * data);
  extern GLEEPFNGLGETDOUBLEINDEXEDVEXTPROC GLeeFuncPtr_glGetDoubleIndexedvEXT;
  typedef void (* GLEEPFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum  target, GLuint  index, GLvoid* * data);
  extern GLEEPFNGLGETPOINTERINDEXEDVEXTPROC GLeeFuncPtr_glGetPointerIndexedvEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC GLeeFuncPtr_glCompressedTextureImage3DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC GLeeFuncPtr_glCompressedTextureImage2DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC GLeeFuncPtr_glCompressedTextureImage1DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC GLeeFuncPtr_glCompressedTextureSubImage3DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC GLeeFuncPtr_glCompressedTextureSubImage2DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC GLeeFuncPtr_glCompressedTextureSubImage1DEXT;
  typedef void (* GLEEPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint  texture, GLenum  target, GLint  lod, GLvoid * img);
  extern GLEEPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC GLeeFuncPtr_glGetCompressedTextureImageEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC GLeeFuncPtr_glCompressedMultiTexImage3DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC GLeeFuncPtr_glCompressedMultiTexImage2DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC GLeeFuncPtr_glCompressedMultiTexImage1DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC GLeeFuncPtr_glCompressedMultiTexSubImage3DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC GLeeFuncPtr_glCompressedMultiTexSubImage2DEXT;
  typedef void (* GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const GLvoid * bits);
  extern GLEEPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC GLeeFuncPtr_glCompressedMultiTexSubImage1DEXT;
  typedef void (* GLEEPFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum  texunit, GLenum  target, GLint  lod, GLvoid * img);
  extern GLEEPFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC GLeeFuncPtr_glGetCompressedMultiTexImageEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint  program, GLenum  target, GLenum  format, GLsizei  len, const GLvoid * string);
  extern GLEEPFNGLNAMEDPROGRAMSTRINGEXTPROC GLeeFuncPtr_glNamedProgramStringEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC GLeeFuncPtr_glNamedProgramLocalParameter4dEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, const GLdouble * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC GLeeFuncPtr_glNamedProgramLocalParameter4dvEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC GLeeFuncPtr_glNamedProgramLocalParameter4fEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, const GLfloat * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC GLeeFuncPtr_glNamedProgramLocalParameter4fvEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLdouble * params);
  extern GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC GLeeFuncPtr_glGetNamedProgramLocalParameterdvEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLfloat * params);
  extern GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC GLeeFuncPtr_glGetNamedProgramLocalParameterfvEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint  program, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETNAMEDPROGRAMIVEXTPROC GLeeFuncPtr_glGetNamedProgramivEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint  program, GLenum  target, GLenum  pname, GLvoid * string);
  extern GLEEPFNGLGETNAMEDPROGRAMSTRINGEXTPROC GLeeFuncPtr_glGetNamedProgramStringEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC GLeeFuncPtr_glNamedProgramLocalParameters4fvEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC GLeeFuncPtr_glNamedProgramLocalParameterI4iEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, const GLint * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC GLeeFuncPtr_glNamedProgramLocalParameterI4ivEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLint * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC GLeeFuncPtr_glNamedProgramLocalParametersI4ivEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC GLeeFuncPtr_glNamedProgramLocalParameterI4uiEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, const GLuint * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC GLeeFuncPtr_glNamedProgramLocalParameterI4uivEXT;
  typedef void (* GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLuint * params);
  extern GLEEPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC GLeeFuncPtr_glNamedProgramLocalParametersI4uivEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLint * params);
  extern GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC GLeeFuncPtr_glGetNamedProgramLocalParameterIivEXT;
  typedef void (* GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint  program, GLenum  target, GLuint  index, GLuint * params);
  extern GLEEPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC GLeeFuncPtr_glGetNamedProgramLocalParameterIuivEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLTEXTUREPARAMETERIIVEXTPROC GLeeFuncPtr_glTextureParameterIivEXT;
  typedef void (* GLEEPFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, const GLuint * params);
  extern GLEEPFNGLTEXTUREPARAMETERIUIVEXTPROC GLeeFuncPtr_glTextureParameterIuivEXT;
  typedef void (* GLEEPFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETTEXTUREPARAMETERIIVEXTPROC GLeeFuncPtr_glGetTextureParameterIivEXT;
  typedef void (* GLEEPFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint  texture, GLenum  target, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETTEXTUREPARAMETERIUIVEXTPROC GLeeFuncPtr_glGetTextureParameterIuivEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params);
  extern GLEEPFNGLMULTITEXPARAMETERIIVEXTPROC GLeeFuncPtr_glMultiTexParameterIivEXT;
  typedef void (* GLEEPFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, const GLuint * params);
  extern GLEEPFNGLMULTITEXPARAMETERIUIVEXTPROC GLeeFuncPtr_glMultiTexParameterIuivEXT;
  typedef void (* GLEEPFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETMULTITEXPARAMETERIIVEXTPROC GLeeFuncPtr_glGetMultiTexParameterIivEXT;
  typedef void (* GLEEPFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum  texunit, GLenum  target, GLenum  pname, GLuint * params);
  extern GLEEPFNGLGETMULTITEXPARAMETERIUIVEXTPROC GLeeFuncPtr_glGetMultiTexParameterIuivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint  program, GLint  location, GLfloat  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1FEXTPROC GLeeFuncPtr_glProgramUniform1fEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2FEXTPROC GLeeFuncPtr_glProgramUniform2fEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3FEXTPROC GLeeFuncPtr_glProgramUniform3fEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4FEXTPROC GLeeFuncPtr_glProgramUniform4fEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint  program, GLint  location, GLint  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1IEXTPROC GLeeFuncPtr_glProgramUniform1iEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2IEXTPROC GLeeFuncPtr_glProgramUniform2iEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3IEXTPROC GLeeFuncPtr_glProgramUniform3iEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4IEXTPROC GLeeFuncPtr_glProgramUniform4iEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM1FVEXTPROC GLeeFuncPtr_glProgramUniform1fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM2FVEXTPROC GLeeFuncPtr_glProgramUniform2fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM3FVEXTPROC GLeeFuncPtr_glProgramUniform3fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORM4FVEXTPROC GLeeFuncPtr_glProgramUniform4fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM1IVEXTPROC GLeeFuncPtr_glProgramUniform1ivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM2IVEXTPROC GLeeFuncPtr_glProgramUniform2ivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM3IVEXTPROC GLeeFuncPtr_glProgramUniform3ivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint * value);
  extern GLEEPFNGLPROGRAMUNIFORM4IVEXTPROC GLeeFuncPtr_glProgramUniform4ivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2x3fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3x2fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2x4fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4x2fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3x4fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4x3fvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint  program, GLint  location, GLuint  v0);
  extern GLEEPFNGLPROGRAMUNIFORM1UIEXTPROC GLeeFuncPtr_glProgramUniform1uiEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1);
  extern GLEEPFNGLPROGRAMUNIFORM2UIEXTPROC GLeeFuncPtr_glProgramUniform2uiEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2);
  extern GLEEPFNGLPROGRAMUNIFORM3UIEXTPROC GLeeFuncPtr_glProgramUniform3uiEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3);
  extern GLEEPFNGLPROGRAMUNIFORM4UIEXTPROC GLeeFuncPtr_glProgramUniform4uiEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM1UIVEXTPROC GLeeFuncPtr_glProgramUniform1uivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM2UIVEXTPROC GLeeFuncPtr_glProgramUniform2uivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM3UIVEXTPROC GLeeFuncPtr_glProgramUniform3uivEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value);
  extern GLEEPFNGLPROGRAMUNIFORM4UIVEXTPROC GLeeFuncPtr_glProgramUniform4uivEXT;
  typedef void (* GLEEPFNGLNAMEDBUFFERDATAEXTPROC) (GLuint  buffer, GLsizeiptr  size, const GLvoid * data, GLenum  usage);
  extern GLEEPFNGLNAMEDBUFFERDATAEXTPROC GLeeFuncPtr_glNamedBufferDataEXT;
  typedef void (* GLEEPFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, const GLvoid * data);
  extern GLEEPFNGLNAMEDBUFFERSUBDATAEXTPROC GLeeFuncPtr_glNamedBufferSubDataEXT;
  typedef GLvoid* (* GLEEPFNGLMAPNAMEDBUFFEREXTPROC) (GLuint  buffer, GLenum  access);
  extern GLEEPFNGLMAPNAMEDBUFFEREXTPROC GLeeFuncPtr_glMapNamedBufferEXT;
  typedef GLboolean (* GLEEPFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint  buffer);
  extern GLEEPFNGLUNMAPNAMEDBUFFEREXTPROC GLeeFuncPtr_glUnmapNamedBufferEXT;
  typedef GLvoid* (* GLEEPFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length, GLbitfield  access);
  extern GLEEPFNGLMAPNAMEDBUFFERRANGEEXTPROC GLeeFuncPtr_glMapNamedBufferRangeEXT;
  typedef void (* GLEEPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length);
  extern GLEEPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC GLeeFuncPtr_glFlushMappedNamedBufferRangeEXT;
  typedef void (* GLEEPFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint  readBuffer, GLuint  writeBuffer, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size);
  extern GLEEPFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC GLeeFuncPtr_glNamedCopyBufferSubDataEXT;
  typedef void (* GLEEPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint  buffer, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC GLeeFuncPtr_glGetNamedBufferParameterivEXT;
  typedef void (* GLEEPFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint  buffer, GLenum  pname, GLvoid* * params);
  extern GLEEPFNGLGETNAMEDBUFFERPOINTERVEXTPROC GLeeFuncPtr_glGetNamedBufferPointervEXT;
  typedef void (* GLEEPFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, GLvoid * data);
  extern GLEEPFNGLGETNAMEDBUFFERSUBDATAEXTPROC GLeeFuncPtr_glGetNamedBufferSubDataEXT;
  typedef void (* GLEEPFNGLTEXTUREBUFFEREXTPROC) (GLuint  texture, GLenum  target, GLenum  internalformat, GLuint  buffer);
  extern GLEEPFNGLTEXTUREBUFFEREXTPROC GLeeFuncPtr_glTextureBufferEXT;
  typedef void (* GLEEPFNGLMULTITEXBUFFEREXTPROC) (GLenum  texunit, GLenum  target, GLenum  internalformat, GLuint  buffer);
  extern GLEEPFNGLMULTITEXBUFFEREXTPROC GLeeFuncPtr_glMultiTexBufferEXT;
  typedef void (* GLEEPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint  renderbuffer, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC GLeeFuncPtr_glNamedRenderbufferStorageEXT;
  typedef void (* GLEEPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint  renderbuffer, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC GLeeFuncPtr_glGetNamedRenderbufferParameterivEXT;
  typedef GLenum (* GLEEPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint  framebuffer, GLenum  target);
  extern GLEEPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC GLeeFuncPtr_glCheckNamedFramebufferStatusEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC GLeeFuncPtr_glNamedFramebufferTexture1DEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC GLeeFuncPtr_glNamedFramebufferTexture2DEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC GLeeFuncPtr_glNamedFramebufferTexture3DEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint  framebuffer, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer);
  extern GLEEPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC GLeeFuncPtr_glNamedFramebufferRenderbufferEXT;
  typedef void (* GLEEPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC GLeeFuncPtr_glGetNamedFramebufferAttachmentParameterivEXT;
  typedef void (* GLEEPFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint  texture, GLenum  target);
  extern GLEEPFNGLGENERATETEXTUREMIPMAPEXTPROC GLeeFuncPtr_glGenerateTextureMipmapEXT;
  typedef void (* GLEEPFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum  texunit, GLenum  target);
  extern GLEEPFNGLGENERATEMULTITEXMIPMAPEXTPROC GLeeFuncPtr_glGenerateMultiTexMipmapEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint  framebuffer, GLenum  mode);
  extern GLEEPFNGLFRAMEBUFFERDRAWBUFFEREXTPROC GLeeFuncPtr_glFramebufferDrawBufferEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint  framebuffer, GLsizei  n, const GLenum * bufs);
  extern GLEEPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC GLeeFuncPtr_glFramebufferDrawBuffersEXT;
  typedef void (* GLEEPFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint  framebuffer, GLenum  mode);
  extern GLEEPFNGLFRAMEBUFFERREADBUFFEREXTPROC GLeeFuncPtr_glFramebufferReadBufferEXT;
  typedef void (* GLEEPFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint  framebuffer, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC GLeeFuncPtr_glGetFramebufferParameterivEXT;
  typedef void (* GLEEPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint  renderbuffer, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC GLeeFuncPtr_glNamedRenderbufferStorageMultisampleEXT;
  typedef void (* GLEEPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint  renderbuffer, GLsizei  coverageSamples, GLsizei  colorSamples, GLenum  internalformat, GLsizei  width, GLsizei  height);
  extern GLEEPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC GLeeFuncPtr_glNamedRenderbufferStorageMultisampleCoverageEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC GLeeFuncPtr_glNamedFramebufferTextureEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC GLeeFuncPtr_glNamedFramebufferTextureLayerEXT;
  typedef void (* GLEEPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level, GLenum  face);
  extern GLEEPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC GLeeFuncPtr_glNamedFramebufferTextureFaceEXT;
  typedef void (* GLEEPFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint  texture, GLenum  target, GLuint  renderbuffer);
  extern GLEEPFNGLTEXTURERENDERBUFFEREXTPROC GLeeFuncPtr_glTextureRenderbufferEXT;
  typedef void (* GLEEPFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum  texunit, GLenum  target, GLuint  renderbuffer);
  extern GLEEPFNGLMULTITEXRENDERBUFFEREXTPROC GLeeFuncPtr_glMultiTexRenderbufferEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint  program, GLint  location, GLdouble  x);
  extern GLEEPFNGLPROGRAMUNIFORM1DEXTPROC GLeeFuncPtr_glProgramUniform1dEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLPROGRAMUNIFORM2DEXTPROC GLeeFuncPtr_glProgramUniform2dEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLPROGRAMUNIFORM3DEXTPROC GLeeFuncPtr_glProgramUniform3dEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLPROGRAMUNIFORM4DEXTPROC GLeeFuncPtr_glProgramUniform4dEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM1DVEXTPROC GLeeFuncPtr_glProgramUniform1dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM2DVEXTPROC GLeeFuncPtr_glProgramUniform2dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM3DVEXTPROC GLeeFuncPtr_glProgramUniform3dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORM4DVEXTPROC GLeeFuncPtr_glProgramUniform4dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2x3dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix2x4dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3x2dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix3x4dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4x2dvEXT;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value);
  extern GLEEPFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC GLeeFuncPtr_glProgramUniformMatrix4x3dvEXT;

/* GL_EXT_vertex_array_bgra */

/* Constants */

/* GL_EXT_texture_swizzle */

/* Constants */

/* GL_NV_explicit_multisample */

/* Constants */
  typedef void (* GLEEPFNGLGETMULTISAMPLEFVNVPROC) (GLenum  pname, GLuint  index, GLfloat * val);
  extern GLEEPFNGLGETMULTISAMPLEFVNVPROC GLeeFuncPtr_glGetMultisamplefvNV;
  typedef void (* GLEEPFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint  index, GLbitfield  mask);
  extern GLEEPFNGLSAMPLEMASKINDEXEDNVPROC GLeeFuncPtr_glSampleMaskIndexedNV;
  typedef void (* GLEEPFNGLTEXRENDERBUFFERNVPROC) (GLenum  target, GLuint  renderbuffer);
  extern GLEEPFNGLTEXRENDERBUFFERNVPROC GLeeFuncPtr_glTexRenderbufferNV;

/* GL_NV_transform_feedback2 */

/* Constants */
  typedef void (* GLEEPFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum  target, GLuint  id);
  extern GLEEPFNGLBINDTRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glBindTransformFeedbackNV;
  typedef void (* GLEEPFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei  n, const GLuint * ids);
  extern GLEEPFNGLDELETETRANSFORMFEEDBACKSNVPROC GLeeFuncPtr_glDeleteTransformFeedbacksNV;
  typedef void (* GLEEPFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei  n, GLuint * ids);
  extern GLEEPFNGLGENTRANSFORMFEEDBACKSNVPROC GLeeFuncPtr_glGenTransformFeedbacksNV;
  typedef GLboolean (* GLEEPFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint  id);
  extern GLEEPFNGLISTRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glIsTransformFeedbackNV;
  typedef void (* GLEEPFNGLPAUSETRANSFORMFEEDBACKNVPROC) ();
  extern GLEEPFNGLPAUSETRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glPauseTransformFeedbackNV;
  typedef void (* GLEEPFNGLRESUMETRANSFORMFEEDBACKNVPROC) ();
  extern GLEEPFNGLRESUMETRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glResumeTransformFeedbackNV;
  typedef void (* GLEEPFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum  mode, GLuint  id);
  extern GLEEPFNGLDRAWTRANSFORMFEEDBACKNVPROC GLeeFuncPtr_glDrawTransformFeedbackNV;

/* GL_ATI_meminfo */

/* Constants */

/* GL_AMD_performance_monitor */

/* Constants */
  typedef void (* GLEEPFNGLGETPERFMONITORGROUPSAMDPROC) (GLint * numGroups, GLsizei  groupsSize, GLuint * groups);
  extern GLEEPFNGLGETPERFMONITORGROUPSAMDPROC GLeeFuncPtr_glGetPerfMonitorGroupsAMD;
  typedef void (* GLEEPFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint  group, GLint * numCounters, GLint * maxActiveCounters, GLsizei  counterSize, GLuint * counters);
  extern GLEEPFNGLGETPERFMONITORCOUNTERSAMDPROC GLeeFuncPtr_glGetPerfMonitorCountersAMD;
  typedef void (* GLEEPFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint  group, GLsizei  bufSize, GLsizei * length, GLchar * groupString);
  extern GLEEPFNGLGETPERFMONITORGROUPSTRINGAMDPROC GLeeFuncPtr_glGetPerfMonitorGroupStringAMD;
  typedef void (* GLEEPFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint  group, GLuint  counter, GLsizei  bufSize, GLsizei * length, GLchar * counterString);
  extern GLEEPFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC GLeeFuncPtr_glGetPerfMonitorCounterStringAMD;
  typedef void (* GLEEPFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint  group, GLuint  counter, GLenum  pname, GLvoid * data);
  extern GLEEPFNGLGETPERFMONITORCOUNTERINFOAMDPROC GLeeFuncPtr_glGetPerfMonitorCounterInfoAMD;
  typedef void (* GLEEPFNGLGENPERFMONITORSAMDPROC) (GLsizei  n, GLuint * monitors);
  extern GLEEPFNGLGENPERFMONITORSAMDPROC GLeeFuncPtr_glGenPerfMonitorsAMD;
  typedef void (* GLEEPFNGLDELETEPERFMONITORSAMDPROC) (GLsizei  n, GLuint * monitors);
  extern GLEEPFNGLDELETEPERFMONITORSAMDPROC GLeeFuncPtr_glDeletePerfMonitorsAMD;
  typedef void (* GLEEPFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint  monitor, GLboolean  enable, GLuint  group, GLint  numCounters, GLuint * counterList);
  extern GLEEPFNGLSELECTPERFMONITORCOUNTERSAMDPROC GLeeFuncPtr_glSelectPerfMonitorCountersAMD;
  typedef void (* GLEEPFNGLBEGINPERFMONITORAMDPROC) (GLuint  monitor);
  extern GLEEPFNGLBEGINPERFMONITORAMDPROC GLeeFuncPtr_glBeginPerfMonitorAMD;
  typedef void (* GLEEPFNGLENDPERFMONITORAMDPROC) (GLuint  monitor);
  extern GLEEPFNGLENDPERFMONITORAMDPROC GLeeFuncPtr_glEndPerfMonitorAMD;
  typedef void (* GLEEPFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint  monitor, GLenum  pname, GLsizei  dataSize, GLuint * data, GLint * bytesWritten);
  extern GLEEPFNGLGETPERFMONITORCOUNTERDATAAMDPROC GLeeFuncPtr_glGetPerfMonitorCounterDataAMD;

/* GL_AMD_texture_texture4 */

/* Constants */

/* GL_AMD_vertex_shader_tesselator */

/* Constants */
  typedef void (* GLEEPFNGLTESSELLATIONFACTORAMDPROC) (GLfloat  factor);
  extern GLEEPFNGLTESSELLATIONFACTORAMDPROC GLeeFuncPtr_glTessellationFactorAMD;
  typedef void (* GLEEPFNGLTESSELLATIONMODEAMDPROC) (GLenum  mode);
  extern GLEEPFNGLTESSELLATIONMODEAMDPROC GLeeFuncPtr_glTessellationModeAMD;

/* GL_EXT_provoking_vertex */

/* Constants */
  typedef void (* GLEEPFNGLPROVOKINGVERTEXEXTPROC) (GLenum  mode);
  extern GLEEPFNGLPROVOKINGVERTEXEXTPROC GLeeFuncPtr_glProvokingVertexEXT;

/* GL_EXT_texture_snorm */

/* Constants */

/* GL_AMD_draw_buffers_blend */

/* Constants */
  typedef void (* GLEEPFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint  buf, GLenum  src, GLenum  dst);
  extern GLEEPFNGLBLENDFUNCINDEXEDAMDPROC GLeeFuncPtr_glBlendFuncIndexedAMD;
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC GLeeFuncPtr_glBlendFuncSeparateIndexedAMD;
  typedef void (* GLEEPFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint  buf, GLenum  mode);
  extern GLEEPFNGLBLENDEQUATIONINDEXEDAMDPROC GLeeFuncPtr_glBlendEquationIndexedAMD;
  typedef void (* GLEEPFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha);
  extern GLEEPFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC GLeeFuncPtr_glBlendEquationSeparateIndexedAMD;

/* GL_APPLE_texture_range */

/* Constants */
  typedef void (* GLEEPFNGLTEXTURERANGEAPPLEPROC) (GLenum  target, GLsizei  length, const GLvoid * pointer);
  extern GLEEPFNGLTEXTURERANGEAPPLEPROC GLeeFuncPtr_glTextureRangeAPPLE;
  typedef void (* GLEEPFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum  target, GLenum  pname, GLvoid* * params);
  extern GLEEPFNGLGETTEXPARAMETERPOINTERVAPPLEPROC GLeeFuncPtr_glGetTexParameterPointervAPPLE;

/* GL_APPLE_float_pixels */

/* Constants */

/* GL_APPLE_vertex_program_evaluators */

/* Constants */
  typedef void (* GLEEPFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint  index, GLenum  pname);
  extern GLEEPFNGLENABLEVERTEXATTRIBAPPLEPROC GLeeFuncPtr_glEnableVertexAttribAPPLE;
  typedef void (* GLEEPFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint  index, GLenum  pname);
  extern GLEEPFNGLDISABLEVERTEXATTRIBAPPLEPROC GLeeFuncPtr_glDisableVertexAttribAPPLE;
  typedef GLboolean (* GLEEPFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint  index, GLenum  pname);
  extern GLEEPFNGLISVERTEXATTRIBENABLEDAPPLEPROC GLeeFuncPtr_glIsVertexAttribEnabledAPPLE;
  typedef void (* GLEEPFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint  index, GLuint  size, GLdouble  u1, GLdouble  u2, GLint  stride, GLint  order, const GLdouble * points);
  extern GLEEPFNGLMAPVERTEXATTRIB1DAPPLEPROC GLeeFuncPtr_glMapVertexAttrib1dAPPLE;
  typedef void (* GLEEPFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint  index, GLuint  size, GLfloat  u1, GLfloat  u2, GLint  stride, GLint  order, const GLfloat * points);
  extern GLEEPFNGLMAPVERTEXATTRIB1FAPPLEPROC GLeeFuncPtr_glMapVertexAttrib1fAPPLE;
  typedef void (* GLEEPFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint  index, GLuint  size, GLdouble  u1, GLdouble  u2, GLint  ustride, GLint  uorder, GLdouble  v1, GLdouble  v2, GLint  vstride, GLint  vorder, const GLdouble * points);
  extern GLEEPFNGLMAPVERTEXATTRIB2DAPPLEPROC GLeeFuncPtr_glMapVertexAttrib2dAPPLE;
  typedef void (* GLEEPFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint  index, GLuint  size, GLfloat  u1, GLfloat  u2, GLint  ustride, GLint  uorder, GLfloat  v1, GLfloat  v2, GLint  vstride, GLint  vorder, const GLfloat * points);
  extern GLEEPFNGLMAPVERTEXATTRIB2FAPPLEPROC GLeeFuncPtr_glMapVertexAttrib2fAPPLE;

/* GL_APPLE_aux_depth_stencil */

/* Constants */

/* GL_APPLE_object_purgeable */

/* Constants */
  typedef GLenum (* GLEEPFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum  objectType, GLuint  name, GLenum  option);
  extern GLEEPFNGLOBJECTPURGEABLEAPPLEPROC GLeeFuncPtr_glObjectPurgeableAPPLE;
  typedef GLenum (* GLEEPFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum  objectType, GLuint  name, GLenum  option);
  extern GLEEPFNGLOBJECTUNPURGEABLEAPPLEPROC GLeeFuncPtr_glObjectUnpurgeableAPPLE;
  typedef void (* GLEEPFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum  objectType, GLuint  name, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETOBJECTPARAMETERIVAPPLEPROC GLeeFuncPtr_glGetObjectParameterivAPPLE;

/* GL_APPLE_row_bytes */

/* Constants */

/* GL_APPLE_rgb_422 */

/* Constants */

/* GL_NV_video_capture */

/* Constants */
  typedef void (* GLEEPFNGLBEGINVIDEOCAPTURENVPROC) (GLuint  video_capture_slot);
  extern GLEEPFNGLBEGINVIDEOCAPTURENVPROC GLeeFuncPtr_glBeginVideoCaptureNV;
  typedef void (* GLEEPFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  frame_region, GLintptrARB  offset);
  extern GLEEPFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC GLeeFuncPtr_glBindVideoCaptureStreamBufferNV;
  typedef void (* GLEEPFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  frame_region, GLenum  target, GLuint  texture);
  extern GLEEPFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC GLeeFuncPtr_glBindVideoCaptureStreamTextureNV;
  typedef void (* GLEEPFNGLENDVIDEOCAPTURENVPROC) (GLuint  video_capture_slot);
  extern GLEEPFNGLENDVIDEOCAPTURENVPROC GLeeFuncPtr_glEndVideoCaptureNV;
  typedef void (* GLEEPFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint  video_capture_slot, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVIDEOCAPTUREIVNVPROC GLeeFuncPtr_glGetVideoCaptureivNV;
  typedef void (* GLEEPFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLint * params);
  extern GLEEPFNGLGETVIDEOCAPTURESTREAMIVNVPROC GLeeFuncPtr_glGetVideoCaptureStreamivNV;
  typedef void (* GLEEPFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLfloat * params);
  extern GLEEPFNGLGETVIDEOCAPTURESTREAMFVNVPROC GLeeFuncPtr_glGetVideoCaptureStreamfvNV;
  typedef void (* GLEEPFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVIDEOCAPTURESTREAMDVNVPROC GLeeFuncPtr_glGetVideoCaptureStreamdvNV;
  typedef GLenum (* GLEEPFNGLVIDEOCAPTURENVPROC) (GLuint  video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
  extern GLEEPFNGLVIDEOCAPTURENVPROC GLeeFuncPtr_glVideoCaptureNV;
  typedef void (* GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLint * params);
  extern GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC GLeeFuncPtr_glVideoCaptureStreamParameterivNV;
  typedef void (* GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLfloat * params);
  extern GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC GLeeFuncPtr_glVideoCaptureStreamParameterfvNV;
  typedef void (* GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLdouble * params);
  extern GLEEPFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC GLeeFuncPtr_glVideoCaptureStreamParameterdvNV;

/* GL_NV_copy_image */

/* Constants */
  typedef void (* GLEEPFNGLCOPYIMAGESUBDATANVPROC) (GLuint  srcName, GLenum  srcTarget, GLint  srcLevel, GLint  srcX, GLint  srcY, GLint  srcZ, GLuint  dstName, GLenum  dstTarget, GLint  dstLevel, GLint  dstX, GLint  dstY, GLint  dstZ, GLsizei  width, GLsizei  height, GLsizei  depth);
  extern GLEEPFNGLCOPYIMAGESUBDATANVPROC GLeeFuncPtr_glCopyImageSubDataNV;

/* GL_EXT_separate_shader_objects */

/* Constants */
  typedef void (* GLEEPFNGLUSESHADERPROGRAMEXTPROC) (GLenum  type, GLuint  program);
  extern GLEEPFNGLUSESHADERPROGRAMEXTPROC GLeeFuncPtr_glUseShaderProgramEXT;
  typedef void (* GLEEPFNGLACTIVEPROGRAMEXTPROC) (GLuint  program);
  extern GLEEPFNGLACTIVEPROGRAMEXTPROC GLeeFuncPtr_glActiveProgramEXT;
  typedef GLuint (* GLEEPFNGLCREATESHADERPROGRAMEXTPROC) (GLenum  type, const GLchar * string);
  extern GLEEPFNGLCREATESHADERPROGRAMEXTPROC GLeeFuncPtr_glCreateShaderProgramEXT;

/* GL_NV_parameter_buffer_object2 */

/* Constants */

/* GL_NV_shader_buffer_load */

/* Constants */
  typedef void (* GLEEPFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum  target, GLenum  access);
  extern GLEEPFNGLMAKEBUFFERRESIDENTNVPROC GLeeFuncPtr_glMakeBufferResidentNV;
  typedef void (* GLEEPFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum  target);
  extern GLEEPFNGLMAKEBUFFERNONRESIDENTNVPROC GLeeFuncPtr_glMakeBufferNonResidentNV;
  typedef GLboolean (* GLEEPFNGLISBUFFERRESIDENTNVPROC) (GLenum  target);
  extern GLEEPFNGLISBUFFERRESIDENTNVPROC GLeeFuncPtr_glIsBufferResidentNV;
  typedef void (* GLEEPFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint  buffer, GLenum  access);
  extern GLEEPFNGLMAKENAMEDBUFFERRESIDENTNVPROC GLeeFuncPtr_glMakeNamedBufferResidentNV;
  typedef void (* GLEEPFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint  buffer);
  extern GLEEPFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC GLeeFuncPtr_glMakeNamedBufferNonResidentNV;
  typedef GLboolean (* GLEEPFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint  buffer);
  extern GLEEPFNGLISNAMEDBUFFERRESIDENTNVPROC GLeeFuncPtr_glIsNamedBufferResidentNV;
  typedef void (* GLEEPFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum  target, GLenum  pname, GLuint64EXT * params);
  extern GLEEPFNGLGETBUFFERPARAMETERUI64VNVPROC GLeeFuncPtr_glGetBufferParameterui64vNV;
  typedef void (* GLEEPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint  buffer, GLenum  pname, GLuint64EXT * params);
  extern GLEEPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC GLeeFuncPtr_glGetNamedBufferParameterui64vNV;
  typedef void (* GLEEPFNGLGETINTEGERUI64VNVPROC) (GLenum  value, GLuint64EXT * result);
  extern GLEEPFNGLGETINTEGERUI64VNVPROC GLeeFuncPtr_glGetIntegerui64vNV;
  typedef void (* GLEEPFNGLUNIFORMUI64NVPROC) (GLint  location, GLuint64EXT  value);
  extern GLEEPFNGLUNIFORMUI64NVPROC GLeeFuncPtr_glUniformui64NV;
  typedef void (* GLEEPFNGLUNIFORMUI64VNVPROC) (GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLUNIFORMUI64VNVPROC GLeeFuncPtr_glUniformui64vNV;
  typedef void (* GLEEPFNGLGETUNIFORMUI64VNVPROC) (GLuint  program, GLint  location, GLuint64EXT * params);
  extern GLEEPFNGLGETUNIFORMUI64VNVPROC GLeeFuncPtr_glGetUniformui64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint  program, GLint  location, GLuint64EXT  value);
  extern GLEEPFNGLPROGRAMUNIFORMUI64NVPROC GLeeFuncPtr_glProgramUniformui64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORMUI64VNVPROC GLeeFuncPtr_glProgramUniformui64vNV;

/* GL_NV_vertex_buffer_unified_memory */

/* Constants */
  typedef void (* GLEEPFNGLBUFFERADDRESSRANGENVPROC) (GLenum  pname, GLuint  index, GLuint64EXT  address, GLsizeiptr  length);
  extern GLEEPFNGLBUFFERADDRESSRANGENVPROC GLeeFuncPtr_glBufferAddressRangeNV;
  typedef void (* GLEEPFNGLVERTEXFORMATNVPROC) (GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLVERTEXFORMATNVPROC GLeeFuncPtr_glVertexFormatNV;
  typedef void (* GLEEPFNGLNORMALFORMATNVPROC) (GLenum  type, GLsizei  stride);
  extern GLEEPFNGLNORMALFORMATNVPROC GLeeFuncPtr_glNormalFormatNV;
  typedef void (* GLEEPFNGLCOLORFORMATNVPROC) (GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLCOLORFORMATNVPROC GLeeFuncPtr_glColorFormatNV;
  typedef void (* GLEEPFNGLINDEXFORMATNVPROC) (GLenum  type, GLsizei  stride);
  extern GLEEPFNGLINDEXFORMATNVPROC GLeeFuncPtr_glIndexFormatNV;
  typedef void (* GLEEPFNGLTEXCOORDFORMATNVPROC) (GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLTEXCOORDFORMATNVPROC GLeeFuncPtr_glTexCoordFormatNV;
  typedef void (* GLEEPFNGLEDGEFLAGFORMATNVPROC) (GLsizei  stride);
  extern GLEEPFNGLEDGEFLAGFORMATNVPROC GLeeFuncPtr_glEdgeFlagFormatNV;
  typedef void (* GLEEPFNGLSECONDARYCOLORFORMATNVPROC) (GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLSECONDARYCOLORFORMATNVPROC GLeeFuncPtr_glSecondaryColorFormatNV;
  typedef void (* GLEEPFNGLFOGCOORDFORMATNVPROC) (GLenum  type, GLsizei  stride);
  extern GLEEPFNGLFOGCOORDFORMATNVPROC GLeeFuncPtr_glFogCoordFormatNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBFORMATNVPROC) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride);
  extern GLEEPFNGLVERTEXATTRIBFORMATNVPROC GLeeFuncPtr_glVertexAttribFormatNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLVERTEXATTRIBIFORMATNVPROC GLeeFuncPtr_glVertexAttribIFormatNV;
  typedef void (* GLEEPFNGLGETINTEGERUI64I_VNVPROC) (GLenum  value, GLuint  index, GLuint64EXT * result);
  extern GLEEPFNGLGETINTEGERUI64I_VNVPROC GLeeFuncPtr_glGetIntegerui64i_vNV;

/* GL_NV_texture_barrier */

/* Constants */
  typedef void (* GLEEPFNGLTEXTUREBARRIERNVPROC) ();
  extern GLEEPFNGLTEXTUREBARRIERNVPROC GLeeFuncPtr_glTextureBarrierNV;

/* GL_AMD_shader_stencil_export */

/* Constants */

/* GL_AMD_seamless_cubemap_per_texture */

/* Constants */

/* GL_AMD_conservative_depth */

/* Constants */

/* GL_EXT_shader_image_load_store */

/* Constants */
  typedef void (* GLEEPFNGLBINDIMAGETEXTUREEXTPROC) (GLuint  index, GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  access, GLint  format);
  extern GLEEPFNGLBINDIMAGETEXTUREEXTPROC GLeeFuncPtr_glBindImageTextureEXT;
  typedef void (* GLEEPFNGLMEMORYBARRIEREXTPROC) (GLbitfield  barriers);
  extern GLEEPFNGLMEMORYBARRIEREXTPROC GLeeFuncPtr_glMemoryBarrierEXT;

/* GL_EXT_vertex_attrib_64bit */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBL1DEXTPROC) (GLuint  index, GLdouble  x);
  extern GLEEPFNGLVERTEXATTRIBL1DEXTPROC GLeeFuncPtr_glVertexAttribL1dEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2DEXTPROC) (GLuint  index, GLdouble  x, GLdouble  y);
  extern GLEEPFNGLVERTEXATTRIBL2DEXTPROC GLeeFuncPtr_glVertexAttribL2dEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3DEXTPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z);
  extern GLEEPFNGLVERTEXATTRIBL3DEXTPROC GLeeFuncPtr_glVertexAttribL3dEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4DEXTPROC) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w);
  extern GLEEPFNGLVERTEXATTRIBL4DEXTPROC GLeeFuncPtr_glVertexAttribL4dEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL1DVEXTPROC GLeeFuncPtr_glVertexAttribL1dvEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL2DVEXTPROC GLeeFuncPtr_glVertexAttribL2dvEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL3DVEXTPROC GLeeFuncPtr_glVertexAttribL3dvEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint  index, const GLdouble * v);
  extern GLEEPFNGLVERTEXATTRIBL4DVEXTPROC GLeeFuncPtr_glVertexAttribL4dvEXT;
  typedef void (* GLEEPFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const GLvoid * pointer);
  extern GLEEPFNGLVERTEXATTRIBLPOINTEREXTPROC GLeeFuncPtr_glVertexAttribLPointerEXT;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint  index, GLenum  pname, GLdouble * params);
  extern GLEEPFNGLGETVERTEXATTRIBLDVEXTPROC GLeeFuncPtr_glGetVertexAttribLdvEXT;
  typedef void (* GLEEPFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint  vaobj, GLuint  buffer, GLuint  index, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset);
  extern GLEEPFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC GLeeFuncPtr_glVertexArrayVertexAttribLOffsetEXT;

/* GL_NV_gpu_program5 */

/* Constants */
  typedef void (* GLEEPFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum  target, GLsizei  count, const GLuint * params);
  extern GLEEPFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC GLeeFuncPtr_glProgramSubroutineParametersuivNV;
  typedef void (* GLEEPFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum  target, GLuint  index, GLuint * param);
  extern GLEEPFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC GLeeFuncPtr_glGetProgramSubroutineParameteruivNV;

/* GL_NV_gpu_shader5 */

/* Constants */
  typedef void (* GLEEPFNGLUNIFORM1I64NVPROC) (GLint  location, GLint64EXT  x);
  extern GLEEPFNGLUNIFORM1I64NVPROC GLeeFuncPtr_glUniform1i64NV;
  typedef void (* GLEEPFNGLUNIFORM2I64NVPROC) (GLint  location, GLint64EXT  x, GLint64EXT  y);
  extern GLEEPFNGLUNIFORM2I64NVPROC GLeeFuncPtr_glUniform2i64NV;
  typedef void (* GLEEPFNGLUNIFORM3I64NVPROC) (GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z);
  extern GLEEPFNGLUNIFORM3I64NVPROC GLeeFuncPtr_glUniform3i64NV;
  typedef void (* GLEEPFNGLUNIFORM4I64NVPROC) (GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w);
  extern GLEEPFNGLUNIFORM4I64NVPROC GLeeFuncPtr_glUniform4i64NV;
  typedef void (* GLEEPFNGLUNIFORM1I64VNVPROC) (GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLUNIFORM1I64VNVPROC GLeeFuncPtr_glUniform1i64vNV;
  typedef void (* GLEEPFNGLUNIFORM2I64VNVPROC) (GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLUNIFORM2I64VNVPROC GLeeFuncPtr_glUniform2i64vNV;
  typedef void (* GLEEPFNGLUNIFORM3I64VNVPROC) (GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLUNIFORM3I64VNVPROC GLeeFuncPtr_glUniform3i64vNV;
  typedef void (* GLEEPFNGLUNIFORM4I64VNVPROC) (GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLUNIFORM4I64VNVPROC GLeeFuncPtr_glUniform4i64vNV;
  typedef void (* GLEEPFNGLUNIFORM1UI64NVPROC) (GLint  location, GLuint64EXT  x);
  extern GLEEPFNGLUNIFORM1UI64NVPROC GLeeFuncPtr_glUniform1ui64NV;
  typedef void (* GLEEPFNGLUNIFORM2UI64NVPROC) (GLint  location, GLuint64EXT  x, GLuint64EXT  y);
  extern GLEEPFNGLUNIFORM2UI64NVPROC GLeeFuncPtr_glUniform2ui64NV;
  typedef void (* GLEEPFNGLUNIFORM3UI64NVPROC) (GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z);
  extern GLEEPFNGLUNIFORM3UI64NVPROC GLeeFuncPtr_glUniform3ui64NV;
  typedef void (* GLEEPFNGLUNIFORM4UI64NVPROC) (GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w);
  extern GLEEPFNGLUNIFORM4UI64NVPROC GLeeFuncPtr_glUniform4ui64NV;
  typedef void (* GLEEPFNGLUNIFORM1UI64VNVPROC) (GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLUNIFORM1UI64VNVPROC GLeeFuncPtr_glUniform1ui64vNV;
  typedef void (* GLEEPFNGLUNIFORM2UI64VNVPROC) (GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLUNIFORM2UI64VNVPROC GLeeFuncPtr_glUniform2ui64vNV;
  typedef void (* GLEEPFNGLUNIFORM3UI64VNVPROC) (GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLUNIFORM3UI64VNVPROC GLeeFuncPtr_glUniform3ui64vNV;
  typedef void (* GLEEPFNGLUNIFORM4UI64VNVPROC) (GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLUNIFORM4UI64VNVPROC GLeeFuncPtr_glUniform4ui64vNV;
  typedef void (* GLEEPFNGLGETUNIFORMI64VNVPROC) (GLuint  program, GLint  location, GLint64EXT * params);
  extern GLEEPFNGLGETUNIFORMI64VNVPROC GLeeFuncPtr_glGetUniformi64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint  program, GLint  location, GLint64EXT  x);
  extern GLEEPFNGLPROGRAMUNIFORM1I64NVPROC GLeeFuncPtr_glProgramUniform1i64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y);
  extern GLEEPFNGLPROGRAMUNIFORM2I64NVPROC GLeeFuncPtr_glProgramUniform2i64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z);
  extern GLEEPFNGLPROGRAMUNIFORM3I64NVPROC GLeeFuncPtr_glProgramUniform3i64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w);
  extern GLEEPFNGLPROGRAMUNIFORM4I64NVPROC GLeeFuncPtr_glProgramUniform4i64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM1I64VNVPROC GLeeFuncPtr_glProgramUniform1i64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM2I64VNVPROC GLeeFuncPtr_glProgramUniform2i64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM3I64VNVPROC GLeeFuncPtr_glProgramUniform3i64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM4I64VNVPROC GLeeFuncPtr_glProgramUniform4i64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint  program, GLint  location, GLuint64EXT  x);
  extern GLEEPFNGLPROGRAMUNIFORM1UI64NVPROC GLeeFuncPtr_glProgramUniform1ui64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y);
  extern GLEEPFNGLPROGRAMUNIFORM2UI64NVPROC GLeeFuncPtr_glProgramUniform2ui64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z);
  extern GLEEPFNGLPROGRAMUNIFORM3UI64NVPROC GLeeFuncPtr_glProgramUniform3ui64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w);
  extern GLEEPFNGLPROGRAMUNIFORM4UI64NVPROC GLeeFuncPtr_glProgramUniform4ui64NV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM1UI64VNVPROC GLeeFuncPtr_glProgramUniform1ui64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM2UI64VNVPROC GLeeFuncPtr_glProgramUniform2ui64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM3UI64VNVPROC GLeeFuncPtr_glProgramUniform3ui64vNV;
  typedef void (* GLEEPFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value);
  extern GLEEPFNGLPROGRAMUNIFORM4UI64VNVPROC GLeeFuncPtr_glProgramUniform4ui64vNV;

/* GL_NV_shader_buffer_store */

/* Constants */

/* GL_NV_tessellation_program5 */

/* Constants */

/* GL_NV_vertex_attrib_integer_64bit */

/* Constants */
  typedef void (* GLEEPFNGLVERTEXATTRIBL1I64NVPROC) (GLuint  index, GLint64EXT  x);
  extern GLEEPFNGLVERTEXATTRIBL1I64NVPROC GLeeFuncPtr_glVertexAttribL1i64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2I64NVPROC) (GLuint  index, GLint64EXT  x, GLint64EXT  y);
  extern GLEEPFNGLVERTEXATTRIBL2I64NVPROC GLeeFuncPtr_glVertexAttribL2i64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3I64NVPROC) (GLuint  index, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z);
  extern GLEEPFNGLVERTEXATTRIBL3I64NVPROC GLeeFuncPtr_glVertexAttribL3i64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4I64NVPROC) (GLuint  index, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w);
  extern GLEEPFNGLVERTEXATTRIBL4I64NVPROC GLeeFuncPtr_glVertexAttribL4i64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint  index, const GLint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL1I64VNVPROC GLeeFuncPtr_glVertexAttribL1i64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint  index, const GLint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL2I64VNVPROC GLeeFuncPtr_glVertexAttribL2i64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint  index, const GLint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL3I64VNVPROC GLeeFuncPtr_glVertexAttribL3i64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint  index, const GLint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL4I64VNVPROC GLeeFuncPtr_glVertexAttribL4i64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint  index, GLuint64EXT  x);
  extern GLEEPFNGLVERTEXATTRIBL1UI64NVPROC GLeeFuncPtr_glVertexAttribL1ui64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y);
  extern GLEEPFNGLVERTEXATTRIBL2UI64NVPROC GLeeFuncPtr_glVertexAttribL2ui64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z);
  extern GLEEPFNGLVERTEXATTRIBL3UI64NVPROC GLeeFuncPtr_glVertexAttribL3ui64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w);
  extern GLEEPFNGLVERTEXATTRIBL4UI64NVPROC GLeeFuncPtr_glVertexAttribL4ui64NV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint  index, const GLuint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL1UI64VNVPROC GLeeFuncPtr_glVertexAttribL1ui64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint  index, const GLuint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL2UI64VNVPROC GLeeFuncPtr_glVertexAttribL2ui64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint  index, const GLuint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL3UI64VNVPROC GLeeFuncPtr_glVertexAttribL3ui64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint  index, const GLuint64EXT * v);
  extern GLEEPFNGLVERTEXATTRIBL4UI64VNVPROC GLeeFuncPtr_glVertexAttribL4ui64vNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint  index, GLenum  pname, GLint64EXT * params);
  extern GLEEPFNGLGETVERTEXATTRIBLI64VNVPROC GLeeFuncPtr_glGetVertexAttribLi64vNV;
  typedef void (* GLEEPFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint  index, GLenum  pname, GLuint64EXT * params);
  extern GLEEPFNGLGETVERTEXATTRIBLUI64VNVPROC GLeeFuncPtr_glGetVertexAttribLui64vNV;
  typedef void (* GLEEPFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride);
  extern GLEEPFNGLVERTEXATTRIBLFORMATNVPROC GLeeFuncPtr_glVertexAttribLFormatNV;

/* GL_NV_multisample_coverage */

/* Constants */

/* GL_AMD_name_gen_delete */

/* Constants */
  typedef void (* GLEEPFNGLGENNAMESAMDPROC) (GLenum  identifier, GLuint  num, GLuint * names);
  extern GLEEPFNGLGENNAMESAMDPROC GLeeFuncPtr_glGenNamesAMD;
  typedef void (* GLEEPFNGLDELETENAMESAMDPROC) (GLenum  identifier, GLuint  num, const GLuint * names);
  extern GLEEPFNGLDELETENAMESAMDPROC GLeeFuncPtr_glDeleteNamesAMD;
  typedef GLboolean (* GLEEPFNGLISNAMEAMDPROC) (GLenum  identifier, GLuint  name);
  extern GLEEPFNGLISNAMEAMDPROC GLeeFuncPtr_glIsNameAMD;

/* GL_AMD_transform_feedback3_lines_triangles */

/* Constants */

/* GL_AMD_depth_clamp_separate */

/* Constants */

/* GL_EXT_texture_sRGB_decode */

/* Constants */

/* GL_NV_texture_multisample */

/* Constants */
  typedef void (* GLEEPFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC GLeeFuncPtr_glTexImage2DMultisampleCoverageNV;
  typedef void (* GLEEPFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC GLeeFuncPtr_glTexImage3DMultisampleCoverageNV;
  typedef void (* GLEEPFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint  texture, GLenum  target, GLsizei  samples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC GLeeFuncPtr_glTextureImage2DMultisampleNV;
  typedef void (* GLEEPFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint  texture, GLenum  target, GLsizei  samples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC GLeeFuncPtr_glTextureImage3DMultisampleNV;
  typedef void (* GLEEPFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint  texture, GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC GLeeFuncPtr_glTextureImage2DMultisampleCoverageNV;
  typedef void (* GLEEPFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint  texture, GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations);
  extern GLEEPFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC GLeeFuncPtr_glTextureImage3DMultisampleCoverageNV;

/* GL_AMD_blend_minmax_factor */

/* Constants */

/* GL_AMD_sample_positions */

/* Constants */
  typedef void (* GLEEPFNGLSETMULTISAMPLEFVAMDPROC) (GLenum  pname, GLuint  index, const GLfloat * val);
  extern GLEEPFNGLSETMULTISAMPLEFVAMDPROC GLeeFuncPtr_glSetMultisamplefvAMD;

/* GL_EXT_x11_sync_object */

/* Constants */
  typedef GLsync (* GLEEPFNGLIMPORTSYNCEXTPROC) (GLenum  external_sync_type, GLintptr  external_sync, GLbitfield  flags);
  extern GLEEPFNGLIMPORTSYNCEXTPROC GLeeFuncPtr_glImportSyncEXT;

/* GL_AMD_multi_draw_indirect */

/* Constants */
  typedef void (* GLEEPFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum  mode, const GLvoid * indirect, GLsizei  primcount, GLsizei  stride);
  extern GLEEPFNGLMULTIDRAWARRAYSINDIRECTAMDPROC GLeeFuncPtr_glMultiDrawArraysIndirectAMD;
  typedef void (* GLEEPFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum  mode, GLenum  type, const GLvoid * indirect, GLsizei  primcount, GLsizei  stride);
  extern GLEEPFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC GLeeFuncPtr_glMultiDrawElementsIndirectAMD;

/* GL_EXT_framebuffer_multisample_blit_scaled */

/* Constants */

/* GL_SGIX_texture_select */

/* Constants */

/* GL_INGR_blend_func_separate */

/* Constants */
  typedef void (* GLEEPFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum  sfactorRGB, GLenum  dfactorRGB, GLenum  sfactorAlpha, GLenum  dfactorAlpha);
  extern GLEEPFNGLBLENDFUNCSEPARATEINGRPROC GLeeFuncPtr_glBlendFuncSeparateINGR;

/* GL_SGIX_depth_pass_instrument */

/* Constants */

/* GL_SGIX_igloo_interface */

/* Constants */
  typedef void (* GLEEPFNGLIGLOOINTERFACESGIXPROC) (GLenum  pname, const GLvoid * params);
  extern GLEEPFNGLIGLOOINTERFACESGIXPROC GLeeFuncPtr_glIglooInterfaceSGIX;

/* GL_OES_compressed_paletted_texture */

/* Constants */

/* GL_OES_fixed_point */

/* Constants */

/* GL_OES_single_precision */

/* Constants */
  typedef GLvoid (* GLEEPFNGLCLEARDEPTHFOESPROC) (GLclampd depth);
  extern GLEEPFNGLCLEARDEPTHFOESPROC GLeeFuncPtr_glClearDepthfOES;

/* GL_OES_query_matrix */

/* Constants */

/* GL_OES_byte_coordinates */

/* Constants */

/* GL_NV_gpu_program4 */

/* Constants */

/* GL_NV_path_rendering */

/* Constants */

/* GL_AMD_vertex_shader_tessellator */

/* Constants */
  typedef GLvoid (* GLEEPFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);
  extern GLEEPFNGLTESSELLATIONMODEAMDPROC GLeeFuncPtr_glTessellationModeAMD;

/* GL_EXT_fragment_lighting */

/* Constants */

/* GL_EXT_texture_compression_dxt1 */

/* Constants */

/* GL_EXT_scene_marker */

/* Constants */
  typedef GLvoid (* GLEEPFNGLENDSCENEEXTPROC) ();
  extern GLEEPFNGLENDSCENEEXTPROC GLeeFuncPtr_glEndSceneEXT;

/* GL_EXT_geometry_shader4 */

/* Constants */

/* GL_EXT_texture_env */

/* Constants */

/* GL_SGIX_texture_range */

/* Constants */

/* GL_SGIX_pixel_texture_bits */

/* Constants */

/* GL_IBM_static_data */

/* Constants */

/* WGL  */


/* Extension querying variables */

extern GLboolean _GLEE_WGL_ARB_buffer_region;
extern GLboolean _GLEE_WGL_ARB_multisample;
extern GLboolean _GLEE_WGL_ARB_extensions_string;
extern GLboolean _GLEE_WGL_ARB_pixel_format;
extern GLboolean _GLEE_WGL_ARB_make_current_read;
extern GLboolean _GLEE_WGL_ARB_pbuffer;
extern GLboolean _GLEE_WGL_ARB_render_texture;
extern GLboolean _GLEE_WGL_ARB_pixel_format_float;
extern GLboolean _GLEE_WGL_ARB_framebuffer_sRGB;
extern GLboolean _GLEE_WGL_ARB_create_context;
extern GLboolean _GLEE_WGL_ARB_create_context_profile;
extern GLboolean _GLEE_WGL_ARB_create_context_robustness;
extern GLboolean _GLEE_WGL_EXT_make_current_read;
extern GLboolean _GLEE_WGL_EXT_pixel_format;
extern GLboolean _GLEE_WGL_EXT_pbuffer;
extern GLboolean _GLEE_WGL_EXT_depth_float;
extern GLboolean _GLEE_WGL_3DFX_multisample;
extern GLboolean _GLEE_WGL_EXT_multisample;
extern GLboolean _GLEE_WGL_I3D_digital_video_control;
extern GLboolean _GLEE_WGL_I3D_gamma;
extern GLboolean _GLEE_WGL_I3D_genlock;
extern GLboolean _GLEE_WGL_I3D_image_buffer;
extern GLboolean _GLEE_WGL_I3D_swap_frame_lock;
extern GLboolean _GLEE_WGL_NV_render_depth_texture;
extern GLboolean _GLEE_WGL_NV_render_texture_rectangle;
extern GLboolean _GLEE_WGL_ATI_pixel_format_float;
extern GLboolean _GLEE_WGL_NV_float_buffer;
extern GLboolean _GLEE_WGL_3DL_stereo_control;
extern GLboolean _GLEE_WGL_EXT_pixel_format_packed_float;
extern GLboolean _GLEE_WGL_EXT_framebuffer_sRGB;
extern GLboolean _GLEE_WGL_NV_present_video;
extern GLboolean _GLEE_WGL_NV_swap_group;
extern GLboolean _GLEE_WGL_NV_gpu_affinity;
extern GLboolean _GLEE_WGL_AMD_gpu_association;
extern GLboolean _GLEE_WGL_NV_copy_image;
extern GLboolean _GLEE_WGL_NV_multisample_coverage;
extern GLboolean _GLEE_WGL_EXT_create_context_es2_profile;
extern GLboolean _GLEE_WGL_NV_DX_interop;
extern GLboolean _GLEE_WGL_EXT_display_color_table;
extern GLboolean _GLEE_WGL_EXT_extensions_string;
extern GLboolean _GLEE_WGL_EXT_swap_control;
extern GLboolean _GLEE_WGL_NV_vertex_array_range;
extern GLboolean _GLEE_WGL_OML_sync_control;
extern GLboolean _GLEE_WGL_I3D_swap_frame_usage;
extern GLboolean _GLEE_WGL_NV_video_output;

/* Aliases for extension querying variables */


/* WGL_ARB_buffer_region */

/* Constants */

/* WGL_ARB_multisample */

/* Constants */

/* WGL_ARB_extensions_string */

/* Constants */

/* WGL_ARB_pixel_format */

/* Constants */

/* WGL_ARB_make_current_read */

/* Constants */

/* WGL_ARB_pbuffer */

/* Constants */

/* WGL_ARB_render_texture */

/* Constants */

/* WGL_ARB_pixel_format_float */

/* Constants */

/* WGL_ARB_framebuffer_sRGB */

/* Constants */

/* WGL_ARB_create_context */

/* Constants */

/* WGL_ARB_create_context_profile */

/* Constants */

/* WGL_ARB_create_context_robustness */

/* Constants */

/* WGL_EXT_make_current_read */

/* Constants */

/* WGL_EXT_pixel_format */

/* Constants */

/* WGL_EXT_pbuffer */

/* Constants */

/* WGL_EXT_depth_float */

/* Constants */

/* WGL_3DFX_multisample */

/* Constants */

/* WGL_EXT_multisample */

/* Constants */

/* WGL_I3D_digital_video_control */

/* Constants */

/* WGL_I3D_gamma */

/* Constants */

/* WGL_I3D_genlock */

/* Constants */

/* WGL_I3D_image_buffer */

/* Constants */

/* WGL_I3D_swap_frame_lock */

/* Constants */

/* WGL_NV_render_depth_texture */

/* Constants */

/* WGL_NV_render_texture_rectangle */

/* Constants */

/* WGL_ATI_pixel_format_float */

/* Constants */

/* WGL_NV_float_buffer */

/* Constants */

/* WGL_3DL_stereo_control */

/* Constants */

/* WGL_EXT_pixel_format_packed_float */

/* Constants */

/* WGL_EXT_framebuffer_sRGB */

/* Constants */

/* WGL_NV_present_video */

/* Constants */

/* WGL_NV_swap_group */

/* Constants */

/* WGL_NV_gpu_affinity */

/* Constants */

/* WGL_AMD_gpu_association */

/* Constants */

/* WGL_NV_copy_image */

/* Constants */

/* WGL_NV_multisample_coverage */

/* Constants */

/* WGL_EXT_create_context_es2_profile */

/* Constants */

/* WGL_NV_DX_interop */

/* Constants */
  typedef BOOL (* GLEEPFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void * dxObject, HANDLE  shareHandle);
  extern GLEEPFNWGLDXSETRESOURCESHAREHANDLENVPROC GLeeFuncPtr_wglDXSetResourceShareHandleNV;
  typedef HANDLE (* GLEEPFNWGLDXOPENDEVICENVPROC) (void * dxDevice);
  extern GLEEPFNWGLDXOPENDEVICENVPROC GLeeFuncPtr_wglDXOpenDeviceNV;
  typedef BOOL (* GLEEPFNWGLDXCLOSEDEVICENVPROC) (HANDLE  hDevice);
  extern GLEEPFNWGLDXCLOSEDEVICENVPROC GLeeFuncPtr_wglDXCloseDeviceNV;
  typedef HANDLE (* GLEEPFNWGLDXREGISTEROBJECTNVPROC) (HANDLE  hDevice, void * dxObject, GLuint  name, GLenum  type, GLenum  access);
  extern GLEEPFNWGLDXREGISTEROBJECTNVPROC GLeeFuncPtr_wglDXRegisterObjectNV;
  typedef BOOL (* GLEEPFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE  hDevice, HANDLE  hObject);
  extern GLEEPFNWGLDXUNREGISTEROBJECTNVPROC GLeeFuncPtr_wglDXUnregisterObjectNV;
  typedef BOOL (* GLEEPFNWGLDXOBJECTACCESSNVPROC) (HANDLE  hObject, GLenum  access);
  extern GLEEPFNWGLDXOBJECTACCESSNVPROC GLeeFuncPtr_wglDXObjectAccessNV;
  typedef BOOL (* GLEEPFNWGLDXLOCKOBJECTSNVPROC) (HANDLE  hDevice, GLint  count, HANDLE * hObjects);
  extern GLEEPFNWGLDXLOCKOBJECTSNVPROC GLeeFuncPtr_wglDXLockObjectsNV;
  typedef BOOL (* GLEEPFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE  hDevice, GLint  count, HANDLE * hObjects);
  extern GLEEPFNWGLDXUNLOCKOBJECTSNVPROC GLeeFuncPtr_wglDXUnlockObjectsNV;

/* WGL_EXT_display_color_table */

/* Constants */
  typedef GLboolean (* GLEEPFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort  id);
  extern GLEEPFNWGLCREATEDISPLAYCOLORTABLEEXTPROC GLeeFuncPtr_wglCreateDisplayColorTableEXT;
  typedef GLboolean (* GLEEPFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort * table, GLuint  length);
  extern GLEEPFNWGLLOADDISPLAYCOLORTABLEEXTPROC GLeeFuncPtr_wglLoadDisplayColorTableEXT;
  typedef GLboolean (* GLEEPFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort  id);
  extern GLEEPFNWGLBINDDISPLAYCOLORTABLEEXTPROC GLeeFuncPtr_wglBindDisplayColorTableEXT;
  typedef VOID (* GLEEPFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort  id);
  extern GLEEPFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC GLeeFuncPtr_wglDestroyDisplayColorTableEXT;

/* WGL_EXT_extensions_string */

/* Constants */
  typedef const char * (* GLEEPFNWGLGETEXTENSIONSSTRINGEXTPROC) ();
  extern GLEEPFNWGLGETEXTENSIONSSTRINGEXTPROC GLeeFuncPtr_wglGetExtensionsStringEXT;

/* WGL_EXT_swap_control */

/* Constants */
  typedef BOOL (* GLEEPFNWGLSWAPINTERVALEXTPROC) (int  interval);
  extern GLEEPFNWGLSWAPINTERVALEXTPROC GLeeFuncPtr_wglSwapIntervalEXT;
  typedef int (* GLEEPFNWGLGETSWAPINTERVALEXTPROC) ();
  extern GLEEPFNWGLGETSWAPINTERVALEXTPROC GLeeFuncPtr_wglGetSwapIntervalEXT;

/* WGL_NV_vertex_array_range */

/* Constants */
  typedef void* (* GLEEPFNWGLALLOCATEMEMORYNVPROC) (GLsizei  size, GLfloat  readfreq, GLfloat  writefreq, GLfloat  priority);
  extern GLEEPFNWGLALLOCATEMEMORYNVPROC GLeeFuncPtr_wglAllocateMemoryNV;
  typedef void (* GLEEPFNWGLFREEMEMORYNVPROC) (void * pointer);
  extern GLEEPFNWGLFREEMEMORYNVPROC GLeeFuncPtr_wglFreeMemoryNV;

/* WGL_OML_sync_control */

/* Constants */
  typedef BOOL (* GLEEPFNWGLGETSYNCVALUESOMLPROC) (HDC  hdc, INT64 * ust, INT64 * msc, INT64 * sbc);
  extern GLEEPFNWGLGETSYNCVALUESOMLPROC GLeeFuncPtr_wglGetSyncValuesOML;
  typedef BOOL (* GLEEPFNWGLGETMSCRATEOMLPROC) (HDC  hdc, INT32 * numerator, INT32 * denominator);
  extern GLEEPFNWGLGETMSCRATEOMLPROC GLeeFuncPtr_wglGetMscRateOML;
  typedef INT64 (* GLEEPFNWGLSWAPBUFFERSMSCOMLPROC) (HDC  hdc, INT64  target_msc, INT64  divisor, INT64  remainder);
  extern GLEEPFNWGLSWAPBUFFERSMSCOMLPROC GLeeFuncPtr_wglSwapBuffersMscOML;
  typedef INT64 (* GLEEPFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC  hdc, int  fuPlanes, INT64  target_msc, INT64  divisor, INT64  remainder);
  extern GLEEPFNWGLSWAPLAYERBUFFERSMSCOMLPROC GLeeFuncPtr_wglSwapLayerBuffersMscOML;
  typedef BOOL (* GLEEPFNWGLWAITFORMSCOMLPROC) (HDC  hdc, INT64  target_msc, INT64  divisor, INT64  remainder, INT64 * ust, INT64 * msc, INT64 * sbc);
  extern GLEEPFNWGLWAITFORMSCOMLPROC GLeeFuncPtr_wglWaitForMscOML;
  typedef BOOL (* GLEEPFNWGLWAITFORSBCOMLPROC) (HDC  hdc, INT64  target_sbc, INT64 * ust, INT64 * msc, INT64 * sbc);
  extern GLEEPFNWGLWAITFORSBCOMLPROC GLeeFuncPtr_wglWaitForSbcOML;

/* WGL_I3D_swap_frame_usage */

/* Constants */
  typedef BOOL (* GLEEPFNWGLGETFRAMEUSAGEI3DPROC) (float * pUsage);
  extern GLEEPFNWGLGETFRAMEUSAGEI3DPROC GLeeFuncPtr_wglGetFrameUsageI3D;
  typedef BOOL (* GLEEPFNWGLBEGINFRAMETRACKINGI3DPROC) ();
  extern GLEEPFNWGLBEGINFRAMETRACKINGI3DPROC GLeeFuncPtr_wglBeginFrameTrackingI3D;
  typedef BOOL (* GLEEPFNWGLENDFRAMETRACKINGI3DPROC) ();
  extern GLEEPFNWGLENDFRAMETRACKINGI3DPROC GLeeFuncPtr_wglEndFrameTrackingI3D;
  typedef BOOL (* GLEEPFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD * pFrameCount, DWORD * pMissedFrames, float * pLastMissedUsage);
  extern GLEEPFNWGLQUERYFRAMETRACKINGI3DPROC GLeeFuncPtr_wglQueryFrameTrackingI3D;

/* WGL_NV_video_output */

/* Constants */
  typedef BOOL (* GLEEPFNWGLGETVIDEODEVICENVPROC) (HDC  hDC, int  numDevices, HPVIDEODEV * hVideoDevice);
  extern GLEEPFNWGLGETVIDEODEVICENVPROC GLeeFuncPtr_wglGetVideoDeviceNV;
  typedef BOOL (* GLEEPFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV  hVideoDevice);
  extern GLEEPFNWGLRELEASEVIDEODEVICENVPROC GLeeFuncPtr_wglReleaseVideoDeviceNV;
  typedef BOOL (* GLEEPFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV  hVideoDevice, HPBUFFERARB  hPbuffer, int  iVideoBuffer);
  extern GLEEPFNWGLBINDVIDEOIMAGENVPROC GLeeFuncPtr_wglBindVideoImageNV;
  typedef BOOL (* GLEEPFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB  hPbuffer, int  iVideoBuffer);
  extern GLEEPFNWGLRELEASEVIDEOIMAGENVPROC GLeeFuncPtr_wglReleaseVideoImageNV;
  typedef BOOL (* GLEEPFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB  hPbuffer, int  iBufferType, unsigned long * pulCounterPbuffer, BOOL  bBlock);
  extern GLEEPFNWGLSENDPBUFFERTOVIDEONVPROC GLeeFuncPtr_wglSendPbufferToVideoNV;
  typedef BOOL (* GLEEPFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV  hpVideoDevice, unsigned long * pulCounterOutputPbuffer, unsigned long * pulCounterOutputVideo);
  extern GLEEPFNWGLGETVIDEOINFONVPROC GLeeFuncPtr_wglGetVideoInfoNV;

/* Extension querying variables */

extern GLboolean _GLEE_GLX_VERSION_1_3;
extern GLboolean _GLEE_GLX_VERSION_1_4;
extern GLboolean _GLEE_GLX_ARB_multisample;
extern GLboolean _GLEE_GLX_ARB_vertex_buffer_object;
extern GLboolean _GLEE_GLX_ARB_fbconfig_float;
extern GLboolean _GLEE_GLX_ARB_framebuffer_sRGB;
extern GLboolean _GLEE_GLX_ARB_create_context;
extern GLboolean _GLEE_GLX_ARB_create_context_profile;
extern GLboolean _GLEE_GLX_ARB_create_context_robustness;
extern GLboolean _GLEE_GLX_SGIS_multisample;
extern GLboolean _GLEE_GLX_EXT_visual_info;
extern GLboolean _GLEE_GLX_SGI_swap_control;
extern GLboolean _GLEE_GLX_SGI_video_sync;
extern GLboolean _GLEE_GLX_SGI_make_current_read;
extern GLboolean _GLEE_GLX_EXT_visual_rating;
extern GLboolean _GLEE_GLX_EXT_import_context;
extern GLboolean _GLEE_GLX_SGIX_fbconfig;
extern GLboolean _GLEE_GLX_SGIX_pbuffer;
extern GLboolean _GLEE_GLX_SGI_cushion;
extern GLboolean _GLEE_GLX_SGIX_video_resize;
extern GLboolean _GLEE_GLX_SGIX_swap_group;
extern GLboolean _GLEE_GLX_SGIX_swap_barrier;
extern GLboolean _GLEE_GLX_SGIS_blended_overlay;
extern GLboolean _GLEE_GLX_SGIS_shared_multisample;
extern GLboolean _GLEE_GLX_SUN_get_transparent_index;
extern GLboolean _GLEE_GLX_3DFX_multisample;
extern GLboolean _GLEE_GLX_MESA_copy_sub_buffer;
extern GLboolean _GLEE_GLX_MESA_pixmap_colormap;
extern GLboolean _GLEE_GLX_MESA_release_buffers;
extern GLboolean _GLEE_GLX_MESA_set_3dfx_mode;
extern GLboolean _GLEE_GLX_SGIX_visual_select_group;
extern GLboolean _GLEE_GLX_OML_swap_method;
extern GLboolean _GLEE_GLX_OML_sync_control;
extern GLboolean _GLEE_GLX_NV_float_buffer;
extern GLboolean _GLEE_GLX_SGIX_hyperpipe;
extern GLboolean _GLEE_GLX_MESA_agp_offset;
extern GLboolean _GLEE_GLX_EXT_fbconfig_packed_float;
extern GLboolean _GLEE_GLX_EXT_framebuffer_sRGB;
extern GLboolean _GLEE_GLX_EXT_texture_from_pixmap;
extern GLboolean _GLEE_GLX_NV_present_video;
extern GLboolean _GLEE_GLX_NV_video_out;
extern GLboolean _GLEE_GLX_NV_swap_group;
extern GLboolean _GLEE_GLX_NV_video_capture;
extern GLboolean _GLEE_GLX_EXT_swap_control;
extern GLboolean _GLEE_GLX_NV_copy_image;
extern GLboolean _GLEE_GLX_INTEL_swap_event;
extern GLboolean _GLEE_GLX_NV_multisample_coverage;
extern GLboolean _GLEE_GLX_AMD_gpu_association;
extern GLboolean _GLEE_GLX_EXT_create_context_es2_profile;
extern GLboolean _GLEE_GLX_NV_video_output;
extern GLboolean _GLEE_GLX_EXT_scene_marker;

/* Aliases for extension querying variables */


/* GLX_VERSION_1_3 */

/* Constants */
  typedef GLXFBConfig * (* GLEEPFNGLXGETFBCONFIGSPROC) (Display * dpy, int  screen, int * nelements);
  extern GLEEPFNGLXGETFBCONFIGSPROC GLeeFuncPtr_glXGetFBConfigs;
  typedef GLXFBConfig * (* GLEEPFNGLXCHOOSEFBCONFIGPROC) (Display * dpy, int  screen, const int * attrib_list, int * nelements);
  extern GLEEPFNGLXCHOOSEFBCONFIGPROC GLeeFuncPtr_glXChooseFBConfig;
  typedef int (* GLEEPFNGLXGETFBCONFIGATTRIBPROC) (Display * dpy, GLXFBConfig  config, int  attribute, int * value);
  extern GLEEPFNGLXGETFBCONFIGATTRIBPROC GLeeFuncPtr_glXGetFBConfigAttrib;
  typedef XVisualInfo * (* GLEEPFNGLXGETVISUALFROMFBCONFIGPROC) (Display * dpy, GLXFBConfig  config);
  extern GLEEPFNGLXGETVISUALFROMFBCONFIGPROC GLeeFuncPtr_glXGetVisualFromFBConfig;
  typedef GLXWindow (* GLEEPFNGLXCREATEWINDOWPROC) (Display * dpy, GLXFBConfig  config, Window  win, const int * attrib_list);
  extern GLEEPFNGLXCREATEWINDOWPROC GLeeFuncPtr_glXCreateWindow;
  typedef void (* GLEEPFNGLXDESTROYWINDOWPROC) (Display * dpy, GLXWindow  win);
  extern GLEEPFNGLXDESTROYWINDOWPROC GLeeFuncPtr_glXDestroyWindow;
  typedef GLXPixmap (* GLEEPFNGLXCREATEPIXMAPPROC) (Display * dpy, GLXFBConfig  config, Pixmap  pixmap, const int * attrib_list);
  extern GLEEPFNGLXCREATEPIXMAPPROC GLeeFuncPtr_glXCreatePixmap;
  typedef void (* GLEEPFNGLXDESTROYPIXMAPPROC) (Display * dpy, GLXPixmap  pixmap);
  extern GLEEPFNGLXDESTROYPIXMAPPROC GLeeFuncPtr_glXDestroyPixmap;
  typedef GLXPbuffer (* GLEEPFNGLXCREATEPBUFFERPROC) (Display * dpy, GLXFBConfig  config, const int * attrib_list);
  extern GLEEPFNGLXCREATEPBUFFERPROC GLeeFuncPtr_glXCreatePbuffer;
  typedef void (* GLEEPFNGLXDESTROYPBUFFERPROC) (Display * dpy, GLXPbuffer  pbuf);
  extern GLEEPFNGLXDESTROYPBUFFERPROC GLeeFuncPtr_glXDestroyPbuffer;
  typedef void (* GLEEPFNGLXQUERYDRAWABLEPROC) (Display * dpy, GLXDrawable  draw, int  attribute, unsigned int * value);
  extern GLEEPFNGLXQUERYDRAWABLEPROC GLeeFuncPtr_glXQueryDrawable;
  typedef GLXContext (* GLEEPFNGLXCREATENEWCONTEXTPROC) (Display * dpy, GLXFBConfig  config, int  render_type, GLXContext  share_list, Bool  direct);
  extern GLEEPFNGLXCREATENEWCONTEXTPROC GLeeFuncPtr_glXCreateNewContext;
  typedef Bool (* GLEEPFNGLXMAKECONTEXTCURRENTPROC) (Display * dpy, GLXDrawable  draw, GLXDrawable  read, GLXContext  ctx);
  extern GLEEPFNGLXMAKECONTEXTCURRENTPROC GLeeFuncPtr_glXMakeContextCurrent;
  typedef GLXDrawable (* GLEEPFNGLXGETCURRENTREADDRAWABLEPROC) ();
  extern GLEEPFNGLXGETCURRENTREADDRAWABLEPROC GLeeFuncPtr_glXGetCurrentReadDrawable;
  typedef Display * (* GLEEPFNGLXGETCURRENTDISPLAYPROC) ();
  extern GLEEPFNGLXGETCURRENTDISPLAYPROC GLeeFuncPtr_glXGetCurrentDisplay;
  typedef int (* GLEEPFNGLXQUERYCONTEXTPROC) (Display * dpy, GLXContext  ctx, int  attribute, int * value);
  extern GLEEPFNGLXQUERYCONTEXTPROC GLeeFuncPtr_glXQueryContext;
  typedef void (* GLEEPFNGLXSELECTEVENTPROC) (Display * dpy, GLXDrawable  draw, unsigned long  event_mask);
  extern GLEEPFNGLXSELECTEVENTPROC GLeeFuncPtr_glXSelectEvent;
  typedef void (* GLEEPFNGLXGETSELECTEDEVENTPROC) (Display * dpy, GLXDrawable  draw, unsigned long * event_mask);
  extern GLEEPFNGLXGETSELECTEDEVENTPROC GLeeFuncPtr_glXGetSelectedEvent;

/* GLX_VERSION_1_4 */

/* Constants */
  typedef __GLXextFuncPtr (* GLEEPFNGLXGETPROCADDRESSPROC) (const GLubyte * procName);
  extern GLEEPFNGLXGETPROCADDRESSPROC GLeeFuncPtr_glXGetProcAddress;

/* GLX_ARB_multisample */

/* Constants */

/* GLX_ARB_vertex_buffer_object */

/* Constants */

/* GLX_ARB_fbconfig_float */

/* Constants */

/* GLX_ARB_framebuffer_sRGB */

/* Constants */

/* GLX_ARB_create_context */

/* Constants */
  typedef GLXContext (* GLEEPFNGLXCREATECONTEXTATTRIBSARBPROC) (Display * dpy, GLXFBConfig  config, GLXContext  share_context, Bool  direct, const int * attrib_list);
  extern GLEEPFNGLXCREATECONTEXTATTRIBSARBPROC GLeeFuncPtr_glXCreateContextAttribsARB;

/* GLX_ARB_create_context_profile */

/* Constants */

/* GLX_ARB_create_context_robustness */

/* Constants */

/* GLX_SGIS_multisample */

/* Constants */

/* GLX_EXT_visual_info */

/* Constants */

/* GLX_SGI_swap_control */

/* Constants */
  typedef int (* GLEEPFNGLXSWAPINTERVALSGIPROC) (int  interval);
  extern GLEEPFNGLXSWAPINTERVALSGIPROC GLeeFuncPtr_glXSwapIntervalSGI;

/* GLX_SGI_video_sync */

/* Constants */
  typedef int (* GLEEPFNGLXGETVIDEOSYNCSGIPROC) (unsigned int * count);
  extern GLEEPFNGLXGETVIDEOSYNCSGIPROC GLeeFuncPtr_glXGetVideoSyncSGI;
  typedef int (* GLEEPFNGLXWAITVIDEOSYNCSGIPROC) (int  divisor, int  remainder, unsigned int * count);
  extern GLEEPFNGLXWAITVIDEOSYNCSGIPROC GLeeFuncPtr_glXWaitVideoSyncSGI;

/* GLX_SGI_make_current_read */

/* Constants */
  typedef Bool (* GLEEPFNGLXMAKECURRENTREADSGIPROC) (Display * dpy, GLXDrawable  draw, GLXDrawable  read, GLXContext  ctx);
  extern GLEEPFNGLXMAKECURRENTREADSGIPROC GLeeFuncPtr_glXMakeCurrentReadSGI;
  typedef GLXDrawable (* GLEEPFNGLXGETCURRENTREADDRAWABLESGIPROC) ();
  extern GLEEPFNGLXGETCURRENTREADDRAWABLESGIPROC GLeeFuncPtr_glXGetCurrentReadDrawableSGI;

/* GLX_EXT_visual_rating */

/* Constants */

/* GLX_EXT_import_context */

/* Constants */
  typedef Display * (* GLEEPFNGLXGETCURRENTDISPLAYEXTPROC) ();
  extern GLEEPFNGLXGETCURRENTDISPLAYEXTPROC GLeeFuncPtr_glXGetCurrentDisplayEXT;
  typedef int (* GLEEPFNGLXQUERYCONTEXTINFOEXTPROC) (Display * dpy, GLXContext  context, int  attribute, int * value);
  extern GLEEPFNGLXQUERYCONTEXTINFOEXTPROC GLeeFuncPtr_glXQueryContextInfoEXT;
  typedef GLXContextID (* GLEEPFNGLXGETCONTEXTIDEXTPROC) (const GLXContext  context);
  extern GLEEPFNGLXGETCONTEXTIDEXTPROC GLeeFuncPtr_glXGetContextIDEXT;
  typedef GLXContext (* GLEEPFNGLXIMPORTCONTEXTEXTPROC) (Display * dpy, GLXContextID  contextID);
  extern GLEEPFNGLXIMPORTCONTEXTEXTPROC GLeeFuncPtr_glXImportContextEXT;
  typedef void (* GLEEPFNGLXFREECONTEXTEXTPROC) (Display * dpy, GLXContext  context);
  extern GLEEPFNGLXFREECONTEXTEXTPROC GLeeFuncPtr_glXFreeContextEXT;

/* GLX_SGIX_fbconfig */

/* Constants */
  typedef int (* GLEEPFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display * dpy, GLXFBConfigSGIX  config, int  attribute, int * value);
  extern GLEEPFNGLXGETFBCONFIGATTRIBSGIXPROC GLeeFuncPtr_glXGetFBConfigAttribSGIX;
  typedef GLXFBConfigSGIX * (* GLEEPFNGLXCHOOSEFBCONFIGSGIXPROC) (Display * dpy, int  screen, int * attrib_list, int * nelements);
  extern GLEEPFNGLXCHOOSEFBCONFIGSGIXPROC GLeeFuncPtr_glXChooseFBConfigSGIX;
  typedef GLXPixmap (* GLEEPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX  config, Pixmap  pixmap);
  extern GLEEPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC GLeeFuncPtr_glXCreateGLXPixmapWithConfigSGIX;
  typedef GLXContext (* GLEEPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX  config, int  render_type, GLXContext  share_list, Bool  direct);
  extern GLEEPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC GLeeFuncPtr_glXCreateContextWithConfigSGIX;
  typedef XVisualInfo * (* GLEEPFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX  config);
  extern GLEEPFNGLXGETVISUALFROMFBCONFIGSGIXPROC GLeeFuncPtr_glXGetVisualFromFBConfigSGIX;
  typedef GLXFBConfigSGIX (* GLEEPFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display * dpy, XVisualInfo * vis);
  extern GLEEPFNGLXGETFBCONFIGFROMVISUALSGIXPROC GLeeFuncPtr_glXGetFBConfigFromVisualSGIX;

/* GLX_SGIX_pbuffer */

/* Constants */
  typedef GLXPbufferSGIX (* GLEEPFNGLXCREATEGLXPBUFFERSGIXPROC) (Display * dpy, GLXFBConfigSGIX  config, unsigned int  width, unsigned int  height, int * attrib_list);
  extern GLEEPFNGLXCREATEGLXPBUFFERSGIXPROC GLeeFuncPtr_glXCreateGLXPbufferSGIX;
  typedef void (* GLEEPFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display * dpy, GLXPbufferSGIX  pbuf);
  extern GLEEPFNGLXDESTROYGLXPBUFFERSGIXPROC GLeeFuncPtr_glXDestroyGLXPbufferSGIX;
  typedef int (* GLEEPFNGLXQUERYGLXPBUFFERSGIXPROC) (Display * dpy, GLXPbufferSGIX  pbuf, int  attribute, unsigned int * value);
  extern GLEEPFNGLXQUERYGLXPBUFFERSGIXPROC GLeeFuncPtr_glXQueryGLXPbufferSGIX;
  typedef void (* GLEEPFNGLXSELECTEVENTSGIXPROC) (Display * dpy, GLXDrawable  drawable, unsigned long  mask);
  extern GLEEPFNGLXSELECTEVENTSGIXPROC GLeeFuncPtr_glXSelectEventSGIX;
  typedef void (* GLEEPFNGLXGETSELECTEDEVENTSGIXPROC) (Display * dpy, GLXDrawable  drawable, unsigned long * mask);
  extern GLEEPFNGLXGETSELECTEDEVENTSGIXPROC GLeeFuncPtr_glXGetSelectedEventSGIX;

/* GLX_SGI_cushion */

/* Constants */
  typedef void (* GLEEPFNGLXCUSHIONSGIPROC) (Display * dpy, Window  window, float  cushion);
  extern GLEEPFNGLXCUSHIONSGIPROC GLeeFuncPtr_glXCushionSGI;

/* GLX_SGIX_video_resize */

/* Constants */
  typedef int (* GLEEPFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display * display, int  screen, int  channel, Window  window);
  extern GLEEPFNGLXBINDCHANNELTOWINDOWSGIXPROC GLeeFuncPtr_glXBindChannelToWindowSGIX;
  typedef int (* GLEEPFNGLXCHANNELRECTSGIXPROC) (Display * display, int  screen, int  channel, int  x, int  y, int  w, int  h);
  extern GLEEPFNGLXCHANNELRECTSGIXPROC GLeeFuncPtr_glXChannelRectSGIX;
  typedef int (* GLEEPFNGLXQUERYCHANNELRECTSGIXPROC) (Display * display, int  screen, int  channel, int * dx, int * dy, int * dw, int * dh);
  extern GLEEPFNGLXQUERYCHANNELRECTSGIXPROC GLeeFuncPtr_glXQueryChannelRectSGIX;
  typedef int (* GLEEPFNGLXQUERYCHANNELDELTASSGIXPROC) (Display * display, int  screen, int  channel, int * x, int * y, int * w, int * h);
  extern GLEEPFNGLXQUERYCHANNELDELTASSGIXPROC GLeeFuncPtr_glXQueryChannelDeltasSGIX;
  typedef int (* GLEEPFNGLXCHANNELRECTSYNCSGIXPROC) (Display * display, int  screen, int  channel, GLenum  synctype);
  extern GLEEPFNGLXCHANNELRECTSYNCSGIXPROC GLeeFuncPtr_glXChannelRectSyncSGIX;

/* GLX_SGIX_swap_group */

/* Constants */
  typedef void (* GLEEPFNGLXJOINSWAPGROUPSGIXPROC) (Display * dpy, GLXDrawable  drawable, GLXDrawable  member);
  extern GLEEPFNGLXJOINSWAPGROUPSGIXPROC GLeeFuncPtr_glXJoinSwapGroupSGIX;

/* GLX_SGIX_swap_barrier */

/* Constants */
  typedef void (* GLEEPFNGLXBINDSWAPBARRIERSGIXPROC) (Display * dpy, GLXDrawable  drawable, int  barrier);
  extern GLEEPFNGLXBINDSWAPBARRIERSGIXPROC GLeeFuncPtr_glXBindSwapBarrierSGIX;
  typedef Bool (* GLEEPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display * dpy, int  screen, int * max);
  extern GLEEPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC GLeeFuncPtr_glXQueryMaxSwapBarriersSGIX;

/* GLX_SGIS_blended_overlay */

/* Constants */

/* GLX_SGIS_shared_multisample */

/* Constants */

/* GLX_SUN_get_transparent_index */

/* Constants */
  typedef Status (* GLEEPFNGLXGETTRANSPARENTINDEXSUNPROC) (Display * dpy, Window  overlay, Window  underlay, long * pTransparentIndex);
  extern GLEEPFNGLXGETTRANSPARENTINDEXSUNPROC GLeeFuncPtr_glXGetTransparentIndexSUN;

/* GLX_3DFX_multisample */

/* Constants */

/* GLX_MESA_copy_sub_buffer */

/* Constants */
  typedef void (* GLEEPFNGLXCOPYSUBBUFFERMESAPROC) (Display * dpy, GLXDrawable  drawable, int  x, int  y, int  width, int  height);
  extern GLEEPFNGLXCOPYSUBBUFFERMESAPROC GLeeFuncPtr_glXCopySubBufferMESA;

/* GLX_MESA_pixmap_colormap */

/* Constants */
  typedef GLXPixmap (* GLEEPFNGLXCREATEGLXPIXMAPMESAPROC) (Display * dpy, XVisualInfo * visual, Pixmap  pixmap, Colormap  cmap);
  extern GLEEPFNGLXCREATEGLXPIXMAPMESAPROC GLeeFuncPtr_glXCreateGLXPixmapMESA;

/* GLX_MESA_release_buffers */

/* Constants */
  typedef Bool (* GLEEPFNGLXRELEASEBUFFERSMESAPROC) (Display * dpy, GLXDrawable  drawable);
  extern GLEEPFNGLXRELEASEBUFFERSMESAPROC GLeeFuncPtr_glXReleaseBuffersMESA;

/* GLX_MESA_set_3dfx_mode */

/* Constants */
  typedef Bool (* GLEEPFNGLXSET3DFXMODEMESAPROC) (int  mode);
  extern GLEEPFNGLXSET3DFXMODEMESAPROC GLeeFuncPtr_glXSet3DfxModeMESA;

/* GLX_SGIX_visual_select_group */

/* Constants */

/* GLX_OML_swap_method */

/* Constants */

/* GLX_OML_sync_control */

/* Constants */
  typedef Bool (* GLEEPFNGLXGETSYNCVALUESOMLPROC) (Display * dpy, GLXDrawable  drawable, int64_t * ust, int64_t * msc, int64_t * sbc);
  extern GLEEPFNGLXGETSYNCVALUESOMLPROC GLeeFuncPtr_glXGetSyncValuesOML;
  typedef Bool (* GLEEPFNGLXGETMSCRATEOMLPROC) (Display * dpy, GLXDrawable  drawable, int32_t * numerator, int32_t * denominator);
  extern GLEEPFNGLXGETMSCRATEOMLPROC GLeeFuncPtr_glXGetMscRateOML;
  typedef int64_t (* GLEEPFNGLXSWAPBUFFERSMSCOMLPROC) (Display * dpy, GLXDrawable  drawable, int64_t  target_msc, int64_t  divisor, int64_t  remainder);
  extern GLEEPFNGLXSWAPBUFFERSMSCOMLPROC GLeeFuncPtr_glXSwapBuffersMscOML;
  typedef Bool (* GLEEPFNGLXWAITFORMSCOMLPROC) (Display * dpy, GLXDrawable  drawable, int64_t  target_msc, int64_t  divisor, int64_t  remainder, int64_t * ust, int64_t * msc, int64_t * sbc);
  extern GLEEPFNGLXWAITFORMSCOMLPROC GLeeFuncPtr_glXWaitForMscOML;
  typedef Bool (* GLEEPFNGLXWAITFORSBCOMLPROC) (Display * dpy, GLXDrawable  drawable, int64_t  target_sbc, int64_t * ust, int64_t * msc, int64_t * sbc);
  extern GLEEPFNGLXWAITFORSBCOMLPROC GLeeFuncPtr_glXWaitForSbcOML;

/* GLX_NV_float_buffer */

/* Constants */

/* GLX_SGIX_hyperpipe */

/* Constants */
  typedef GLXHyperpipeNetworkSGIX * (* GLEEPFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display * dpy, int * npipes);
  extern GLEEPFNGLXQUERYHYPERPIPENETWORKSGIXPROC GLeeFuncPtr_glXQueryHyperpipeNetworkSGIX;
  typedef int (* GLEEPFNGLXHYPERPIPECONFIGSGIXPROC) (Display * dpy, int  networkId, int  npipes, GLXHyperpipeConfigSGIX * cfg, int * hpId);
  extern GLEEPFNGLXHYPERPIPECONFIGSGIXPROC GLeeFuncPtr_glXHyperpipeConfigSGIX;
  typedef GLXHyperpipeConfigSGIX * (* GLEEPFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display * dpy, int  hpId, int * npipes);
  extern GLEEPFNGLXQUERYHYPERPIPECONFIGSGIXPROC GLeeFuncPtr_glXQueryHyperpipeConfigSGIX;
  typedef int (* GLEEPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display * dpy, int  hpId);
  extern GLEEPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC GLeeFuncPtr_glXDestroyHyperpipeConfigSGIX;
  typedef int (* GLEEPFNGLXBINDHYPERPIPESGIXPROC) (Display * dpy, int  hpId);
  extern GLEEPFNGLXBINDHYPERPIPESGIXPROC GLeeFuncPtr_glXBindHyperpipeSGIX;
  typedef int (* GLEEPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display * dpy, int  timeSlice, int  attrib, int  size, void * attribList, void * returnAttribList);
  extern GLEEPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC GLeeFuncPtr_glXQueryHyperpipeBestAttribSGIX;
  typedef int (* GLEEPFNGLXHYPERPIPEATTRIBSGIXPROC) (Display * dpy, int  timeSlice, int  attrib, int  size, void * attribList);
  extern GLEEPFNGLXHYPERPIPEATTRIBSGIXPROC GLeeFuncPtr_glXHyperpipeAttribSGIX;
  typedef int (* GLEEPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display * dpy, int  timeSlice, int  attrib, int  size, void * returnAttribList);
  extern GLEEPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC GLeeFuncPtr_glXQueryHyperpipeAttribSGIX;

/* GLX_MESA_agp_offset */

/* Constants */
  typedef unsigned int (* GLEEPFNGLXGETAGPOFFSETMESAPROC) (const void * pointer);
  extern GLEEPFNGLXGETAGPOFFSETMESAPROC GLeeFuncPtr_glXGetAGPOffsetMESA;

/* GLX_EXT_fbconfig_packed_float */

/* Constants */

/* GLX_EXT_framebuffer_sRGB */

/* Constants */

/* GLX_EXT_texture_from_pixmap */

/* Constants */
  typedef void (* GLEEPFNGLXBINDTEXIMAGEEXTPROC) (Display * dpy, GLXDrawable  drawable, int  buffer, const int * attrib_list);
  extern GLEEPFNGLXBINDTEXIMAGEEXTPROC GLeeFuncPtr_glXBindTexImageEXT;
  typedef void (* GLEEPFNGLXRELEASETEXIMAGEEXTPROC) (Display * dpy, GLXDrawable  drawable, int  buffer);
  extern GLEEPFNGLXRELEASETEXIMAGEEXTPROC GLeeFuncPtr_glXReleaseTexImageEXT;

/* GLX_NV_present_video */

/* Constants */
  typedef unsigned int * (* GLEEPFNGLXENUMERATEVIDEODEVICESNVPROC) (Display * dpy, int  screen, int * nelements);
  extern GLEEPFNGLXENUMERATEVIDEODEVICESNVPROC GLeeFuncPtr_glXEnumerateVideoDevicesNV;
  typedef int (* GLEEPFNGLXBINDVIDEODEVICENVPROC) (Display * dpy, unsigned int  video_slot, unsigned int  video_device, const int * attrib_list);
  extern GLEEPFNGLXBINDVIDEODEVICENVPROC GLeeFuncPtr_glXBindVideoDeviceNV;

/* GLX_NV_video_out */

/* Constants */

/* GLX_NV_swap_group */

/* Constants */
  typedef Bool (* GLEEPFNGLXJOINSWAPGROUPNVPROC) (Display * dpy, GLXDrawable  drawable, GLuint  group);
  extern GLEEPFNGLXJOINSWAPGROUPNVPROC GLeeFuncPtr_glXJoinSwapGroupNV;
  typedef Bool (* GLEEPFNGLXBINDSWAPBARRIERNVPROC) (Display * dpy, GLuint  group, GLuint  barrier);
  extern GLEEPFNGLXBINDSWAPBARRIERNVPROC GLeeFuncPtr_glXBindSwapBarrierNV;
  typedef Bool (* GLEEPFNGLXQUERYSWAPGROUPNVPROC) (Display * dpy, GLXDrawable  drawable, GLuint * group, GLuint * barrier);
  extern GLEEPFNGLXQUERYSWAPGROUPNVPROC GLeeFuncPtr_glXQuerySwapGroupNV;
  typedef Bool (* GLEEPFNGLXQUERYMAXSWAPGROUPSNVPROC) (Display * dpy, int  screen, GLuint * maxGroups, GLuint * maxBarriers);
  extern GLEEPFNGLXQUERYMAXSWAPGROUPSNVPROC GLeeFuncPtr_glXQueryMaxSwapGroupsNV;
  typedef Bool (* GLEEPFNGLXQUERYFRAMECOUNTNVPROC) (Display * dpy, int  screen, GLuint * count);
  extern GLEEPFNGLXQUERYFRAMECOUNTNVPROC GLeeFuncPtr_glXQueryFrameCountNV;
  typedef Bool (* GLEEPFNGLXRESETFRAMECOUNTNVPROC) (Display * dpy, int  screen);
  extern GLEEPFNGLXRESETFRAMECOUNTNVPROC GLeeFuncPtr_glXResetFrameCountNV;

/* GLX_NV_video_capture */

/* Constants */
  typedef int (* GLEEPFNGLXBINDVIDEOCAPTUREDEVICENVPROC) (Display * dpy, unsigned int  video_capture_slot, GLXVideoCaptureDeviceNV  device);
  extern GLEEPFNGLXBINDVIDEOCAPTUREDEVICENVPROC GLeeFuncPtr_glXBindVideoCaptureDeviceNV;
  typedef GLXVideoCaptureDeviceNV * (* GLEEPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC) (Display * dpy, int  screen, int * nelements);
  extern GLEEPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC GLeeFuncPtr_glXEnumerateVideoCaptureDevicesNV;
  typedef void (* GLEEPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC) (Display * dpy, GLXVideoCaptureDeviceNV  device);
  extern GLEEPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC GLeeFuncPtr_glXLockVideoCaptureDeviceNV;
  typedef int (* GLEEPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC) (Display * dpy, GLXVideoCaptureDeviceNV  device, int  attribute, int * value);
  extern GLEEPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC GLeeFuncPtr_glXQueryVideoCaptureDeviceNV;
  typedef void (* GLEEPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC) (Display * dpy, GLXVideoCaptureDeviceNV  device);
  extern GLEEPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC GLeeFuncPtr_glXReleaseVideoCaptureDeviceNV;

/* GLX_EXT_swap_control */

/* Constants */
  typedef int (* GLEEPFNGLXSWAPINTERVALEXTPROC) (Display * dpy, GLXDrawable  drawable, int  interval);
  extern GLEEPFNGLXSWAPINTERVALEXTPROC GLeeFuncPtr_glXSwapIntervalEXT;

/* GLX_NV_copy_image */

/* Constants */
  typedef void (* GLEEPFNGLXCOPYIMAGESUBDATANVPROC) (Display * dpy, GLXContext  srcCtx, GLuint  srcName, GLenum  srcTarget, GLint  srcLevel, GLint  srcX, GLint  srcY, GLint  srcZ, GLXContext  dstCtx, GLuint  dstName, GLenum  dstTarget, GLint  dstLevel, GLint  dstX, GLint  dstY, GLint  dstZ, GLsizei  width, GLsizei  height, GLsizei  depth);
  extern GLEEPFNGLXCOPYIMAGESUBDATANVPROC GLeeFuncPtr_glXCopyImageSubDataNV;

/* GLX_INTEL_swap_event */

/* Constants */

/* GLX_NV_multisample_coverage */

/* Constants */

/* GLX_AMD_gpu_association */

/* Constants */

/* GLX_EXT_create_context_es2_profile */

/* Constants */

/* GLX_NV_video_output */

/* Constants */
  typedef int (* GLEEPFNGLXGETVIDEODEVICENVPROC) (Display * dpy, int  screen, int  numVideoDevices, GLXVideoDeviceNV * pVideoDevice);
  extern GLEEPFNGLXGETVIDEODEVICENVPROC GLeeFuncPtr_glXGetVideoDeviceNV;
  typedef int (* GLEEPFNGLXRELEASEVIDEODEVICENVPROC) (Display * dpy, int  screen, GLXVideoDeviceNV  VideoDevice);
  extern GLEEPFNGLXRELEASEVIDEODEVICENVPROC GLeeFuncPtr_glXReleaseVideoDeviceNV;
  typedef int (* GLEEPFNGLXBINDVIDEOIMAGENVPROC) (Display * dpy, GLXVideoDeviceNV  VideoDevice, GLXPbuffer  pbuf, int  iVideoBuffer);
  extern GLEEPFNGLXBINDVIDEOIMAGENVPROC GLeeFuncPtr_glXBindVideoImageNV;
  typedef int (* GLEEPFNGLXRELEASEVIDEOIMAGENVPROC) (Display * dpy, GLXPbuffer  pbuf);
  extern GLEEPFNGLXRELEASEVIDEOIMAGENVPROC GLeeFuncPtr_glXReleaseVideoImageNV;
  typedef int (* GLEEPFNGLXSENDPBUFFERTOVIDEONVPROC) (Display * dpy, GLXPbuffer  pbuf, int  iBufferType, unsigned long * pulCounterPbuffer, GLboolean  bBlock);
  extern GLEEPFNGLXSENDPBUFFERTOVIDEONVPROC GLeeFuncPtr_glXSendPbufferToVideoNV;
  typedef int (* GLEEPFNGLXGETVIDEOINFONVPROC) (Display * dpy, int  screen, GLXVideoDeviceNV  VideoDevice, unsigned long * pulCounterOutputPbuffer, unsigned long * pulCounterOutputVideo);
  extern GLEEPFNGLXGETVIDEOINFONVPROC GLeeFuncPtr_glXGetVideoInfoNV;

/* GLX_EXT_scene_marker */

/* Constants */

/*****************************************************************
 * GLee functions
 *****************************************************************/
 
extern GLboolean GLeeInit( void );
extern GLint GLeeForceLink(const char * extensionName);
extern const char * GLeeGetErrorString( void );
extern const char * GLeeGetExtStrGL( void );
extern GLboolean GLeeEnabled(GLboolean * extensionQueryingVariable);

extern const char * GLeeGetExtStrWGL( void );
extern const char * GLeeGetExtStrGLX( void );


